<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StoreEdgeFD</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition">
            <summary>
            Represents the configuration necessary to operate in an environment.
            </summary>
            <remarks>
            This class should only contain members that differ from environment to environment. When something doesn't 
            vary, it should not be present in this class, and instead should be a compile-time constant. If a property
            is no longer used, or no longer varies, it should be removed.
            </remarks>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.CreateFromEnvironment">
            <summary>
            Create an environment definition from the environment environment variable.
            </summary>
            <returns>The created environment definition.</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.AadAuthenticationSettings">
            <summary>
                Gets the Azure Active Directory authentication settings
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.AllPrefixes">
            <summary>
            Gets all prefixes used by the service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.CertificatesToInstall">
            <summary>
            Gets Certificates that are to be installed in setup.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.IsDeployedEnvironment">
            <summary>
            Property gets set when code gets deployed
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.ServicePrefix">
            <summary>
            Gets the service's uri prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.ServiceHttpsPrefix">
            <summary>
            Gets the service's https uri prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.SslCertificate">
            <summary>
                Gets SSL certificate to install, or null if none needed.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.ProvidersConfiguration">
            <summary>
            Gets the configuration data needed to setup the partner provider services (e.g. BigCatalog)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.ForceUpdateRuleFileName">
            <summary>
            Gets the value indicating the forced client update rule file name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.PrivateCatalogSetAccessRuleFileName">
            <summary>
            Gets or sets the value indicating the private catalog set access rule file name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.MaxRequestsExecuting">
            <summary>
            Gets the value indicating the number of requests that can be executed by the service at a single time
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.MaxRequestAccepts">
            <summary>
            Gets a value indicating the number of requests that can be accepted by OWIN at a time
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.RequestQueueLength">
            <summary>
            Gets a value indicating the length of the Http.sys Queue
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.DisableForceUpdateCheck">
            <summary>
            Gets or sets a value indicating whether min version based forced update check should be applied.
            This is mainly a test override to avoid literally changing all test code to meet min version changes over time.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition.IsPreviewEnabled">
            <summary>
            Indicate if the current machine is in preview mode
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.DevelopmentEnvironmentDefinition.AadAuthenticationSettings">
            <summary>
                Gets the Azure Active Directory authentication settings
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.DevelopmentEnvironmentDefinition.ForceUpdateRuleFileName">
            <summary>
            Gets the value indicating the forced client update rule file name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.IntegrationEnvironmentDefinition.AadAuthenticationSettings">
            <summary>
                Gets the Azure Active Directory authentication settings
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.IntegrationEnvironmentDefinition.SslCertificate">
            <summary>
                Gets SSL certificate to install, or null if none needed.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Configuration.LocalBoxEnvironmentDefinition">
            <summary>
            This defines the environment for running the service on the local dev box
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.LocalBoxEnvironmentDefinition.AadAuthenticationSettings">
            <summary>
                Gets the Azure Active Directory authentication settings
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.LocalBoxEnvironmentDefinition.SslCertificate">
            <summary>
                Gets SSL certificate to install, or null if none needed.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.LocalBoxEnvironmentDefinition.ForceUpdateRuleFileName">
            <summary>
            Gets the value indicating the forced client update rule file name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.IntPpeEnvironmentDefinition.AadAuthenticationSettings">
            <summary>
                Gets the Azure Active Directory authentication settings
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.IntPpeEnvironmentDefinition.SslCertificate">
            <summary>
                Gets SSL certificate to install, or null if none needed.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProductionEnvironmentDefinition.ShadowTargetMapping">
            <summary>
            Note that these machine names can change over time as they are taken our or swapped
            This is why we will use three machines and assign 30 percent of their traffic to shadow
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.ProductionEnvironmentDefinition.AadAuthenticationSettings">
            <summary>
                Gets the Azure Active Directory authentication settings
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.ProductionEnvironmentDefinition.SslCertificate">
            <summary>
                Gets SSL certificate to install, or null if none needed.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProvidersConfiguration.DefaultAggregationTimeoutSeconds">
            <summary>
            Default timeout for aggregation
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProvidersConfiguration.DefaultTimeoutSeconds">
            <summary>
            Default timeout for outbound provider calls
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProvidersConfiguration.DefaultRatingsTimeoutSeconds">
            <summary>
            Default timeout for outbound Ratings provider calls
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProvidersConfiguration.DefaultRatingsEntitlementsTimeoutSeconds">
            <summary>
            Default timeout for Ratings Entitlements call
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Configuration.ProvidersConfiguration.CreateUri(System.String,System.String)">
            <summary>
            creates uri from the provided string, inserting dataCenter if required
            </summary>
            <param name="uriString"></param>
            <param name="dataCenter"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.ProvidersConfiguration.ConfigurationScope">
            <summary>
            The scope for which this configuration is valid (DNET / Prod)
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntPpeProvidersConfiguration.curatedConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntPpeProvidersConfiguration.previewCuratedConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntPpeProvidersConfiguration.pageConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntPpeProvidersConfiguration.previewPageConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntProvidersConfiguration.curatedConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntProvidersConfiguration.previewCuratedConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntProvidersConfiguration.pageConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.IntProvidersConfiguration.previewPageConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProdProvidersConfiguration.curatedConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProdProvidersConfiguration.previewCuratedConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProdProvidersConfiguration.pageConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProdProvidersConfiguration.previewPageConfig">
            <summary>
            instantiated in the constructor
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.Configuration.ProdProvidersConfiguration.ratingsConfig">
            <summary>
            ratingsConfig holds configuration for the RnR endpoint. It is instantiated in the constructor
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Configuration.ContextExtensions">
            <summary>
            Helpers and extensions to make interacting with the HttpConfiguration and HttpRequest easier
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Configuration.SingleProviderConfiguration">
            <summary>
            This class packages the configuration needed for interacting with 
            a partner of the Store Edge service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.SingleProviderConfiguration.CacheItemTimeToLive">
            <summary>
            if caching is used, this the time to live for each cache item
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Configuration.SslCertificateSettings">
            <summary>
            Contains all of the settings necessary to configure an Ssl endpoint
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.SslCertificateSettings.ApplicationId">
            <summary>
            Application to list in the port binding
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Configuration.SslCertificateSettings.Certificate">
            <summary>
            The certificate to install and bind to the port
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.FamilySafety.FamilySafetyProvider.CallingServiceName">
            <summary>
            The name of the calling service.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.FamilySafety.FamilySafetyProvider.#ctor(System.Uri,System.String,System.Int64,System.String,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>FamilySafetyProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">Family Safety Uri</param>
            <param name="authenticationServiceEndpointAddress">The complete URI for the live services endpoint where tickets need to get generated from</param>
            <param name="authenticationSiteId">StoreFd siteId the incoming token is generated in</param>
            <param name="authenticationTargetSite">Target siteId the S2S token needs to be generated in</param>
            <param name="rpsCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the RPS certificate needed to call the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="logger">Logger</param>
            <param name="counters">CounterFactory</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.EdgeRoute.MatchUrl(System.String)">
            <summary>
            Checks if any of the URLs for this EdgeRoute matches the given URL.
            </summary>
            <param name="url">The url to check</param>
            <returns>True if any of the EdgeRoute's URLs matches the given url</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.EdgeRoute.GetPrefixForUrl(System.String)">
            <summary>
            Given the url, return the prefix for the correct version
            </summary>
            <param name="url">The url to match</param>
            <returns>The version's prefix</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.EdgeRoute.Routes">
            <summary>
            List of URLs and their Versions for this Route.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes">
            <summary>
            Class to store all Edge Route URLs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.AutoSuggestRoute">
            <summary>
            Route for AutoSuggest APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.CallerSpecificDataRoute">
            <summary>
            Route for CallerSpecificData APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.EntitlementsRoute">
            <summary>
            Route for Entitlements APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SearchRoute">
            <summary>
            Route for Search APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SearchByPublisherRoute">
            <summary>
            Route for SearchByPublisher APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SearchByExtensionRoute">
            <summary>
            Route for SearchByExtension APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SearchByProtocolRoute">
            <summary>
            Route for SearchByProtocols APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SearchByTagsRoute">
            <summary>
            Route for SearchByTags APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ProductAddonsRoute">
            <summary>
            Route for ProductAddons APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.EnterpriseRoute">
            <summary>
            Route for Enterprise APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SubmitReviewRoute">
            <summary>
            Route for SubmitReview APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ReportReviewConcernRoute">
            <summary>
            Route for ReportReviewConcern APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ReportResponseConcernRoute">
            <summary>
            Route for ReportResponseConcern APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SubmitHelpfulnessVoteRoute">
            <summary>
            Route for SubmitHelpfulnessVote APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.UserReviewRoute">
            <summary>
            Route for UserReview APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.RatingsSummaryRoute">
            <summary>
            Route for RatingsSummary APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ProductReviewRoute">
            <summary>
            Route for ProductReview APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ProductDetailsRoute">
            <summary>
            Route for ProductDetails APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ProductDetailsBySkuRoute">
            <summary>
            Route for ProductDetailsBySku APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.BulkProductDetailsRoute">
            <summary>
            Route for BulkProductDetails APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.PurchaseRoute">
            <summary>
            Route for Purchase APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.PicksForYouRoute">
            <summary>
            Route for PicksForYou APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.RelatedProductsRoute">
            <summary>
            Route for RelatedProducts APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.AddonsRoute">
            <summary>
            Route for Addons APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.TopListsRoute">
            <summary>
            Route for TopLists APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.BrowseListsRoute">
            <summary>
            Route for BrowseLists APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.CategoryRoute">
            <summary>
            Route for Category APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.FiltersRoute">
            <summary>
            Route for Filters APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ErrorInfoRoute">
            <summary>
            Route for ErrorInfo APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.SpotlightRoute">
            <summary>
            Route for Spotlight APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.OemDiscoveryRoute">
            <summary>
            Route for OemDiscovery APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.FixedNavigationRoute">
            <summary>
            Route for FixedNavigation APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.NavigationByNameRoute">
            <summary>
            Route for NavigationByName APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.PagesRoute">
            <summary>
            Route for Pages APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.LiveTileRoute">
            <summary>
            Route for LiveTile APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ResourcesRoute">
            <summary>
            Route for Resources APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.ValidateResourcesRoute">
            <summary>
            Route for ValidateResources APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.CuratedChannelRoute">
            <summary>
            Route for CuratedChannel APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.MvDiscoveryRoute">
            <summary>
            Route for MvDiscovery APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.MvCollectionDiscoveryRoute">
            <summary>
            Route for MvCollectionDiscovery APIs
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Routes.CollectionsRoute">
            <summary>
            Route for Collections APIs
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.VersionedRoute.Url">
            <summary>
            The full URL with leading forward-slash
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.VersionedRoute.Version">
            <summary>
            The Route version
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.VersionedRoute.Prefix">
            <summary>
            The URL without tokens
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.VersionedRoute.Template">
            <summary>
            The URL without the leading forward-slash
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.AggregationSource">
            <summary>
                Abstraction interface over sources for aggregation. Also acts as a factory for creating the right 
                aggregation source.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.AggregationSource.ComponentName">
            <summary>
            Name of the component (to be used for logging purposes).
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.AggregationSource.LoggerFactory">
            <summary>
            Retrieves LoggerFactory from the request context.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.AggregationSource.LogWriter">
            <summary>
            Gets the log writer from the logger
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer.StringDetokenizer.KeyValueRegexPool">
            <summary>
            Regular expression to parse out tokens that are of the format "name={value}". These reside in the query
            string and should be stripped out completely (including the key) if the value is null to keep the resulting
            semantics consistent. When we strip out a key-value pair from a query string due to a null value, we also 
            need to remove the trailing ampersand if one exists.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer.StringDetokenizer.ClientTokenRegex">
            <summary>
            Regular expression to parse out client tokens, that is, tokens that we don't know how to fill out on the service.
            We transform these tokens into regular tokens as part of detokenization, for the client to fill them out. Client
            tokens are of the format "{{token}}"
            e.g. "/channels/products/{{productId}}" transforms into "/channels/products/{productId}"
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer.StringDetokenizer.TokenRegexPool">
            <summary>
            Regular expression to parse out tokens that are not handled by the KeyValueRegex. For example path params,
            e.g. /channels/products/{productId}
            We also aim to exclude ClientTokens (e.g. {{token1}}).
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer.StringDetokenizer.DetokenizeNameEqualsValue(System.Text.StringBuilder)">
            <summary>
            Name equals value ("name={value}") format can only occur in the query string, so we need to handle stripping out 
            extra ampersands to keep the query string valid. This should only strip out the query string parameter when the
            query value is a token with no prefix or postfix. This is handled by the regex.
            </summary>
            <param name="sb"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer.StringDetokenizer.AddToken(System.Text.StringBuilder,System.String)">
            <summary>
            Adds a token to the sb string if the new token is not already present
            </summary>
            <param name="sb">The sb string</param>
            <param name="newTokenName">The new token to add</param>
            <returns>A new sb string composed of the original string plus the new token</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.RegexPool">
            <summary>
            Pools regex objects. Useful for highly concurrent environments,
            because Regex class performs poorly when used by many threads at once.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.BusinessLogic.Filters.ReviewsDeviceContentFilter">
            <summary>
            ContentFilter for Review L2 Page Device filter choices
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest">
            <summary>
            Generic placeholder for base request parameters
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.DebugKey">
            <summary>
            Debug key value to disclose debug messages
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.ParseAndValidateParameters(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Main entry point for parsing and validating all the parameters
            associated with this request.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.ParseAndValidateCommonParameters(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Parsing and validation code for parameters common to an
            hierarchy of request parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.ParseAndValidateSpecificParameters">
            <summary>
            Parsing and validation code for only the parameters specific 
            to this type of request. 
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.QueryParameters">
            <summary>
            The full set of query parameters provided in the request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.AdditionalParameters">
            <summary>
            returns supported query string parameter name and values not parsed and removed
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <remarks>this method will return null (and support all parameters names) unless overriden by inheriting class</remarks>
            <returns>set of supported parameter names for this request</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.Market">
            <summary>
            The market the calling client is in 
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.ValidatedMarket">
            <summary>
            the market the calling client is in
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.Locale">
            <summary>
            The locale of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.DeviceType">
            <summary>
            The Device type of the calling client, "w", "wp", "wa"
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.Architecture">
            <summary>
            The Architecture of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.Language">
            <summary>
            The language of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.DeviceFamily">
            <summary>
            device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.DeviceFamilyVersion">
            <summary>
            decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.CatalogLocales">
            <summary>
            Client preferred languages
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.ValidatedCatalogLocales">
            <summary>
            Client preferred languages
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.MobileOperator">
            <summary>
            The Mobile Operator ID of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.Oem">
            <summary>
            The OEM ID of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.ScmId">
            <summary>
            The Device Model of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.MediaType">
            <summary>
            The the media type of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.Hardware">
            <summary>
            The Hardware of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.PackageHardware">
            <summary>
            The PackageHardware of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.UseStub">
            <summary>
            Temporary parameter to denote if the request should be served with a stubbed response or not
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.UseV5">
            <summary>
            Optional parameter to indicate using v5 catalog and OMS APIs instead of the current v4 versions
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.MusicMarket">
            <summary>
            The music market of the calling client (xbox live music)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.UserSegments">
            <summary>
            The user's segment/experiment information
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.CatalogInfo">
            <summary>
            Gets the catalog info associated with this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.StoreType">
            <summary>
            Gets the store type (BusinessCatalogOnly, for instance)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.CatalogIds">
            <summary>
            Gets or sets the catalog IDs (used for enterprise calls)
            TODO: Multiple catalog support
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.CatalogTitles">
            <summary>
            Gets or sets the catalog titles
            TODO: Multiple catalog support
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.IsAadCatalog">
            <summary>
            Gets whether or not the Catalog is an AAD catalog
            TODO: Multiple catalog support
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.AccessToken">
            <summary>
            The MSA ticket or AAD token
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.Debug">
            <summary>
            Optional parameter to indicate whether or not to pass back debug information to client
            use ClientRequest.DebugKey as key value
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest.IsEnterpriseOnlyStore">
            <summary>
            Gets the value indicating if the caller is a business-catalog-only store
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedMarket">
            <summary>
            encapsulates the market parameter
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedMarket.Parse(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns true if the specified market is valid
            </summary>
            <param name="market">client provided market</param>
            <param name="operationContext"></param>
            <param name="cancellationToken"></param>
            <returns>new language list with few languages</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedMarket.GetMarketDictionary(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns the a dictionary of markets from the domain data service
            </summary>
            <param name="operationContext"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales">
            <summary>
            encapsulates the catalog locales parameter
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.localeDelimiter">
            <summary>
            the delimiter used for parsing and combining a list of locales
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.maximumLocales">
            <summary>
            the maximum number of locales to be parsed and validated
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.pseudoLocale">
            <summary>
            the start of a pseudo locale
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.defaultLocale">
            <summary>
            default locale to use if pseudo was provided, or there's no other valid locales
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.stringBuilderPool">
            <summary>
            Pool of string builders to use for concating the list of locales
            </summary>
            <remarks>
            initial compacity of each StringBuilder set to the maximum number of locales times the max length of locale plus 1 for comma
            </remarks>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.Parse(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            creates a ValidatedCatalogLocales object by parsing the specified locales string
            </summary>
            <param name="locales">Comma delimited list of locales to be parsed</param>
            <param name="operationContext"></param>
            <param name="cancellationToken"></param>
            <returns>new language list with few languages</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.GetLocaleDictionary(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns the a dictionary of locales from the domain data service
            </summary>
            <param name="operationContext"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.#ctor(System.String)">
            <summary>
            creates a ValidatedCatalogLocale for one valid locale
            </summary>
            <remarks>
            used by unit tests, no validation is done.  to parse and validate, call the static Parse method
            </remarks>
            <param name="validatedLocale">a valid locale</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            creates a ValidatedCatalogLocale where all the properties are specified
            </summary>
            <remarks>
            used by unit tests, no validation is done.  to parse and validate, call the static Parse method
            </remarks>
            <param name="originalUnvalidatedLocales"></param>
            <param name="allLocales"></param>
            <param name="firstLocale"></param>
            <param name="count"></param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.OriginalUnvalidatedLocales">
            <summary>
            the complete unvalidated, untrimmed, comma delimited string provided by client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.AllLocales">
            <summary>
            the first up to maximum validated locales concated into a comma delimited string
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.FirstLocale">
            <summary>
            the first locale provided
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales.Count">
            <summary>
            the total number of validated locales
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AgileStoreRequest">
            <summary>
            Generic placeholder for base agile store request parameters
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AgileStoreRequest.CheckIfPreviewAuthorized(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext)">
            <summary>
            Determines if a request is authorized to use preview feature
            </summary>
            <param name="opCtx">Operation context</param>
            <returns>True if the request is authorized to use preview feature, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AgileStoreRequest.ParseAndValidateCommonParameters(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Parsing and validation code for parameters common to an
            hierarchy of request parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AgileStoreRequest.ClientAppVersion">
            <summary>
            The client app version (included os info) of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AgileStoreRequest.NonemptyResult">
            <summary>
            Gets or sets the flag indicating if a request should be made to AgileStore
            to get the latest data, if the cached channel is empty.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AgileStoreRequest.PreviewToken">
            <summary>
            Get or sets the preview token
            [PreviewFeature]
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest.ChannelId">
            <summary>
            The channel ID being requested. (Eg. channel.spotlight)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest.PageSize">
            <summary>
            Gets or sets the number of items per page
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest.SkipItems">
            <summary>
            Gets or sets the number of skipped item
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest.ContinuationToken">
            <summary>
            Gets or sets the continuation token
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest.DataVersion">
            <summary>
            Gets or sets the data version
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ItemizedCatalogRequest.PageSize">
            <summary>
            Max number of items expected to return
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ItemizedCatalogRequest.SkipItems">
            <summary>
            Specifies the number of items to skip (offset of start index)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ItemizedCatalogRequest.PageToken">
            <summary>
            The opaque blob to pass back to server when navigating on the same result set
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ItemizedCatalogRequest.PageSizeWithDefault">
            <summary>
            Max number of items expected to return with a default if the value was not specified
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.Request.MvDiscoveryRequest.ToServiceProviderRequest">
            <summary>
            creates the request for sending to the service provider
            We only request for Video: series, movie and collection. For music: song, album and collection
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.BusinessLogic.Request.MvDiscoveryRequest.ClientAppVersion">
            <summary>
            The client app version (included os info) of the calling client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.BusinessLogic.Request.MvDiscoveryRequest.ClientType">
            <summary>
            Gets or sets the type of the calling client, for us, it is msstore
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.BusinessLogic.Request.MvDiscoveryRequest.ChannelId">
            <summary>
            The channel ID being requested. (Eg. music.spotlight)
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RecoClientRequest.AddCommonParameters(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoBaseRequest)">
            <summary>
            Adds common paging parameters to a RecoBaseRequest
            </summary>
            <param name="request">The RecoBaseRequest.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RecoClientRequest.TopCategory">
            <summary>
            Gets the TopCategory for Reco request. It uses MediaType query string for this value.
            But that value is already parsed by the base class ClientRequest.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RequestContext">
            <summary>
            Container class for information pertaining to the request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RequestContext.Clone">
            <summary>
            Clone a new RequestContext with new QueryParameters.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.BusinessLogic.CategoriesContentFilterFactory">
            <summary>
            Creates Category and Subcategory ContentFilters for each ProductType by getting data from DomainDataCache
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.CategoriesContentFilterFactory.CreateAppCategoryContentFilter(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest,System.Boolean,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns ContentFilter for App categories
            </summary>
            <param name="filtersRequest"></param>
            <param name="includeSubcategories"></param>
            <param name="operationContext"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.CategoriesContentFilterFactory.CreateGameCategoryContentFilter(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns ContentFilter for Game categories
            </summary>
            <param name="filtersRequest"></param>
            <param name="operationContext"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.CategoriesContentFilterFactory.CreateMovieCategoryContentFilter(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns ContentFilter for Movie categories
            </summary>
            <param name="filtersRequest"></param>
            <param name="operationContext"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.CategoriesContentFilterFactory.CreateTVCategoryContentFilter(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns ContentFilter for Tv categories
            </summary>
            <param name="filtersRequest"></param>
            <param name="operationContext"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.CategoriesContentFilterFactory.CreateMusicCategoryContentFilter(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest,System.Boolean,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns ContentFilter for Music categories
            </summary>
            <param name="filtersRequest"></param>
            <param name="includeSubcategories"></param>
            <param name="operationContext"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.CategoriesContentFilterFactory.CreateAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper,System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            creates the ContentFilter
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.Entitlements.EntitlementProduct.ProductId">
            <summary>
            ProductId of item
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.Entitlements.EntitlementProduct.SkuId">
            <summary>
            SkuId of Item
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.mininmumNonV5Version">
            <summary>
            Minimum non V5 version has been artificially inflated because OMS isn't ready to handle V6 prod traffic
            This will also give a test hook for E2E purchase tests against OMS V6 in prod
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.includedV5Versions">
            <summary>
            List of QFE builds that don't contain the AppVersion
            These AppVersions needs to use V5
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.SetInternalBillingInformation(Microsoft.MarketplaceServices.PurchaseService.Contracts.V5.OrderV5)">
            <summary>
            Sets the purchase request's internal.BillingInformation from order Response
            </summary>
            <param name="orderV5">V4 Order Response</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.ParseAndValidateSpecificParameters">
            <summary>
            Parsing and validation code for only the parameters specific 
            to this type of request. 
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.GetDeviceType">
            <summary>
            Converts the device type found in the query params, if any, to a value accepted by orders.
            </summary>
            <returns>A device type that is suitable for the orders service.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.GetInternalCatalogContext(Microsoft.Marketplace.Storefront.Contracts.V1.CatalogContext)">
            <summary>
            Maps the Client Contract version of CatalogContext to the Internal Purchase Provider CatalogContext
            </summary>
            <param name="catalogContext">Client Contract CatalogContext</param>
            <returns>Internal Purchase Provider CatalogContext</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.GetInternalClientContext(Microsoft.Marketplace.Storefront.Contracts.V1.ClientContext,System.String,System.String,System.String)">
            <summary>
            Maps the Client Contract version of ClientContext to the Internal Purchase Provider ClientContext
            </summary>
            <param name="clientContext">Client Contract ClientContext</param>
            <param name="ipAddress">IP address of calling client</param>
            <param name="locale">Locale of client</param>
            <param name="catalogLocales">Client preferred languages</param>
            <returns>Internal Purchase Provider ClientContext</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.GetInternalLineItemV5(System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.PurchaseLineItem})">
            <summary>
            Maps the Client Contract version of PurchaseLineItem to the Internal Purchase Provider LineItem
            </summary>
            <param name="purchaseLineItems">Client Contract PurchaseLineItem</param>
            <returns>Internal Purchase Provider LineItem</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.GetInternalLineItemV6(System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.PurchaseLineItem})">
            <summary>
            Maps the Client Contract version of PurchaseLineItem to the Internal Purchase Provider LineItem
            </summary>
            <param name="purchaseLineItems">Client Contract PurchaseLineItem</param>
            <returns>Internal Purchase Provider LineItem</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.ShouldClientUseV5Provider">
            <summary>
            Looks at the client app version to see if OMS V5 must be used
            Older clients can only use V5
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.UserId">
            <summary>
            Purchaser identifier, "me" if you are making the purchase for yourself
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.CatalogContext">
            <summary>
            Catalog Details <see cref="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.CatalogContext"/>
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.ClientContext">
            <summary>
            Client Details <see cref="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.ClientContext"/>
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.AuthorizationToken">
            <summary>
            Partner authentication header value.
            Warning: To access this property, make sure that ParseAndValidateParameters has been called, which is usually done
            immediately after the instantiation of the request object. But don't access this property in constructor and cache it,
            for instance, because the CatalogInfo is created by by ParseAndValidateParameters.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.AuthTokensWithPrefix">
            <summary>
            All auth tokens from request with prefixes
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.V5PurchaseLineItems">
            <summary>
            List of V5 items to add to order
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.V6PurchaseLineItems">
            <summary>
            List of V6 items to add to order
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.IsPIRequired">
            <summary>
            Flag to indicate if a payment instrument is required to complete the purchase
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.UserPuid">
            <summary>
            The Puid of the purchase requesting User
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.GlobalDeviceId">
            <summary>
            Global DeviceId of requesting device
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.HardwareId">
            <summary>
            HardwareId of requesting device
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.StoreUser">
            <summary>
            The StoreUser object for the request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.UseOmsV5">
            <summary>
            Indicates whether or not client request must use OMS V5 provider
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.SkipDeviceRegistration">
            <summary>
            Sets flag to skip device registration check
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.BillingInformation">
            <summary>
            Sets the paymentInstrument to use when checking out an order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.CampaignId">
            <summary>
            Gets or sets the campaign Id (CID) for the line item.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.OptionalCampaignId">
            <summary>
            Gets or sets the optional campaign identifier (OCID) of the item to add to the order. 
            This is sometimes called the Microsoft CID, but was changed to OCID for backward compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest.UseMusicMarket">
            <summary>
            Param from client to specify if we need to use the music market instead of regular market for OMS request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RatingsRequestBinder">
            <summary>
            Ratings request bind helper for collecting common params
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter">
            <summary>
                Class to format catalog products into client response objects.
            </summary>
            <summary>
            Class to format products into client response objects.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatAddOnV3(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            Formats a product from the V5 catalog into a client AddOn response object
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="product">The catalog product</param>
            <param name="clientRequest">The locale from the client request</param>
            <returns>An AddOn instance.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatAddOn(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.AddOn,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Boolean)">
            <summary>
            Formats a product from the V5 catalog into a client AddOn response object
            </summary>
            <param name="productContext">The context containing the catalog product</param>
            <param name="addOn">The addon to be used as the formatting result</param>
            <param name="clientRequest">The client request</param>
            <param name="excludeDetails">Should details be excluded (for Bulk Browse scenarios not all details are needed)</param>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.NoDescriptionClientVersion">
            <summary>
            the minimum clientAppVersion that will not have description in ProductSummary responses
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.DefaultImageItems">
            <summary>
            ImageItem instance to use when there is no images available
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.#ctor">
            <summary>
                Empty constructor used for V3 Product Formatters
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
                Constructor for V3 and beyond Product formatters. This constructor allows methods to call into DDS service
                for product detail localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache">
                <see cref="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.DomainDataCache"/>
            </param>
            <param name="loggingContext">
                <see cref="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.LoggingContext"/>
            </param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatUri(System.String)">
            <summary>
                Safely formats strings into Uris.
            </summary>
            <param name="uri">The string representation of the uri.</param>
            <returns>A Uri if the string is a valid Uri, else null.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.IncludeDescription(System.Boolean,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            returns true if description should be included in the response, false otherwise
            </summary>
            <param name="excludeDetails">flag indicating if details should be excluded</param>
            <param name="clientRequest">clientRequest to get AppVersion</param>
            <returns>true if description should be included in the response, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatImages(System.Collections.Generic.IEnumerable{Microsoft.MarketplaceServices.DisplayCatalog.BondModel.v3.Image},Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,System.Boolean)">
            <summary>
                Formats a list of catalog images into a client images.
            </summary>
            <param name="images">The catalog images.</param>
            <param name="productContext">The context for the product being formatted</param>
            <param name="excludeDetails">For bulk browse scenarios should details (Screenshots currently) be excluded</param>
            <returns>A client image representation of the catalog image.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatRatings(System.Collections.Generic.IList{Microsoft.MarketplaceServices.DisplayCatalog.BondModel.v3.Usage},Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary)">
            <summary>
                Formats a catalog usageData into a client average rating and rating count.
            </summary>
            <param name="usageData"></param>
            <param name="productSummary"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatImage(Microsoft.MarketplaceServices.DisplayCatalog.BondModel.v3.Image,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5)">
            <summary>
                Formats a catalog image into a client image.
            </summary>
            <param name="image">The catalog image.</param>
            <param name="productContext">The context for the product being formatted</param>
            <returns>A client image representation of the catalog image.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetLocalizedDomainDataAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataRequest,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            localizes items by calling the domain data service
            </summary>
            <param name="productContext"></param>
            <param name="domainDataRequest"></param>
            <param name="itemsToLocalize"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetProductProperties``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5)">
            <summary>
                Gets and casts the product properties from the product context
            </summary>
            <typeparam name="T">The type to cast the properties to</typeparam>
            <param name="productContext">The product context containing the product</param>
            <returns>The product properties cast to type T</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetProductMarketProperties``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5)">
            <summary>
                Gets and casts the product market properties from the product context
            </summary>
            <typeparam name="T">The type to cast the properties to</typeparam>
            <param name="productContext">The product context containing the product</param>
            <returns>The product market properties cast to type T</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetProductLocalizedProperties``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5)">
            <summary>
                Gets and casts the product localized properties from the product context
            </summary>
            <typeparam name="T">The type to cast the properties to</typeparam>
            <param name="productContext">The product context containing the product</param>
            <returns>The product properties cast to type T</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetSkuProperties``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities)">
            <summary>
                Gets and casts the sku properties
            </summary>
            <typeparam name="T">The type to cast the properties to</typeparam>
            <param name="skuAvailabilities">The sku-availability tuple</param>
            <returns>The sku market properties cast to type T</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetSkuMarketProperties``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities)">
            <summary>
                Gets and casts the sku market properties
            </summary>
            <typeparam name="T">The type to cast the properties to</typeparam>
            <param name="skuAvailabilities">The sku-availability tuple</param>
            <returns>The sku market properties cast to type T</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetSkuLocalizedProperties``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities)">
            <summary>
                Gets and casts the sku localized properties
            </summary>
            <typeparam name="T">The type to cast the properties to</typeparam>
            <param name="skuAvailabilities">The sku-availability tuple</param>
            <returns>The sku localized properties cast to type T</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetPriceInfo(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities,System.String,System.String,System.String)">
            <summary>
                Gets the price information for a product
            </summary>
            <param name="skuAvailabilities">The sku-availability tuple to get the price info for.</param>
            <param name="locale">The request locale</param>
            <param name="productType">The productType e.g. MusicAlbum</param>
            <param name="market">The request market</param>
            <returns>a PriceInfo instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetPriceInfo(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities,System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability)">
            <summary>
                Gets the price information for a product
            </summary>
            <param name="skuAvailabilities">The sku-availability tuple to get the price info for.</param>
            <param name="locale">The request locale</param>
            <param name="market">The request market</param>
            <param name="availability">the availability</param>
            <returns>a PriceInfo instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetLowestPriceAvailability(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities)">
            <summary>
            returns the availability with the lowest price, ignoring availabilties that should be excluded
            fallback to first if no availability matches exclusion criteria (i.e. exclude non-purchaseable and os  requiredproofs)
            </summary>
            <param name="skuAvailabilities"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetLowestPriceAvailabilityOrFirst(System.Collections.Generic.IList{Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability},System.Double@,System.Boolean)">
            <summary>
            returns the availability with the lowest price, ignoring availabilties that should be excluded
            fallback to first if no availability matches exclusion criteria (i.e. exclude non-purchaseable and os  requiredproofs)
            </summary>
            <param name="availabilities"></param>
            <param name="minPrice">min price</param>
            <param name="fallbackToFirst">Should fallback to first or not</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.IsAvailabilityExcluded(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability,System.String)">
            <summary>
            returns true if the availability should be excluded (missing requiredAction, and has OperatingSystemCondition RequiredProofs)
            </summary>
            <param name="availability"></param>
            <param name="requiredAction"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ClearPrice(Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary)">
            <summary>
            remove all pricing information from productSummary
            </summary>
            <param name="productSummary"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ClearPrice(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.PriceInfo)">
            <summary>
            remove all pricing information from priceInfo
            </summary>
            <param name="priceInfo"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.GetPreferredSkuAvailabilities(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails)">
            <summary>
                Selects the preferred SkuAvailabilties from the product document
            </summary>
            <param name="product">The product</param>
            <returns>The preferred SkuAvailabilities</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatProductSummaryV3Async(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version6.AutosuggestResultProduct,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
                Formats a product from the V6 catalog APIs to a V3 Client Response
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="product">The product to format</param>
            <param name="clientRequest">The locale from the client request</param>
            <returns>A V3 client Product Summary</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatProductSummaryV3Async(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Threading.CancellationToken)">
            <summary>
                Formats a product from the V6 catalog APIs to a V3 Client Response
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="product">The product to format</param>
            <param name="clientRequest">The locale from the client request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>A V3 client Product Summary</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatProductDetailsV3Async(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Threading.CancellationToken)">
            <summary>
                Formats a product from the V5 catalog APIs to a V3 Client Response
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="product">The product to format</param>
            <param name="clientRequest">The locale from the client request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>A V3 client Product Details</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatProductSummary(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version6.AutosuggestResultProduct,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
                Formats a product from the Auto suggest catalog APIs to a V3 Client Response
            </summary>
            <param name="autosuggestResultProduct">the service provider response product</param>
            <param name="productSummary">The client product summary to use for the result</param>
            <param name="clientRequest">the client request</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatProductSummaryAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Formats a product from the V5 catalog APIs to a V3 Client Response
            </summary>
            <param name="productContext">The context holding the product and sku to be formatted</param>
            <param name="productSummary">The client product summary to use for the result</param>
            <param name="clientRequest">The client request</param>
            <param name="excludeDetails">Should details be excluded (for Bulk Browse scenarios not all details are needed)</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.FormatProductDetailsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Threading.CancellationToken)">
            <summary>
                Formats a product from the V5 catalog APIs to a V3 Client Response
            </summary>
            <param name="productContext">The context holding the product and sku to be formatted</param>
            <param name="productDetails">The client product details to use for the result</param>
            <param name="clientRequest">The client request</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5">
            <summary>
            A wrapper object for a Catalog Product and a selected SkuAvailability for the product.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5.Product">
            <summary>
            Gets or sets the product.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5.PreferredSkuAvailabilities">
            <summary>
            Gets or sets the SkuAvailability.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5.LogWriter">
            <summary>
            Gets or sets the log writer to use.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.PriceInfo">
            <summary>
                Data class containing price information
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterFactory">
            <summary>
            Static factory class to provide product formatters for each type of product.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterFactory.genericProductFormatter">
            <summary>
            The formatter for all other products (i.e. not unified app or movie)
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterFactory.productSchemaToFormatterMap">
            <summary>
            A map from a ProductType enum value to the formatter for that type.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterFactory.GetProductFormatter(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            Gets a ProductFormatter for a given V5 product.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="product">The catalog product.</param>
            <param name="clientRequest">Incoming client request</param>
            <returns>A product formatter capable of formatting the product.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterFactory.GetProductFormatter(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version6.AutosuggestResultProduct,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            Gets a ProductFormatter for a given product.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="product">The catalog product.</param>
            <param name="clientRequest">Incoming client request</param>
            <returns>A product formatter capable of formatting the product.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.MusicFormatter.#ctor">
            <summary>
            Empty constructor used for V3 Music Formatters
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.MusicFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Constructor for V3 and beyond Music formatters. This constructor allows methods to call into DDS service
            for music detail localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache"><see cref="T:Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache"/></param>
            <param name="loggingContext"><see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatProductSummaryAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Formats an OperatingSystem product from the V6 catalog APIs (V1 catalog draft schema) to a V3 Client Response
            </summary>
            <param name="productContext">The context holding the product and sku to be formatted</param>
            <param name="productSummary">The client product summary to use for the result</param>
            <param name="clientRequest">The client request</param>
            <param name="excludeDetails">Should details be excluded (for Bulk Browse scenarios not all details are needed)</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatProductDetailsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Threading.CancellationToken)">
            <summary>
                Formats an OperatingSystem product from the V6 catalog APIs (V1 catalog draft schema) to a V3 Client Response
            </summary>
            <param name="productContext">The context holding the product and sku to be formatted</param>
            <param name="productDetails">The client product details to use for the result</param>
            <param name="clientRequest">The the client request</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatSummaryProductProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary)">
            <summary>
                Formats the product properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productSummary">The product summary to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatSummaryProductMarketProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary)">
            <summary>
                Formats the product market properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productSummary">The product summary to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatSummaryProductLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary)">
            <summary>
                Formats the product localized properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productSummary">The product summary to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatSummarySkuLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,System.String,System.String,System.Boolean)">
            <summary>
                Formats the sku localized properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productSummary">The product summary to use for the result</param>
            <param name="deviceType">The device type from the client request</param>
            <param name="deviceFamily">New client send deviceFamily instead of deviceType</param>
            <param name="excludeDetails">Should details be excluded (for Bulk Browse scenarios not all details are needed)</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatContentId(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities)">
            <summary>
                Formats the content ID used for licensing by the client
            </summary>
            <param name="skuAvailabilities">The sku-availabilities tuple</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatDetailsProductProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails)">
            <summary>
                Formats the product properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productDetails">The product details to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatDetailsProductLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails)">
            <summary>
                Formats the product localized properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productDetails">The product details to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatDetailsSkuPropertiesAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails)">
            <summary>
                Formats the sku properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productDetails">The product details to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatDetailsSkuLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails,System.String,System.String)">
            <summary>
                Formats the sku localized properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productDetails">The product details to use for the result</param>
            <param name="deviceType">The device type from the client request</param>
            <param name="deviceFamily">New client send deviceFamily instead of deviceType</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.OperatingSystemFormatter.FormatDetailsSkuMarketPropertiesAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails,System.Threading.CancellationToken)">
            <summary>
                Formats the sku market properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productDetails">The product details to use for the result</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AppCompatibilityHelper.GetSupportedArchitectures(System.String)">
            <summary>
            Gets the set of supported architectures given a client architecture
            </summary>
            <param name="architecture">The client architecture</param>
            <returns>An empty set if the client architecture is null or empty, otherwise the set of supported architectures</returns>
            <exception cref="T:System.ArgumentException">The client architecture is not a known value</exception>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AppCompatibilityHelper.GetSupportedPlatformsFromDeviceType(System.String)">
            <summary>
            Gets the set of supported platform names given a client deviceType
            </summary>
            <param name="deviceType">The client deviceType</param>
            <returns>An empty set if the client deviceType is null or empty, otherwise the set of supported platform names</returns>
            <exception cref="T:System.ArgumentException">The client device type is not a known value</exception>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AppCompatibilityHelper.GetSupportedPlatformsFromDeviceFamily(System.String)">
            <summary>
            Gets the set of supported platform names given a client deviceFamily
            </summary>
            <param name="deviceFamily">The client deviceFamily</param>
            <returns>An empty set if the client deviceFamily is null or empty, otherwise the set of supported platform names</returns>
            <exception cref="T:System.ArgumentException">The client device family is not a known value</exception>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AppCompatibilityHelper.GetSupportedPlatforms(System.String,System.String)">
            <summary>
            gets the set of suported platform names given a client deviceFamily or deviceType
            </summary>
            <param name="deviceFamily">the client deviceFamily</param>
            <param name="deviceType">the client deviceType</param>
            <returns>supported platform names using deviceFamily name, if available, otherwise use device type, if available, otherwise an empty set</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AppCompatibilityHelper.GetValueOrDefault(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IEnumerable{System.String}},System.String,System.String)">
            <summary>
            Gets a default value (empty set) if the key is null or empty, otherwise gets the value from the dictionary
            </summary>
            <param name="dictionary">The dictionary</param>
            <param name="key">The key to lookup in the dictionary</param>
            <param name="keyName">The name of the key (for exception message).</param>
            <returns>a default value (empty set) if the key is null or empty, otherwise the value from the dictionary</returns>
            /// <exception cref="T:System.ArgumentException">The key was not found in the dictionary.</exception>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AppCompatibilityHelper.GetPackageHardwareRequirementShortName(System.String,System.Boolean)">
            <summary>
            Get the package hardware requirement short name
            </summary>
            <param name="hardwareRequirementName"></param>
            <param name="hwReqUseShortName"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AppCompatibilityHelper.DeviceFamily">
            <summary>
            constants for DeviceFamily
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CacheControlHelper.GetCacheControlMaxAgeForRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Will return a the max age for the request
            </summary>
            <param name="request">Input request</param>
            <returns>Returns true if endpoint has custom max age</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet">
            <summary>
            Helper class to pass back and forth (between client and service) information related to private catalogs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Construct an instance of the class.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.GetUniqueCatalogInfo">
            <summary>
            Get the unique CatalogInfo if the set only contains one catalog info
            </summary>
            <returns>The only CatalogInfo object with this set. If empty or more than one, then null.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.PopulateProperties(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Populate catalog info related properties for caller.
            </summary>
            <param name="propertyBag">the property bag to add these catalog properties.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.PopulateQueryParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Populate catalog infos as query parameters.
            </summary>
            <param name="queryParameters">the query parameter collection to add these pairs.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.CreateFromQueryParameters(System.Collections.Specialized.NameValueCollection,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter,System.Boolean,System.Boolean)">
            <summary>
            Create the CatalogInfoSet from Query parameters
            </summary>
            <param name="queryParameters">The flag indicating whether the manifests are fetched by AAD token</param>
            <param name="logWriter">The log writer</param>
            <param name="processUserCatalogInfo">if we are processing user catalog info as opposed to product catalog info</param>
            <param name="removeFromCollection">whether or not we want to remove the parameter from the list</param>
            <returns>The instance with the proper info.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.CreateFromCatalogManifests(System.Boolean,System.Collections.Generic.IList{Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6})">
            <summary>
            Create the CatalogInfoSet from CatalogManifests queried from M$
            </summary>
            <param name="isAadCatalogs">The flag indicating whether the manifests are fetched by AAD token</param>
            <param name="catalogManifests">The CatalogManifests from M$</param>
            <returns>The instance with the proper info.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.ToUserCatalogInfoQueryString">
            <summary>
            Regardless whether the catalogInfo is for user or for product, make a user catalog info query string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.ToProductCatalogInfoQueryString">
            <summary>
            Regardless whether the catalogInfo is for user or for product, make a product catalog info query string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.Item(System.String)">
            <summary>
            Indexer to get the CatalogInfo by the catalog id
            </summary>
            <param name="catalogId">the catalog id</param>
            <returns>The CatalogInfo object with matching catalogId if there is a id match. Otherwise, null.</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.IsEmptySet">
            <summary>
            Gets the value indicating if the set is empty.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.CatalogInfoIsNotSet">
            <summary>
            Gets the value indicating if we already know the catalog information is already known, thus no need to fetch.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.IsAadCatalog">
            <summary>
            Gets the value indicating if the catalog information is from AAD.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.IsUserCatalogInfoSet">
            <summary>
            Gets the value indicating if the set is for user.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.CatalogIds">
            <summary>
            Gets the value represents the concatenated catalog ids of the set.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet.CatalogTitles">
            <summary>
            Gets the value represents the concatenated catalog titles of the set.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo">
            <summary>
            Information we will share with client about private catalogs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.EncryptText(System.String)">
            <summary>
            Encrypt the plainText
            </summary>
            <param name="plainText"></param>
            <returns>the encrypted text</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.DecryptText(System.String)">
            <summary>
            Decrypt the encrypted text. For backward compatibility, we may actually encounter plain text and the caller
            ought to deal with FormatException.
            </summary>
            <param name="encryptedText">the encrypted text. But it could also be just plain text.</param>
            <returns>the decrypted text.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.TrySetCatalogTitle(System.Boolean,System.String)">
            <summary>
            CatalogTitle is now considered PII and so we have to encrypt it. 
            If the title can't be decrypted, then it means we have staled datasource
            and we will allow that to continue to work.
            </summary>
            <param name="encrypted">whether the caller believe it's encrypted or not</param>
            <param name="title"></param>
            <returns>true if the set is performed as what encrypted parameter indicates.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.ToProductCatalogInfoQueryString">
            <summary>
            Regardless whether the catalogInfo is for user or for product, make a product catalog info query string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.ToUserCatalogInfoQueryString">
            <summary>
            Regardless whether the catalogInfo is for user or for product, make a user catalog info query string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.CloneManifest(Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            During search, caller may have multiple user catalogs. But AgileStore will only return one and we will have to
            use the one given by AgileStore and clone as many manifest for search section.
            </summary>
            <param name="enterpriseSearchSectionManifest">the enterprise search section manifest defined by AgileStore</param>
            <returns>The modified version of the manifest with all necessary properties updated.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.CloneCommandInfoTable(System.Collections.ObjectModel.ReadOnlyDictionary{System.String,Microsoft.Marketplace.Storefront.Contracts.V1.CommandInfo})">
            <summary>
            Clone a command info table from a template
            </summary>
            <param name="template">the command into table as a template.</param>
            <returns>a new command info table</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.UpdateCommandInfoTableForPrivatePdp(System.Collections.ObjectModel.ReadOnlyDictionary{System.String,Microsoft.Marketplace.Storefront.Contracts.V1.CommandInfo})">
            <summary>
            Update a command info table from a template
            </summary>
            <param name="cmdInfoTable">the command into table to update.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.CatalogId">
            <summary>
            Gets or sets the id of the catalog, which is needed when we query contents of the catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.PlainCatalogTitle">
            <summary>
            Gets or sets the catalog title, which is needed for display purposes.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.TokenType">
            <summary>
            Gets or sets the value (either MSA or AAD) indicating which ticket/token we used to query the catalogs.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.IsUserCatalogInfo">
            <summary>
            Gets or sets the value indicating if this is the user's catalog info
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.IsAadCatalog">
            <summary>
            Check if the catalog info is from an AAD.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfo.IsRetailCatalog">
            <summary>
            Gets the value indicating if the catalog info represents a retail catalog.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ContentRatingsHelper.GetContentRatingsAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.ContentRatingsRequestV6,System.Threading.CancellationToken)">
            <summary>
            returns Catalog RatingBoards metadata as is
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="contentRatingsRequest"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>returns a CategoryList for the specified request</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper">
            <summary>
            returns categories, subcategories from Domain Data Service, with categories with insufficient number of products removed
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.MinimumProductCount">
            <summary>
            minimum number of products to return a category
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.CreateCategoryHelper(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext)">
            <summary>
            creates a CategoryHelper approprivate for the specified mediaType
            </summary>
            <param name="mediaType"></param>
            <param name="clientRequest"></param>
            <param name="operationContext"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.ClientRequest">
            <summary>
            the request instance sent by client
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.DomainDataCache">
            <summary>
            provider for categories/subcategories, genres/subgenres
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.BigCatalogProvider">
            <summary>
            provider for determining the number of products in a category
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.LoggingContext">
            <summary>
            
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.DomainDataComparer">
            <summary>
            used for sorting categories
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GetCategories(System.Threading.CancellationToken)">
            <summary>
            Returns a list of categories, removing any categories with insufficent number of products
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GetCategoriesAsDictionary(System.Threading.CancellationToken)">
            <summary>
            Returns a dictionary of localized category names.
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The dictionary of localized category names</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GetSubcategories(Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataResponseItem,System.Threading.CancellationToken)">
            <summary>
            returns a list of subcategories for the specified category, if any subcategories exist, otherwise returns null
            </summary>
            <param name="category">The category that the subcategory belongs to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GetSubcategoriesAsDictionary(Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataResponseItem,System.Threading.CancellationToken)">
            <summary>
            Returns a dictionary of subcategories for the specified category if any subcategories 
            exist, otherwise returns null
            </summary>
            <param name="category">The category that the subcategories belong to</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The dictionary of localized subcategories</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.HasMinimumProductCount(Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataResponseItem,System.Threading.CancellationToken)">
            <summary>
            returns true if the specified category has greater than or equal to the minimum required product count
            </summary>
            <param name="category"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.CreateCategoryRequest">
            <summary>
            returns a DomainDataRequest instance for getting Category data from DomainDataCache
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.CreateSearchForProductCount(System.String)">
            <summary>
            returns a SearchRequestV6 instance for getting the number of products for a specific category
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.CreateSubcategoryRequest(System.String)">
            <summary>
            returns a DomainDataRequest instance for getting Subcategory data from DomainDataCache
            </summary>
            <param name="categoryKey"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.AppCategoryHelper">
            <summary>
            subclass for getting categories specifically for Apps
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.AppCategoryHelper.CreateCategoryRequest">
            <summary>
            returns a DomainDataRequest instance for getting App categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.AppCategoryHelper.CreateSubcategoryRequest(System.String)">
            <summary>
            returns a DomainDataRequest instance for getting App subcategories
            </summary>
            <param name="categoryKey">the name of the parent category</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.AppCategoryHelper.CreateSearchForProductCount(System.String)">
            <summary>
            returns a SearchRequestV6 instance for getting the number of products for a specific category
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GameCategoryHelper">
            <summary>
            subclass for getting categories specifically for Games
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GameCategoryHelper.CreateCategoryRequest">
            <summary>
            returns a DomainDataRequest instance for getting Game categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GameCategoryHelper.CreateSubcategoryRequest(System.String)">
            <summary>
            throws NotSupportedException, there's no subcategories for Game
            </summary>
            <param name="categoryKey"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.GameCategoryHelper.CreateSearchForProductCount(System.String)">
            <summary>
            returns a SearchRequestV6 instance for getting the number of products for a specific category
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.MovieCategoryHelper">
            <summary>
            subclass for getting categories specically for Movie
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.MovieCategoryHelper.CreateCategoryRequest">
            <summary>
            returns a DomainDataRequest instance for getting Movie categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.MovieCategoryHelper.CreateSubcategoryRequest(System.String)">
            <summary>
            throws NotSupportedException, there's no subcategories for Movie
            </summary>
            <param name="categoryKey"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.TVCategoryHelper">
            <summary>
            subclass for getting categories specifically for TV
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.TVCategoryHelper.CreateCategoryRequest">
            <summary>
            returns a DomainDataRequest instance for getting TV categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.TVCategoryHelper.CreateSubcategoryRequest(System.String)">
            <summary>
            throws NotSupportedException, there's no subcategories for TV
            </summary>
            <param name="categoryKey"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.MusicCategoryHelper">
            <summary>
            subclass for getting categories specifically for Music
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.MusicCategoryHelper.CreateCategoryRequest">
            <summary>
            returns a DomainDataRequest instance for getting music categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper.MusicCategoryHelper.CreateSubcategoryRequest(System.String)">
            <summary>
            returns a DomainDataRequest instance for getting music subcategories
            </summary>
            <param name="categoryKey">the name of the parent category</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataDictionaryProvider">
            <summary>
            Provider to fetch DomainData as a Dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataTypeProvider`1">
            <summary>
            Provider to fetch category or subcategory Domain Data from DDS.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataTypeProvider`1.GetDomainData(Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataRequest,System.Threading.CancellationToken)">
            <summary>
            Fetch the Domain Data of the given type.
            Can request either a Dictionary of localized DDS data or an IEnumerable of DomainDataResponseItem.
            </summary>
            <param name="request">The DDS request</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The requested Domain Data</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataTypeProvider`1.GetCategoryDomainData(System.Threading.CancellationToken)">
            <summary>
            Get category Domain Data from DDS.
            </summary>
            <returns>Category Domain data of the requested type</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataTypeProvider`1.GetSubcategoryDomainData(Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataResponseItem,System.Threading.CancellationToken)">
            <summary>
            Get subcategory Domain Data from DDS.
            </summary>
            <returns>Category Domain data of the requested type</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataDictionaryProvider.GetDomainData(Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataRequest,System.Threading.CancellationToken)">
            <summary>
            Fetches the DomainData as a Dictionary.
            </summary>
            <param name="request">The domain data request</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The DomainDataResponseItem dictionary</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataListProvider">
            <summary>
            Provider to fetch DomainData as a List of DomainDataResponseItem.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataListProvider.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CategoryHelper,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataComparer,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Create a new DomainDataListProvider.
            </summary>
            <param name="categoryHelper">The category helper</param>
            <param name="domainDataCache">The domain data cache</param>
            <param name="domainDataComparer">The domain data comparer</param>
            <param name="loggingContext">The logging context</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataListProvider.GetDomainData(Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.Contracts.DomainDataRequest,System.Threading.CancellationToken)">
            <summary>
            Fetches the DomainData as a list of DomainDataResponseItem.
            </summary>
            <param name="request">The domain data request</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The DomainDataResponseItem list</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataListProvider.GetCategoryDomainData(System.Threading.CancellationToken)">
            <summary>
            Gets the list of categories, removing any categories with insufficent number of products.
            </summary>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The list of categories</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.EntitlementsHelper.GetActiveAndFilteredEntitlementsAsync(Microsoft.Marketplace.Storefront.BusinessLogic.Request.EntitlementsRequestV3,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Service.Identity.Authentication.AuthTokenNodeBase},System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.Entitlements.EntitlementProduct},Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            Get the entitlement status on a list of products
            Returns a list of entitlements that is active and belongs to the user or the device
            </summary>
            <param name="clientRequest">Client entitlement request</param>
            <param name="authTokensWithPrefix">List of auth tokens containing prefix</param>
            <param name="products">List of products to check</param>
            <param name="providersManager">ProvidersManager object with a reference to the EntitlementCollections Provider</param>
            <param name="loggingContext">The logging context of the caller</param>
            <param name="logWriter">The current log writer</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.EntitlementsHelper.ExecuteQueryEntitlementCollectionsAsync(Microsoft.Marketplace.Storefront.BusinessLogic.Request.EntitlementsRequestV3,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Service.Identity.Authentication.AuthTokenNodeBase},Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            executes an Entitlements Collection query against the CollectionsFD provider and formats the response for client consumption
            </summary>
            <param name="clientRequest">Client entitlement request</param>
            <param name="authTokensWithPrefix">List of auth tokens containing prefix</param>
            <param name="providersManager">ProvidersManager object with a reference to the EntitlementCollections Provider</param>
            <param name="loggingContext">The logging context of the caller</param>
            <param name="logWriter">The current log writer</param>
            <returns>Returns a PageCollectionV1 Response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.EntitlementsHelper.ExecuteQueryEntitlementCollectionsAsync(Microsoft.Marketplace.Storefront.BusinessLogic.Request.EntitlementsRequestV3,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Service.Identity.Authentication.AuthTokenNodeBase},System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.Entitlements.EntitlementProduct},Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            executes an Entitlements Collection query against the CollectionsFD provider for specified productIds 
            </summary>
            <param name="clientRequest">Client entitlement request</param>
            <param name="authTokensWithPrefix">List of auth tokens containing prefix</param>
            <param name="products">A list of Tuple of String,String that represents ProductId,SkuId</param>
            <param name="providersManager">ProvidersManager object with a reference to the EntitlementCollections Provider</param>
            <param name="loggingContext">The logging context of the caller</param>
            <param name="logWriter">The current log writer</param>
            <returns>Returns a PageCollectionV1 Response for the requested products</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.EntitlementsHelper.IsEntitlementActive(Microsoft.MarketplaceServices.Collections.Contracts.V6.CollectionItemContractV6)">
            <summary>
            Checks if User is entitled to CollectionItem 
            </summary>
            <param name="collectionItem">CollectionItem</param>
            <returns>Boolean value of whether or not the user is entitled to item</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.EntitlementsHelper.AddMaxPageSizeToQueryParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Add the pageSize query parameters to the queryParameters if it doesn't exist
            </summary>
            <param name="queryParameters">Input query parameters</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DeviceTypeHelper.ToClientDeviceType(Microsoft.Marketplace.ChannelCommon.Contracts.V4.Definition.DeviceType)">
            <summary>
                This method is temporary until layout provider aligns with new ChannelCommon contracts
            </summary>
            <param name="deviceType">The ChannelCommon device type</param>
            <returns>The client representation of the deviceType</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DeviceTypeHelper.ConvertDeviceType(System.String)">
            <summary>
                Converts a client devicetype to the ChannelCommon representation
            </summary>
            <param name="deviceType">Client device type</param>
            <returns>ChannelCommon device type</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DeviceTypeHelper.ConvertDeviceTypeV5(System.String)">
            <summary>
            Converts a client devicetype to the ChannelCommon V5 representation
            </summary>
            <param name="deviceType">Client device type</param>
            <returns>ChannelCommon device type</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DeviceTypeHelper.DeviceFamilyFromDeviceType(System.String)">
            <summary>
            This is to make deviceType and deviceFamily co-exist on the service side before removing deviceType permanently.
            </summary>
            <param name="deviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.IdValidatorFormatter.ValidateAndFormatProductId(System.String,Microsoft.Marketplace.Storefront.Contracts.IdType)">
            <summary>
            Url decodes and then checks Id against expected format for that IdType. May do minor transformations to the id to adhere to expected M$ format
            </summary>
            <param name="productIdFromUrl"></param>
            <param name="idType"></param>
            <returns>Original or Formatted Id or Null if Id is known to be not valid</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.KeywordMatcher">
            <summary>
            Keyword matcher which is capable of doing full strings or partial strings
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.Keyword">
            <summary>
            Defines a prefix string and a minimum number of characters to consider a successful match.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.Keyword.MinCharacters">
            <summary>
            The minimum characters before a comparison is valid (for prefix matching)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.Keyword.Word">
            <summary>
            Target string
            </summary>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.LabCoreEvents">
            <summary>
            Lab core library events
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.LabCoreEvents.LogDebugInfo(Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,Microsoft.Diagnostics.Tracing.EventLevel,System.String,System.Object[])">
            <summary>
            Logs lab core debugging information
            </summary>
            <param name="logger">sequenced event logger</param>
            <param name="context">Logging context</param>
            <param name="level">Event level for the log</param>
            <param name="messageFormat">The message format string</param>
            <param name="args">The arguments for the message</param>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard">
            <summary>
            This class encapsulates how we check if a client's store version is satisfied.
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.CheckMinVersion(System.Version)">
            <summary>
            Check if the version meets min version rule. If not the caller should return proper error to the
            clients to upgrade.
            </summary>
            <param name="version">caller's version</param>
            <returns>True if and only if the given version is greater or equal to the min version and not in the excluded version list.
            If either min version or excluded list is null, then that part of the check is considered a pass.</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.CheckMaxVersion(System.Version)">
            <summary>
            Check if the version meets max version rule. If not the caller could forward the client to later version services.
            </summary>
            <param name="version">caller's version</param>
            <returns>True if and only if the given version is no greater. If the rule contains no max version, then it returns true.</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.CheckVersion(System.Version)">
            <summary>
            Check if the version meets the version rule (min, max, exclusions all combined).
            </summary>
            <param name="version">caller's version</param>
            <returns>true if and only if the given version passes the min version check and the max version check.</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.ToSimpleString">
            <summary>
            Gets the simple string version that only captures the min and max.
            </summary>
            <returns>The simple string more suitable for rule serialization.</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.Parse(System.String)">
            <summary>
            Parse the simple string version that only captures the min and max and return the VersionGuard instance.
            </summary>
            <param name="simpleVersionGuard">the simple version string (one generated from ToSimpleString)</param>
            <returns>The instance that is parsed from a simple string if successful. Otherwise, FormatException.</returns>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.MinVersion">
            <summary>
            Gets or sets a value indicating the min version that is considered a pass when it is checked.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.MaxVersion">
            <summary>
            Gets or sets a value indicating the max version that is considered a pass when it is checked.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.VersionGuard.ExcludedVersions">
            <summary>
            Gets or sets a value indicating all versions that have been excluded.
            </summary>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting">
            <summary>
            The basic definition of a random assignment experiment for AB testing analysis.
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.ToString">
            <summary>
            Get the short string for display purposes.
            </summary>
            <returns>a display string for logging.</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.GetHashCode">
            <summary>
            Override for this object to be used as a hash key
            </summary>
            <returns>the hash code based off the ID</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.Equals(System.Object)">
            <summary>
            Override for this object to be used as a hash key
            </summary>
            <param name="obj">the other object to compare</param>
            <returns>true if and only if the objects have the same ID</returns>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.ID">
            <summary>
            Gets or sets a value indicating the identity of the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.SamplePercent">
            <summary>
            Gets or sets a value indicating the percentage for both control and treatment. Valid values: 0 - 50
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.StartTime">
            <summary>
            Gets or sets a value indicating the time this experiment is going to start.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.Duration">
            <summary>
            Gets or sets a value indicating the duration of this experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.Provider">
            <summary>
            Gets or sets a value indicating the provider who defines it.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.TreatmentTag">
            <summary>
            Gets or sets a value indicating the opaque data of the object for treatment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.ControlTag">
            <summary>
            Gets or sets a value indicating the opaque data of the object for control.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.Description">
            <summary>
            Gets or sets a value indicating the description for the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting.EndTime">
            <summary>
            Gets a value indicating the end time of the experiment.
            </summary>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.OptInSelection">
            <summary>
            The definition of an explicit opt-in selection by the caller - the caller explicitly wants to be selected.
            </summary>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.Selection">
            <summary>
            The class defines the basic information our various selection process (random, opt-in, DnA, etc.) and
            is the base class for all such selections.
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.Selection.ToString">
            <summary>
            Override to provide easy logging and testing.
            </summary>
            <returns>A 3-part string with experiment id, assignment, and tag.</returns>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.Selection.ExperimentId">
            <summary>
            Gets or sets a value indicating the ID of the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.Selection.Tag">
            <summary>
            Gets or sets a value indicating the opaque data associated with the group.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.Selection.ExperimentType">
            <summary>
            Gets a value indicating the type of the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.Selection.Assignment">
            <summary>
            Gets a value indicating the how a caller is assigned.
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.OptInSelection.GetHashCode">
            <summary>
            Override for this object to be used as a hash key
            </summary>
            <returns>returns the ExperimentId</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.OptInSelection.Equals(System.Object)">
            <summary>
            Override for this object to be used as a hash key
            </summary>
            <param name="obj">the other object to compare</param>
            <returns>true if and only if the objects have the same ExperimentId.</returns>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.OptInSelection.ExperimentType">
            <summary>
            Gets a value indicating the type of the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.OptInSelection.Assignment">
            <summary>
            Gets a value indicating the how a caller is assigned.
            </summary>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler">
            <summary>
            This class defines the basic sampling logic for choosing experiments.
            </summary>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.MaxBucketNumber">
            <summary>
            The maximum bucket numbers. Make sure that this is at least multiple of 10.
            </summary>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.PercentSize">
            <summary>
            The number of buckets for 1 percent
            </summary>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.AllProviders">
            <summary>
            The constant to get all provider's ABTestSetting's.
            </summary>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.MaxPercent">
            <summary>
            This is the maximum percent for ABTestSetting.
            </summary>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.MySha256">
            <summary>
            The SHA256 for hashing.
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler"/> class.
            </summary>
            <param name="provider">a caller given identifier for selecting its experiments</param>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.Initialize(System.Collections.Generic.IEnumerable{Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting})">
            <summary>
            Initialize the object with the given JSON for experiment definitions.
            </summary>
            <param name="testSettings">the ABTestSetting definition</param>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.Randomize(System.String,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Perform a random selection of experiments and return the experiment's token to the caller.
            </summary>
            <param name="subjectId">the subject's ID</param>
            <param name="logger">a callback that handles various messages.</param>
            <param name="flightLoggingContext">flight context</param>
            <returns>A list of experiment token. See <see cref="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket"/> Draw function for detail.</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.AddTestSetting(Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting)">
            <summary>
            Add the given experiment if it is good to use for the sampler.
            </summary>
            <param name="setting">The ABTestSetting to add</param>
            <returns>true if added. False if it can't be used by this object.</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.Bucketize(System.String)">
            <summary>
            Get a consistent integer from 0 to ExperimentSampler.MaxBucketNumber based on the input's hash 
            </summary>
            <param name="content">the content to get a random value</param>
            <returns>a random bucket number from 0 to max-1 which is deterministic for content.</returns>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.Provider">
            <summary>
            Gets a value indicating the identity of the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.Experiments">
            <summary>
            Gets or sets a value indicating the identity of the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.MockRandomizer">
            <summary>
            Gets or sets test hook to override random bucket assignment
            </summary>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.RandomSampler.HashingFunc">
            <summary>
            Delegate signature for test hooks.
            </summary>
            <param name="content">content the hashing result will be based.</param>
            <returns>the hashing result</returns>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingSelection">
            <summary>
            The definition of a random sampling selection.
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingSelection.GetHashCode">
            <summary>
            Override for this object to be used as a hash key
            </summary>
            <returns>returns the ExperimentId</returns>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingSelection.Equals(System.Object)">
            <summary>
            Override for this object to be used as a hash key
            </summary>
            <param name="obj">the other object to compare</param>
            <returns>true if and only if the objects have the same ExperimentId and the same control/treatment.</returns>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingSelection.IsControl">
            <summary>
            Gets or sets a value indicating whether subject is select for the control group.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingSelection.IsTreatment">
            <summary>
            Gets a value indicating whether subject is select for the treatment group.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingSelection.ExperimentType">
            <summary>
            Gets a value indicating the type of the experiment.
            </summary>
        </member>
        <member name="P:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingSelection.Assignment">
            <summary>
            Gets a value indicating the how a caller is assigned.
            </summary>
        </member>
        <member name="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket">
            <summary>
            The basic definition of a random assignment experiment for AB testing analysis.
            </summary>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket.RandomDigits">
            <summary>
            This is a well-known random digits table that is very routinely used to produce some random numbers.
            We use this digits to generate random numbers when we decide which buckets should be assigned to treatment/control.
            </summary>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket.#ctor(Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.ABTestSetting,System.Func{System.String,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket"/> class.
            </summary>
            <param name="experimentSetting">The experiment the ticket is generated.</param>
            <param name="bucketingFunc">The random bucketing function</param>
        </member>
        <member name="M:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket.Draw(System.Int32)">
            <summary>
            Given a bucket number, a random but deterministic drawing for the input is performed for control, treatment, or no participating.
            </summary>
            <param name="bucketNumber">the bucket number for the drawing.</param>
            <returns>If the bucket is good, then an object reflecting the sampling result. Otherwise, null.</returns>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket.TreatmentToken">
            <summary>
            The string token for treatment in this format: ID.Treatment.Tag
            </summary>
        </member>
        <member name="F:Microsoft.MarketplaceServices.Storefront.LabServiceCore.Experiment.SamplingTicket.ControlToken">
            <summary>
            The string token for control in this format: ID.Control.Tag
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LinkItemFilteringUtility">
            <summary>
            A utility class that provides function to filter out AgileStore LinkItem based on the associated
            ConditionTarget.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LinkItemFilteringUtility.FilterLinkItems(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.ChannelCommon.Contracts.V5.Response.ChannelResponse,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer,System.Threading.CancellationToken)">
            <summary>
            Remove items that have condition target and any of the following is true
            1. The target URL return non 200 code
            3. The target channel has no items
            2. The link items has no title after applying the title fallback logic
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="channel">The channel</param>
            <param name="detokenizer">The detokenizer to detokenize the target uri</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LinkItemFilteringUtility.CreateChannelTitleJobs(Microsoft.Marketplace.ChannelCommon.Contracts.V5.Response.ChannelResponse,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Get a dictionary of jobs for the link items of a channel.
            </summary>
            <param name="channel">The channel</param>
            <param name="detokenizer">The detokenizer to detokenize the target uri</param>
            <param name="opCtx">The operation context</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>return dictionary of LinkItems and channelTitles</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.MasterDataHelper.ResolveIds(Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            Helper to resolve OemId and ScmId from Reg keys on device
            </summary>
            <param name="oemDiscoveryQueryParams">Current values on device that will help determine final OemId and Scmid</param>
            <param name="providersManager">ProvidersManager object with a reference to the MasterData Provider</param>
            <param name="loggingContext">The logging context of the caller</param>
            <param name="logWriter">The current log writer</param>
            <returns>A OemDiscoveryResponseBody</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.MasterDataHelper.ResolveOemId(Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter,Microsoft.Marketplace.Storefront.Contracts.V3.OemDiscoveryResponseBody)">
            <summary>
            Tries to resolve OemId in the follow order
            1. Checks to see if OemId exists in the request, then tries to fix the value. If can't be fixed, use the original value
            2. If ScmId exists in the request, then try to resolve Oemid from ScmID. If unable resolve, continue
            3. If Oem ID can be resolved from PhoneManufacturerName. If unable resolve, continue
            4. If Oem Id can be resolved from SmBiosManufacturerName. 
            </summary>
            <param name="oemDiscoveryQueryParams">Request params</param>
            <param name="providersManager">Providers manager</param>
            <param name="logWriter">log writer</param>
            <param name="response">OemDisocery request with potential OemId filled out</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.MasterDataHelper.ResolveScmId(Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter,Microsoft.Marketplace.Storefront.Contracts.V3.OemDiscoveryResponseBody)">
            <summary>
            Tries to resolve the ScmId in the follow order
            1. If ScmId exists in the request, do nothing.
            2. If ScmId can be resolved from PhoneDeviceModel. If unable resolve, continue
            3. If ScmId can be resolved from SmBiosDm
            </summary>
            <param name="oemDiscoveryQueryParams">Request params</param>
            <param name="providersManager">Providers manager</param>
            <param name="logWriter">log writer</param>
            <param name="response">OemDisocery request with potential ScmId filled out</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.MvDiscoveryHelper.GetResponseItem(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.BusinessLogic.Request.MvDiscoveryRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            executes a movie video query against the DiscoveryChannel provider for specified products 
            </summary>
            <param name="opCtx">operation context</param>
            <param name="clientRequest">Client entitlement request</param>
            <param name="pathAndQuery">requesturi pathAndQuery</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>Returns a DiscoveryChannel Response for the requested products</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.MvDiscoveryHelper.GetProductList(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.MvDiscoveryHelper.MVDiscoveryInternalParameters,Microsoft.Xbox.Discovery.ChannelProviderDataContracts.DiscoveryChannelResponse,System.Threading.CancellationToken)">
            <summary>
            Get a list of Product from M$ and return them in the same order as discovery service
            </summary>
            <param name="parameters"></param>
            <param name="discoveryChannelResponse"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper">
            <summary>
            Helper class used by PageController and BackgroundController.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper.NoUserSegmentsClientVersion">
            <summary>
            Client versions older than this one don't have user segments header
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper.GetPageRequest(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RequestContext,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser)">
            <summary>
            Generate the PageRequest object for the given pageName.
            </summary>
            <param name="pageName">The name of the page to request</param>
            <param name="clientRequestContext">The RequestContext from the client</param>
            <param name="operationContext"></param>
            <param name="user">The StoreUser</param>
            <returns>The filled out PageRequest for the given page</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper.GetHydratedResponse(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PageRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RequestContext,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser)">
            <summary>
            Gets the HydratedResponse for the given PageRequest.
            </summary>
            <param name="pathAndQuery">The path and query strings for the page request</param>
            <param name="request">The PageRequest object</param>
            <param name="clientRequestContext">The RequestContext from the client</param>
            <param name="opCtx">The OperationContext</param>
            <param name="storeUser">The StoreUser</param>
            <returns>The hydrated Response object</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper.SetRootManifestProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper.PageHelperProperties,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter,Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            Set properties for hydrated root manifest.
            </summary>
            <param name="properties">The request properties</param>
            <param name="logWriter">The log writer</param>
            <param name="rootManifest">The hydrated manifest to process</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper.PageSupportsUserCatalogs(System.String)">
            <summary>
            Check if the give page is a user catalog sensitive page
            </summary>
            <param name="pageId">the page id to test</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PageHelper.GetSearchResultsChannel(Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            Helper to make test easy
            </summary>
            <param name="rootManifest"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductSummaries">
            <summary>
            This class contains classes that build merchandized ProductSummaries for Autosuggest and SearchAllResults.
            We need to build these programmatically instead of having static ProductSummary objects because they use resource strings,
            which are different for each locale.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PurchaseErrorHelper.PurchaseErrorCodeMapping">
            <summary>
            Mapping OMS errors to hex codes for our Error Localization framework
            TODO: Waiting for localized version of these messages
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RatingsCacheHelper">
            <summary>
            Ratings Cache Helper
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RatingsCacheHelper.GetProductReviewsAsync(Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.GetProductReviewsRequest,Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.RatingsHelper,Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.RatingsProvider,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            GetProductReviewsAsync is a helper that caches specific types of product review results
            </summary>
            <param name="reviewsRequest">product review request params</param>
            <param name="ratingsHelper">ratings helper</param>
            <param name="provider">ratings provider</param>
            <param name="loggingContext">logging context</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RatingsCacheHelper.GetRatingsSummaryAsync(Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.GetRatingsSummaryRequest,Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.RatingsHelper,Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.RatingsProvider,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
             GetRatingsSummaryAsync is a helper that caches ratings summary results
            </summary>
            <param name="ratingsSummaryRequest"></param>
            <param name="ratingsHelper"></param>
            <param name="provider"></param>
            <param name="loggingContext"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.NavigationHelper.GetResponseItems(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.NavigationRequest,System.String,System.Threading.CancellationToken)">
            <summary>
                Gets a response item for the given request.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The request.</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>
                A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that
                handled the client request
            </returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.NavigationHelper.DetokenizeLinks(Microsoft.Marketplace.Storefront.Contracts.V1.NavigationItemList,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.NavigationRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Detokenizer)">
            <summary>
            CMDS already detokenizes server-side values, but this method detokenizes values passed by the client (e.g. market, locale and deviceType).
            </summary>
            <param name="navigationItemList">List of tokenized URLs</param>
            <param name="request">NavigationRequest that contains client query parameter values. Note that we can't use request.QueryParameters here because
            the query parameters were all removed from request.QueryParameters in the previous calls to ParseAndValidateCommonParameters().</param>
            <param name="detokenizer">The detokenizer to detokenize the target uri</param>
            <returns>List of detokenized navigation links</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.#ctor">
            <summary>
                For unit tests
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.GetCatalogManifests(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all catalogs that user has access.
            </summary>
            <param name="market">the market of the caller</param>
            <param name="catalogLocales">the catalog languages of the caller</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>the big catalog's response to catalog manifest query.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.GetBusinessCatalogs(System.Version,System.UInt64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets Business catalogs the user has access to.
            Note: this function is to query M$ for the Business catalogs. We will always do the query if this user object hasn't done so
            as an interim solution before client can exchange the information back to service with proper TTL handling (catalog info
            is cleared when it detects AAD token expiration, etc.). But we will always recreate the CatalogInfoSet from the manifests
            because it is relatively cheap, as opposed to CreateCatalogInfoSetFromManifests, which will return the cached CatalogInfoSet,
            because it is called by GetCatalogInfoSet, which may be needed in many code paths.
            </summary>
            <param name="appVersion">the caller's appVersion</param>
            <param name="deviceFamilyVersion">the caller's device family version, which is the os version</param>
            <param name="market">the market of the user</param>
            <param name="catalogLocales">the catalog languages of the user</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>The object that contains Business catalogs the user has access to.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.FilterBusinessCatalogs(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestResponseV6)">
            <summary>
            Making testing easy. Async testing in VS causes random errors.
            </summary>
            <param name="catalogResponse">the catalog response.</param>
            <returns>the list of Business catalogs</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.CreateCatalogInfoSetFromManifests(System.Version,System.UInt64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Helper to create the CatalogInfoSet if this StoreUser instance doesn't have that.
            </summary>
            <param name="appVersion">the caller's appVersion</param>
            <param name="deviceFamilyVersion">the caller's device family version, which is the os version</param>
            <param name="market">the caller's market</param>
            <param name="catalogLocales">catalog locales needed for querying CatalogManifests from M$</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.LogicalId">
            <summary>
            User Logical Id of Incoming request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.GlobalId">
            <summary>
            User Global Id of Incoming request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.HardwareId">
            <summary>
            User Hardware Id of Incoming request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.UserGender">
            <summary>
            User Gender
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.AadUserUpn">
            <summary>
            The UPN for the caller that is extracted from its AAD token
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.AadUpnProcessed">
            <summary>
            Whether or not the Upn has been processed. This i used to avoid re-try bogus aad token
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser.AccessToken">
            <summary>
            Gets the access token M$ API requires us to send when we call access controlled APIs.
            We prefer AAD, that is our design for now. But we will use MSA ticket if AADToken is not present.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StubPageHelper.GetStubbedManifest(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PageRequest)">
            <summary>
            Get the stubbed Manifest for the page
            </summary>
            <param name="request">The PageRequest for the page</param>
            <returns>The stubbed Manifest</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StubPageHelper.SetStubManifestProperties(Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.String,System.String)">
            <summary>
            For stub manifest, do string placement for properties
            </summary>
            <param name="manifest">The Manifest to process</param>
            <param name="formatToken">The format used for processing</param>
            <param name="tokenValue">The token replacement value</param>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Utils.TypeConverterEnterprise">
            <summary>
            handles the conversion from MediaType for enterprise filter
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Utils.TypeConverter">
            <summary>
            handles the conversion from MediaType (between Client and StoreEdge) and ProductType and PrimaryCategory (between StoreEdge and DisplayCatalog)
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Utils.TypeConverter.FromProductType(System.String)">
            <summary>
            returns a TypeConverter instance for the specified productType
            </summary>
            <param name="productType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Utils.TypeConverter.FromProductType(System.String,System.String)">
            <summary>
            returns a TypeConverter instance for the specified productType and primaryCategory
            </summary>
            <param name="productType"></param>
            <param name="primaryCategory">required when productType is an Application, for determining the difference between App and Game</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Utils.TypeConverter.FromMediaType(System.String)">
            <summary>
            returns a TypeConverter instance for the specified mediaType
            </summary>
            <param name="mediaType"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Utils.TypeConverter.MediaTypes">
            <summary>
            valid values for MediaType
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Utils.TypeConverter.ProductTypes">
            <summary>
            valid values for ProductType
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Utils.TypeConverter.ProductTypes.IsRecognizedAutosuggestProductType(System.String)">
            <summary>
            Called if it is required to filter out product types that aren't recognized by the client.
            </summary>
            <param name="productType">The productType, usually coming from a catalog response</param>
            <returns>true if the product type is known; false otherwise</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Utils.TypeConverter.PrimaryCategories">
            <summary>
            valid values for PrimaryCategories
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Utils.TypeConverterEnterprise.CatalogId">
            <summary>
            Gets the catalog id associated with the mediaType filter
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Utils.TypeConverterEnterprise.TokenType">
            <summary>
            Gets the type of the token the catalog is accessed
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.V3.ChartResultsHelper.#ctor(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Threading.CancellationToken)">
            <summary>
            Create a new ChartResultsHelper to set ChartResults page properties.
            </summary>
            <param name="mediaType">The media type (apps/games)</param>
            <param name="operationContext">The OperationContext</param>
            <param name="clientRequest">The client request</param>
            <param name="cancellationToken">The cancellation token</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.V3.ChartResultsHelper.SetPageManifestProperties(Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.String,System.String,System.String)">
            <summary>
            Set title, navtitle, and navItemId for the given page manifest.
            Title is chosen based on the filter selected.
            </summary>
            <param name="manifest">The page manifest</param>
            <param name="listName">The listname filter</param>
            <param name="category">The category filter</param>
            <param name="subcategory">The subcategory filter</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.V3.ChartResultsHelper.GetLocalizedChartResultsTitle(System.String,System.String,System.String)">
            <summary>
            Generate the ChartResults title from the given listname, category, and subCategory.
            
            If there is only a listname, use that as the title. E.g. 'Top Free'
            If there is a listname and category, use both separated by a dot. E.g. 'Top Free • Education'
            If there is a listname, category, and subcategory, use only the listname and subcategory 
            separated by a dot. E.g. 'Top Free • Math Games'
            </summary>
            <param name="listName">The caller's list name</param>
            <param name="category">The caller's category</param>
            <param name="subcategory">The caller's subcategory</param>
            <returns>The ChartResults title</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CuratedHelper.GetResponseItem(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a response item for the given request.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The request.</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that handled the client request</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CuratedHelper.GetCollectionResponseItem(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a response item for the given request.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The request.</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that handled the client request</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CuratedHelper.CuratedHelperInternalParameters">
            <summary>
            This class groups parameters common to several methods in this class.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CuratedHelper.CuratedHelperInternalParameters.IsPreviewAuthorized">
            <summary>
            Indicates if the request is authorized to use preview feature
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CuratedHelperV3.GetResponseItem(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a response item for the given request.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The request.</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that handled the client request</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CuratedHelperV3.GetCollectionResponseItem(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a response item for the given request.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The request.</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that handled the client request</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LiveTileHelper">
             <summary>
             Helper class to truncate the hydrated layout response for LiveTile calls.
            
             The ProductSpotlight objects will have unused properties nulled
             out so that they will be left out during serialization.  This is
             to cut down the size of the payload that the client will receive
             during calls to /pages/livetile.
             </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LiveTileHelper.TruncateSpotlightList(Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem)">
            <summary>
            Truncates each ProductSpotlight in the SpotlightList.
            The truncated ProductSpotlight contains null or default values for each 
            unused property.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LiveTileHelper.TruncateSpotlightList(Microsoft.Marketplace.Storefront.Contracts.V3.SpotlightList)">
            <summary>
            Removes the unused properties from the ProductSpotlight items in the 
            SpotlightList.
            </summary>
            <param name="spotlightList">The SpotlightList to truncate</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LiveTileHelper.CloneProductSpotlight(Microsoft.Marketplace.Storefront.Contracts.V4.ICollectionItem)">
            <summary>
            Returns a new ICollectionItem list that only contains properties relevant for live tile.
            </summary>
            <param name="ps">The spotlight collection to clone</param>
            <returns>The truncated cloned spotlight collection</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LiveTileHelper.CloneProductSpotlight(Microsoft.Marketplace.Storefront.Contracts.V3.ProductSpotlight)">
            <summary>
            Returns a new ProductSpotlight list that only contains properties relevant for live tile.
            </summary>
            <param name="ps">The product spotlight to clone</param>
            <returns>The truncated cloned product spotlight</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LiveTileHelper.ModifySpotlightImage(Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem)">
            <summary>
            Modify spotlight image to include the live tile size "hack" for the RTM and ZDU client before the client fixed the problem.
            Ideally, it should be client to program the tile width and add to the URI before sending it to the ISS.
            </summary>
            <param name="spotlightImage">The spotlight image</param>
            <returns>The modified spotlight image with the correct query parameters attached</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LiveTileHelper.ImageIsUsedForLiveTile(Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem)">
            <summary>
            Live Tile only uses Tile and Logo image types.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.V4.CuratedHelperV4.GetResponseItem(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a response item for the given request.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The request.</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that handled the client request</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.V4.CuratedHelperV4.GetCollectionResponseItem(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.CuratedRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a response item for the given request.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The request.</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that handled the client request</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.V4.MvDiscoveryHelperV4.GetCollections(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.MvDiscoveryHelper.MVDiscoveryInternalParameters,Microsoft.Xbox.Discovery.ChannelProviderDataContracts.DiscoveryChannelResponse,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <param name="discoveryChannelResponse"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelperV5">
            <summary>
            This is the same as V3 except Autosuggest behavior is different
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetAutoSuggestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest,System.Threading.CancellationToken)">
            <summary>
            Returns suggestions based on what the user has started to type
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="autoSuggestRequest"></param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>Returns suggestions based on what the user has started to type</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetProductDetails(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ProductDetailsRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ContentRatingsHelper,System.Threading.CancellationToken)">
            <summary>
            Gets the Product Details for a product in the catalog
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The product details request</param>
            <param name="contentRatingsHelper">ContentRatings Helper</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A ProductDetails instance for this product. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetProductList(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.BulkProductDetailsRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.ProductListCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a ProductList object for the given product IDs from the catalog
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The client request</param>
            <param name="listCreationOptions">Specifies optional properties of the resulting ProductList</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A ProductList instance for the product ids. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetProductList(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.ProductListCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a ProductList object for the given product IDs from the catalog
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The client request</param>
            <param name="mediaType">the mediaType of the product ids</param>
            <param name="productIds">The product ids to get from the catalog</param>
            <param name="listCreationOptions">Specifies optional properties of the resulting ProductList</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A ProductList instance for the product ids. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetCuratedList(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.CollectionCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a dictionary object mapping item IDs to catalog objects
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The client request</param>
            <param name="mediaType">the mediaType of the product ids</param>
            <param name="productIds">The product ids to get from the catalog</param>
            <param name="listCreationOptions">Specifies optional properties of the resulting ProductList</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A dictionary object mapping item IDs to catalog objects.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetCollectionDetail(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.CollectionDetailCreationOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a CollectionDetails object for the given product IDs from the catalog
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The client request</param>
            <param name="mediaType">the mediaType of the product ids</param>
            <param name="productIds">The product ids to get from the catalog</param>
            <param name="collectionCreationOptions">Specifies optional properties of the resulting Collection</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A CollectionDetails instance for the product ids. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetProductDetailsBySku(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ProductDetailsBySkuRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ContentRatingsHelper,System.Threading.CancellationToken)">
            <summary>
            Gets the Product Details for a product sku in the catalog
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">The product details request</param>
            <param name="contentRatingsHelper">ContentRatings Helper</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A ProductDetails instance for this product sku. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.GetEmptyProductList(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.ProductListCreationOptions)">
            <summary>
            Gets a ProductList instance with any empty product set
            </summary>
            <param name="listCreationOptions">Specifies optional properties of the resulting ProductList</param>
            <returns>a ProductList instance with any empty product set. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelperV3.GetAutoSuggestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest,System.Threading.CancellationToken)">
            <summary>
            Returns suggestions based on what the user has started to type
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="autoSuggestRequest"></param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>Returns suggestions based on what the user has started to type</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelperV3.GetProductDetails(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ProductDetailsRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ContentRatingsHelper,System.Threading.CancellationToken)">
            <summary>
            Retrieves a product from catalog in ProductDetails format
            </summary>
            <param name="opCtx">Operation Context</param>
            <param name="request">request</param>
            <param name="contentRatingsHelper">ContentRatings Helper</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>Product details of the requested product Id</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelperV3.GetProductDetailsBySku(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ProductDetailsBySkuRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ContentRatingsHelper,System.Threading.CancellationToken)">
            <summary>
            Retrieves a product details for a specific sku from catalog in ProductDetails format
            </summary>
            <param name="opCtx">Operation Context</param>
            <param name="request">DetailsBySkuRequestV4 request</param>
            <param name="contentRatingsHelper">Content Ratings Helper</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>Product details of the requested product Id</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelperV5.GetAutoSuggestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest,System.Threading.CancellationToken)">
            <summary>
            Returns suggestions based on what the user has started to type. The response in V5 may contain music and video products, which don't show for V3.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="autoSuggestRequest"></param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>Returns suggestions based on what the user has started to type</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase">
            <summary>
            The base class for all controllers.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.IsEnterprisePage(System.String)">
            <summary>
            Test if the given page is an enterprise page
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
            <summary>
            Initializes the controller instance with the specified <paramref name="controllerContext"/>
            </summary>
            <param name="controllerContext">The context object that is used for the initialization</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.UserPuid">
            <summary>
            Get user Puid from Auth call, if not an Auth or failed to retrieve Puid, it will return 0
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.UserFirstName">
            <summary>
            Get user firstname from Auth call, if not an Auth or failed to retrieve it, it will return empty or null
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.UserIdentity">
            <summary>
             user UserIdenty object after Auth call.
             Make it virtual for better unit testing
             /// </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.Environment">
            <summary>
            Gets the environment definition.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.DependencyManager">
            <summary>
            Gets the dependency manager.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.ControllerName">
            <summary>
            Name of the controller (to be used for logging purposes).
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.LoggerFactory">
            <summary>
            Retrieves LoggerFactory from the request context.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.Logger">
            <summary>
            Gets the logger from the logger factory.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ControllerBase.LogWriter">
            <summary>
            Gets the log writer from the logger
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.BackgroundControllerV3.GetLiveTilePageAsync">
            <summary>
            GetLiveTilePageAsync
            </summary>
            <group>Background V3</group>
            <verb>GET</verb>
            <url>http://localhost/background/pages/livetile</url>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.CallerSpecificDataController.GetCallerSpecificData">
            <summary>
            Returns data that has at least some aspects that are specific to the calling user or client (e.g. age or hardware based decisions)
            </summary>
            <group>CallerSpecificData V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/callerspecificdata</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="prefix" type="string" required="false">what the user has started to type</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>data that has at least some aspects that are specigic to the calling user or client (e.g. age or hardware based decisions)</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.MvDiscoveryControllerV3.QueryMvDiscoveryAsync(System.String)">
            <summary>
            returns a paginated list of music and video from discovery channel
            </summary>
            <group>Discover MusicVideo Channel V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/mv/{channelId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="channelId" type="string" required="true">Which music video channel to call</pathParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.OemDiscoveryControllerV3.OemDiscoveryAsync">
            <summary>
            OemDiscovery request endpoint for the client
            Endpoint will try to find a best efforts match for OemId and ScmId that client should use
            </summary>
            <group>Configuration V3</group>
            <verb>GET</verb>
            <url>http://localhost/configuration/oemdiscovery</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="ScmId" type="string" required="false">ScmId of device</queryParam><queryParam name="OemId" type="string" required="false">OemId of device</queryParam><queryParam name="PhoneDeviceModel" type="string" required="false">PhoneDeviceModel of device</queryParam><queryParam name="PhoneManufacturerName" type="string" required="false">PhoneManufacturerName of device</queryParam><queryParam name="SmBiosManufacturerName" type="string" required="false">SmBiosManufacturerName of device</queryParam><queryParam name="SmBiosDm" type="string" required="false">SmBiosDm of device</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.OemDiscoveryResponseBody"/></responseType>
            <returns>Returns a <see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.OemDiscoveryResponseBody"/></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams">
            <summary>
            Oem Discovery Query Params
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams.ScmId">
            <summary>
            Scm ID
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams.OemId">
            <summary>
            Oem Id
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams.PhoneDeviceModel">
            <summary>
            Phone Device Model
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams.PhoneManufacturerName">
            <summary>
            Phone Manufacturer Name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams.SmBiosManufacturerName">
            <summary>
            Sm Bios Manufacturer Name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams.SmBiosDm">
            <summary>
            Sm Bios Dm
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.QueryParameterTemlates.OemDiscoveryQueryParams.OemDiscoveryReservedparameters">
            <summary>
            Query Params just used for this endpoint
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ResourceControllerV3.ApiKey">
            <summary>
            ApiKey to limit access to the /resources API. 
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ResourceControllerV3.LocalesToValidate">
            <summary>
            Set of locales to validate when deciding if a resource id can be referenced or not.
            For now, this is the JTP list
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ResourceControllerV3.GetResourcesAsync(System.String)">
            <summary>
            Returns the set of resource for an input locale
            </summary>
            <group>Resources V3</group>
            <verb>GET</verb>
            <url>http://localhost/resources/ByLocale/{locale}</url>
            <pathParam name="locale" type="string" required="true">Locale to get resources for</pathParam>
            <queryParam name="apiKey" type="Guid" required="true">Guid for restricting access to API</queryParam>
            <responseType>Dictionary of string,string</responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ResourceControllerV3.ValidateResourcesAsync">
            <summary>
            Validates the set of resources are returns true or false if failure occurs.
            </summary>
            <group>Resources V3</group>
            <verb>GET</verb>
            <url>http://localhost/resources/validate</url>
            <queryParam name="apiKey" type="Guid" required="true">Guid for restricting access to API</queryParam>
            <responseType><see cref="T:System.Boolean"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ResourceControllerV3.VerifyFree">
            <summary>
                Verify the "ChromeHome2" string is correct for the invariant culture. The ResourceManager will
                (relatively rarely) load the assembly resources incorrectly. This helps detect this case
                so the service can heal itself until a root cause can be identified.
            </summary>
            <returns>True if Resources.ChromeHome2 is correct for the invariant culture</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ResourceControllerV3.VerifyAllResources">
            <summary>
                Verify that all resources have at least the set of localized resource strings that are always available. If not,
                there's some problem with the build, or with the loaded resources at runtime.
            </summary>
            <returns>True if all resources have at least the expected number of distinct strings, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.PurchaseControllerV3.PurchaseAsync(Microsoft.Marketplace.Storefront.Contracts.V1.PurchaseRequestBody)">
            <summary>
            Purchase request endpoint for the client
            Endpoint will complete a purchase if Payment instruments aren't required
            If PIs are required, endpoint will return the orderId and a ContinuationAction of CheckOut
            Endpoint is authenticated, requires both Authorization token, and M$ authorization token
            </summary>
            <group>Purchase V3</group>
            <verb>POST</verb>
            <url>http://localhost/api/purchase</url>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <requestType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.PurchaseRequestBody"/></requestType>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.PurchaseResponseBody"/></responseType>
            <param name="purchaseRequestBody">Request body that represents items to puchase</param>
            <returns>Returns a <see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.PurchaseResponseBody"/></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SpotlightControllerV3.GetCuratedSpotlightChannelAsync(System.String)">
            <summary>
            returns curated content for channel id
            </summary>
            <group>Curated Content V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/spotlight/{channelId}</url>
            <pathParam name="channelId" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3">
            <summary>
            Defines V3 APIs for the ratings service
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.SubmitReviewAsync(System.String,Microsoft.Marketplace.Storefront.Contracts.V3.SubmitReview)">
            <summary>
            Submits a user review
            </summary>
            <group>Ratings and Review V3</group>
            <faults cref="T:Microsoft.MarketplaceServices.Core.StandardExceptions"/>
            <verb>POST</verb>
            <url>http://localhost/channels/ratings/user/review/product/{productId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="productId" type="string" required="true">Product id</pathParam>
            <requestType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.SubmitReview"/></requestType>
            <param name="productId">Product Id</param>
            <param name="review">Client review contract</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.GetUserReviewAsync(System.String)">
            <summary>
            Gets a user review
            </summary>
            <group>Ratings and Review V3</group>
            <faults cref="T:Microsoft.MarketplaceServices.Core.StandardExceptions"/>
            <verb>GET</verb>
            <url>http://localhost/channels/ratings/user/review/product/{productId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="productId" type="string" required="true">Product id</pathParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.Review"/></responseType>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.GetProductReviewsAsync(System.String)">
            <summary>
            Get a paged set of reviews for a product
            </summary>
            <group>Ratings and Review V3</group>
            <faults cref="T:Microsoft.MarketplaceServices.Core.StandardExceptions"/>
            <verb>GET</verb>
            <url>http://localhost/channels/ratings/product/{productId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="productId" type="string" required="true">Product id</pathParam>
            <queryParam name="pageSize" type="int" required="true">Maximum number of items to return</queryParam>
            <queryParam name="skipItems" type="int" required="true">Number of items to skip before returning results</queryParam>
            <queryParam name="orderBy" type="int" required="true">Sort order. see docs for enumeration values</queryParam>
            <queryParam name="currentVersion" type="string" required="false">Scope product reviews to a specific version</queryParam>
            <queryParam name="starFilter" type="int" required="false">Filter by number of stars [1..5]. Omit to get all.</queryParam>
            <queryParam name="localeListFilter" type="string" required="false">Filter by list of locales</queryParam>
            <queryParam name="deviceFamilyFilter" type="string" required="false">Filter by device family</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.ReviewList"/></responseType>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.GetRatingsSummaryAsync(System.String)">
            <summary>
            Gets the ratings summary
            </summary>
            <group>Ratings and Review V3</group>
            <faults cref="T:Microsoft.MarketplaceServices.Core.StandardExceptions"/>
            <verb>GET</verb>
            <url>http://localhost/channels/ratings/summary/product/{productId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="productId" type="string" required="true">Product id</pathParam>
            <queryParam name="currentVersion" type="string" required="false">Scope rating summary to a specific version</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.RatingSummary"/></responseType>
            <param name="productId">Product Id</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.ReportReviewConcernAsync(System.String,Microsoft.Marketplace.Storefront.Contracts.V3.ReportReviewConcern)">
            <summary>
            Submits a review concern
            </summary>
            <group>Ratings and Review V3</group>
            <faults cref="T:Microsoft.MarketplaceServices.Core.StandardExceptions"/>
            <verb>POST</verb>
            <url>http://localhost/channels/ratings/concern/review/{reviewId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="reviewId" type="string" required="true">Review id</pathParam>
            <requestType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.ReportReviewConcern"/></requestType>
            <param name="reviewId">Review Id</param>
            <param name="concern">Client review concern contract</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.ReportResponseConcernAsync(System.String,Microsoft.Marketplace.Storefront.Contracts.V3.ReportResponseConcern)">
            <summary>
            Submits a response concern
            </summary>
            <group>Ratings and Review V3</group>
            <faults cref="T:Microsoft.MarketplaceServices.Core.StandardExceptions"/>
            <verb>POST</verb>
            <url>http://localhost/channels/ratings/concern/response/{responseId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="responseId" type="string" required="true">Response id</pathParam>
            <requestType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.ReportResponseConcern"/></requestType>
            <param name="responseId">Response Id</param>
            <param name="concern">Client response concern contract</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.SubmitHelpfulnessVoteAsync(System.String,Microsoft.Marketplace.Storefront.Contracts.V3.SubmitHelpfulnessVote)">
            <summary>
            Submits a review helpfulness vote
            </summary>
            <group>Ratings and Review V3</group>
            <faults cref="T:Microsoft.MarketplaceServices.Core.StandardExceptions"/>
            <verb>POST</verb>
            <url>http://localhost/channels/ratings/vote/review/{reviewId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="reviewId" type="string" required="true">Review id</pathParam>
            <requestType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V3.SubmitHelpfulnessVote"/></requestType>
            <param name="reviewId">Product Id</param>
            <param name="helpfulnessVote">Client helpfulness vote contract</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.ToResponseItem(Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.RatingsProviderResult,System.Boolean)">
            <summary>
            construct a ResponseItem from payload
            </summary>
            <param name="providerResult"></param>
            <param name="cacheResponse"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.CallWithExceptionConversion(System.Func{System.Threading.Tasks.Task{Microsoft.Marketplace.Storefront.Ratings.RatingsProxy.RatingsProviderResult}})">
            <summary>
            Call ratings provider proxy and convert any exceptions
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.CallWithExceptionConversion``1(System.Func{``0})">
            <summary>
            Call ratings provider proxy and convert any exceptions
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RatingsControllerV3.ConvertException(System.Exception)">
            <summary>
            Convert Argument exceptions to ServiceExceptions
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Content.Resources">
            <summary>
            A strongly-typed resource class, for looking up localized strings, etc.
            This class was auto-generated by a t4 template
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Content.Resources.EagerLoad">
            <summary>
              Eagerly loads resources for all cultures. Used to batch resource initialization at service 
              startup.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Content.Resources.HasValue(System.String,System.Globalization.CultureInfo)">
            <summary>
            Checks if a non-invariant localized string is available.
            </summary>
            <param name="resourceId">The resource id to look up</param>
            <param name="culture">The culture to check</param>
            <returns>True if a non-invariant localized string is available, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Content.Resources.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets a localized string for the input resourceId and culture
            </summary>
            <param name="resourceId">Resource id to look up</param>
            <param name="culture">Culture of caller</param>
            <returns>The best available localized string</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.Singleton">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AllDevices">
             <summary>
             Looks up a localized string similar to "All devices"
            
             Comment: Used by Device Family Filter choice title on Ratings and Review to show all reviews
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AppIncompatibleWithDevice">
             <summary>
             Looks up a localized string similar to "This app is not compatible with this device."
            
             Comment: Used to tell user the app is not compatible with the device. It could be because of incompatible OS, architecture, hardware, platform; or exclusivity due to MO/OEM/SCM.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestAlbumsSubtitle">
             <summary>
             Looks up a localized string similar to "Albums"
            
             Comment: Used in autosuggest as a subtitle if the suggestion is a music album
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestAppsAndGamesSubtitle">
             <summary>
             Looks up a localized string similar to "Apps and Games"
            
             Comment: Used in autosuggest as a subtitle if the suggestion is an app or a game
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestBandTitle">
             <summary>
             Looks up a localized string similar to "Microsoft Band"
            
             Comment: Microsoft product name
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestMoviesSubtitle">
             <summary>
             Looks up a localized string similar to "Movies"
            
             Comment: Used in autosuggest as a subtitle if the suggestion is a movie
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestOfficeSubtitle">
             <summary>
             Looks up a localized string similar to "Shop on MicrosoftStore.com"
            
             Comment: Used in autosuggest as a subtitle when Office 365 is a suggested result
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestOfficeTitle">
             <summary>
             Looks up a localized string similar to "Office 365"
            
             Comment: Microsoft product name
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestPhoneTitle">
             <summary>
             Looks up a localized string similar to "Windows Phone"
            
             Comment: Microsoft product name
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestSongsSubtitle">
             <summary>
             Looks up a localized string similar to "Songs"
            
             Comment: Used in autosuggest as a subtitle if the suggestion is a song
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestSurfaceTitle">
             <summary>
             Looks up a localized string similar to "Microsoft Surface"
            
             Comment: Microsoft product name
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestTvEpisodesSubtitle">
             <summary>
             Looks up a localized string similar to "TV Episodes"
            
             Comment: Used in autosuggest as a subtitle if the suggestion is a TV episode
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestTvSeasonsSubtitle">
             <summary>
             Looks up a localized string similar to "TV Seasons"
            
             Comment: Used in autosuggest as a subtitle if the suggestion is a TV season
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestTvSeriesSubtitle">
             <summary>
             Looks up a localized string similar to "TV Series"
            
             Comment: Used in autosuggest as a subtitle if the suggestion is a TV series
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestWindowsTitle">
             <summary>
             Looks up a localized string similar to "Windows 10 Pro"
            
             Comment: Microsoft product name
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestWinProSubtitle">
             <summary>
             Looks up a localized string similar to "Upgrade"
            
             Comment: Upgrade is meant as a verb; used in autosuggest as a subtitle when Windows 10 Pro is a result
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.AutosuggestXboxOneTitle">
             <summary>
             Looks up a localized string similar to "Xbox One"
            
             Comment: Microsoft product name
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.BandPromoDescription">
             <summary>
             Looks up a localized string similar to "Microsoft Band helps you live healthier by tracking your heart rate, exercise, calorie burn, and sleep quality, and keeps you connected with email, text, and calendar alerts. (Note: Microsoft Health app required. Works with Windows Phone 8.1 update or later, iPhone&#174; 5 or later running iOS&#174; 8.1.2 or later, and Android™ 4.4 or later phones, with Bluetooth.)"
            
             Comment: Subtitle for Microsoft Band promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.BandPromoTitle">
             <summary>
             Looks up a localized string similar to "Live healthier and achieve more."
            
             Comment: Title for Microsoft Band promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.BestRated">
             <summary>
             Looks up a localized string similar to "Best-rated"
            
             Comment: The list of best rated apps and games
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.BestRated2">
             <summary>
             Looks up a localized string similar to "Best rated"
            
             Comment: The list of best rated apps and games
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.BrowseApps">
             <summary>
             Looks up a localized string similar to "Browse apps"
            
             Comment: Chart results - page title for apps
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.BrowseGames">
             <summary>
             Looks up a localized string similar to "Browse games"
            
             Comment: Chart results - page title for games
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.DeviceFamilyDesktop">
             <summary>
             Looks up a localized string similar to "PC"
            
             Comment: Device Family Filter choice: PC
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.DeviceFamilyDisallowed">
             <summary>
             Looks up a localized string similar to "This product is currently not available for your device type."
            
             Comment: If AllowedPlatforms does not include client deviceFamily, then we show this as the install disabled reason on the client
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.DeviceFamilyHoloLens">
             <summary>
             Looks up a localized string similar to "HoloLens"
            
             Comment: Device Family Filter choice: Hololens
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.DeviceFamilyMobile">
             <summary>
             Looks up a localized string similar to "Mobile"
            
             Comment: Device Family Filter choice: Mobile
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.DeviceFamilyXbox">
             <summary>
             Looks up a localized string similar to "Xbox"
            
             Comment: Device Family Filter choice: Xbox
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.Devices">
             <summary>
             Looks up a localized string similar to "Devices"
            
             Comment: Ratings and Reviews Devices Filter header text
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X00000005_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "The thing you&#39;re looking for isn&#39;t here"
            
             Comment: PDP- if user clicks a link to a product that doesn't exist
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X00000005_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "We probably don&#39;t have it, but just in case, try searching for it."
            
             Comment: PDP- if user clicks a link to a product that doesn't exist
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X00000064_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Store is not available in your country or region"
            
             Comment: Store doesn't support user's country/region
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X00000064_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Go to Settings to view or change your country or region."
            
             Comment: Store doesn't support user's country/region, give guidance to go to Settings to change country
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X00000262_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "To install your app or game, remove a device from your account"
            
             Comment: Comsumer-facing error message - For too many devices
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X00000262_LINKDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Remove a device"
            
             Comment: Comsumer-facing error message - For too many devices mitigation link
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X00000262_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Ten of your devices have apps &amp; games from Store already installed on them. That’s the limit. Remove a device to make room for this new one."
            
             Comment: Comsumer-facing error message - For too many devices
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000001_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Change your region"
            
             Comment: Location and catalog market mismatch. Error box title.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000001_LINKDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Get more info"
            
             Comment: Text for hyperlink to re-direct them to a useful link.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000001_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "To buy this product, set your region to match your physical location."
            
             Comment: Location and catalog market mismatch. Error message.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000002_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Ask a parent or guardian for help"
            
             Comment: Not in family error box title.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000002_LINKDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Get more info"
            
             Comment: Text for hyperlink to re-direct them to a useful link.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000002_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "They need to add you to the family if you want to buy stuff on this device."
            
             Comment: Not in family error message. 
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000004_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Ask a parent or guardian for help"
            
             Comment: Age rating not enough error box title
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000004_LINKDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Get more info"
            
             Comment: Text for hyperlink to re-direct them to a useful link.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000004_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "This product is rated for kids older than you."
            
             Comment: Age rating not enough error message. 
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000005_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Contact your Store Portal"
            
             Comment: Error message box title for enterprise asset out of seats
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_DSX_0X15000005_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Tell them we need to order more licenses of this product, because we’re all out."
            
             Comment: Error message for enterprise asset out of seats
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.Error_DSX_UnsupportedMarket_Description">
             <summary>
             Looks up a localized string similar to "Store is not available in your country or region"
            
             Comment: Store doesn't support user's country/region
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.Error_DSX_UnsupportedMarket_LongDescription">
             <summary>
             Looks up a localized string similar to "Go to Settings to view or change your country or region"
            
             Comment: Store doesn't support user's country/region, give guidance to go to Settings to change country
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_LM_0XC03F7000_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: The Licensing Service reported a fault. Check the event log for more details
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_LM_0XC03F7000_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: The Licensing Service reported a fault. Check the event log for more details.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_LM_0XC03F7003_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: There was an HTTP error communicating with the Licensing Service: the connection was closed unexpectedly, or the content type was not as expected, or some other networking error occurred. Check the event log for more details.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_LM_0XC03F7003_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: There was an HTTP error communicating with the Licensing Service: the connection was closed unexpectedly, or the content type was not as expected, or some other networking error occurred. Check the event log for more details.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80070002_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Well, this is embarrassing"
            
             Comment: The system cannot find the file specified.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80070002_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "We can&#39;t find the app."
            
             Comment: The system cannot find the file specified.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8007045B_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Hit Retry to get the app"
            
             Comment: App failed to install because device restarted, please retry. Error Message Header
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8007045B_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Your device restarted while the app was downloading."
            
             Comment: App failed to install because device restarted, please retry. Error Message Body
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X800704CF_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: The network location cannot be reached. For information about network troubleshooting, see Windows Help.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X800704CF_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: The network location cannot be reached. For information about network troubleshooting, see Windows Help.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80072EE2_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Try the download again"
            
             Comment: The operation timed out
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80072EE2_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "The connection was lost during download."
            
             Comment: The operation timed out.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80072EFD_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Check your internet connection"
            
             Comment: A connection with the server could not be established
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80072EFD_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "We couldn&#39;t connect you to the service."
            
             Comment: A connection with the server could not be established.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CF1_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: Package was not found.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CF1_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: Package was not found.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CF3_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Wait a few minutes and try that again"
            
             Comment: Package failed updates, dependency or conflict validation.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CF3_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "The update failed."
            
             Comment: Package failed updates, dependency or conflict validation.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CF4_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Make some room"
            
             Comment: There is not enough disk space on your computer. Please free up some space and try again.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CF4_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "You&#39;re running out of storage space. Manage your storage at Settings&gt;System&gt;Storage."
            
             Comment: There is not enough disk space on your computer. Please free up some space and try again.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CFC_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Reinstall the app"
            
             Comment: The application cannot be started. Try reinstalling the application to fix the problem.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CFC_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "The app can&#39;t start. Reinstalling should fix it."
            
             Comment: The application cannot be started. Try reinstalling the application to fix the problem.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CFD_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Reformat your external storage"
            
             Comment: External storage needs to be in FAT32 or exFAT format to install Win10 apps on it
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073CFD_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Windows 10 apps need either FAT32 or exFAT format.  NOTE: reformatting permanently deletes any pre-existing content."
            
             Comment: External storage needs to be in FAT32 or exFAT format to install Win10 apps on it
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073D01_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Change where you install apps"
            
             Comment: This app can't be installed on an SD card; try installing it somewhere else.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073D01_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "This app can&#39;t install on an SD card. In Settings &gt; System &gt; Storage, change the location to your PC or phone. Install the app, then reset your location back to the SD card."
            
             Comment: This app can't be installed on an SD card; try installing it somewhere else.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073D02_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Select Retry to close and update the app"
            
             Comment: The package could not be installed because resources it modifies are currently in use.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80073D02_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "The app can&#39;t update when it&#39;s open."
            
             Comment: The package could not be installed because resources it modifies are currently in use.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80200011_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "To move this app, reinstall it"
            
             Comment: The system cannot move the file to a different disk drive.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80200011_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Apps only work on the drive they&#39;re installed on."
            
             Comment: The system cannot move the file to a different disk drive.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024001E_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: Operation did not complete because the service or system was being shut down.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024001E_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: Operation did not complete because the service or system was being shut down.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024001F_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: Operation did not complete because the network connection was unavailable.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024001F_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: Operation did not complete because the network connection was unavailable.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80240438_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: There is no route or network connectivity to the endpoint.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80240438_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: There is no route or network connectivity to the endpoint.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80240440_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: The connection to the service endpoint died.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80240440_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: The connection to the service endpoint died.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80242014_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: The post-reboot operation for the update is still in progress.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80242014_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: The post-reboot operation for the update is still in progress.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80244018_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: Same as HTTP status 403 - server understood the request, but declined to fulfill it.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80244018_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: Same as HTTP status 403 - server understood the request, but declined to fulfill it.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024401C_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: Same as HTTP status 408 - the server timed out waiting for the request.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024401C_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: Same as HTTP status 408 - the server timed out waiting for the request.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80244022_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: Same as HTTP status 503 - the service is temporarily overloaded.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80244022_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: Same as HTTP status 503 - the service is temporarily overloaded.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024402C_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: Same as ERROR_WINHTTP_NAME_NOT_RESOLVED - the proxy server or target server name cannot be resolved.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X8024402C_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: Same as ERROR_WINHTTP_NAME_NOT_RESOLVED - the proxy server or target server name cannot be resolved.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80246001_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: A download manager operation could not be completed because the requested file does not have a URL.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80246001_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong on our end. Wait a bit, then try it again."
            
             Comment: A download manager operation could not be completed because the requested file does not have a URL.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80246007_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Give us a few minutes"
            
             Comment: The update has not been downloaded.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80246007_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "The update hasn&#39;t downloaded. Wait a bit and try it again."
            
             Comment: The update has not been downloaded.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80246013_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Try that again"
            
             Comment: An attempt was made to access a downloaded update that has already been removed.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X80246013_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "The app didn&#39;t install."
            
             Comment: An attempt was made to access a downloaded update that has already been removed.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X803F81F5_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "To install your app or game, remove a device from your account"
            
             Comment: Comsumer-facing error message - For too many devices
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X803F81F5_LINKDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Remove a device"
            
             Comment: Comsumer-facing error message - For too many devices mitigation link
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_0X803F81F5_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Ten of your devices have apps &amp; games from Store already installed on them. That’s the limit. Go to Store &gt; Settings &gt; Manage your devices. Then remove a device to make room for this new one."
            
             Comment: Comsumer-facing error message - For too many devices
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_ANY_DESCRIPTION">
             <summary>
             Looks up a localized string similar to "Try that again"
            
             Comment: Install failed. Please contact your software vendor.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERROR_WU_ANY_LONGDESCRIPTION">
             <summary>
             Looks up a localized string similar to "Something went wrong."
            
             Comment: Install failed. Please contact your software vendor.
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ErrorGenericDescription">
             <summary>
             Looks up a localized string similar to "The server stumbled"
            
             Comment: Consumer-facing error message
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERRORGENERICDESCRIPTION2">
             <summary>
             Looks up a localized string similar to "The server stumbled"
            
             Comment: Consumer-facing error message
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ErrorGenericDescription3">
             <summary>
             Looks up a localized string similar to "Try that again"
            
             Comment: Consumer-facing error message
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ErrorGenericLongDescription">
             <summary>
             Looks up a localized string similar to "We all have bad days."
            
             Comment: Consumer-facing error message
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ERRORGENERICLONGDESCRIPTION2">
             <summary>
             Looks up a localized string similar to "We all have bad days."
            
             Comment: Consumer-facing error message
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ErrorGenericLongDescription3">
             <summary>
             Looks up a localized string similar to "Something happened on our end. Waiting a bit might help."
            
             Comment: Consumer-facing error message
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.FilterCategory">
             <summary>
             Looks up a localized string similar to "Category"
            
             Comment: Filter by category
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.FilterGenre">
             <summary>
             Looks up a localized string similar to "Genre"
            
             Comment: Filter by genre
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.FilterSubCategory">
             <summary>
             Looks up a localized string similar to "Subcategory"
            
             Comment: Filter by subcategory
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.FilterSubgenre">
             <summary>
             Looks up a localized string similar to "Subgenre"
            
             Comment: Filter by subgenre
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.Free">
             <summary>
             Looks up a localized string similar to "Free"
            
             Comment: Used in display price
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.FreeTrial">
             <summary>
             Looks up a localized string similar to "Free trial"
            
             Comment: Used in display price
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.InAppPriceRange">
             <summary>
             Looks up a localized string similar to "The products you can buy through this app range from {0} to {1}."
            
             Comment: Price Range for IAPs displayed on client when Top IAP list from reco is empty
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.InAppSinglePrice">
             <summary>
             Looks up a localized string similar to "All the products you can buy through this app cost {0}."
            
             Comment: Edge case for above for single price
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.InAppSinglePriceFree">
             <summary>
             Looks up a localized string similar to "All the products you can buy through this app are free."
            
             Comment: Edge case when single price and free
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.Install">
             <summary>
             Looks up a localized string similar to "Install"
            
             Comment: On Business Catalog DisplayPrice is set to 'Install'
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.NewAndRising">
             <summary>
             Looks up a localized string similar to "New and rising"
            
             Comment: The list of new and rising apps and games
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.OfficePromoDescription">
             <summary>
             Looks up a localized string similar to "All-new 2016 apps are now in Office 365"
            
             Comment: Subtitle for Office promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.OfficePromoTitle">
             <summary>
             Looks up a localized string similar to "The new Office is here"
            
             Comment: Title for Office promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.Paid">
             <summary>
             Looks up a localized string similar to "Paid"
            
             Comment: Paid - not sure where we use this
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.PhonePromoDescription">
             <summary>
             Looks up a localized string similar to "Whether you want premium features and performance at a good price or a powerhouse of productivity that fits in your pocket, there&#39;s a Windows phone that&#39;s perfect for you."
            
             Comment: Subtitle for Windows Phone promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.PhonePromoTitle">
             <summary>
             Looks up a localized string similar to "The smartphone, reinvented"
            
             Comment: Title for Windows Phone promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.PromoDiscountTen">
             <summary>
             Looks up a localized string similar to "{0}"
            
             Comment: Promo price string for CN and TW
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.PromoPercentageOff">
             <summary>
             Looks up a localized string similar to "{0:P0} off"
            
             Comment: Promo price string for percentage off
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.PromoPriceOff">
             <summary>
             Looks up a localized string similar to "{0:C} off"
            
             Comment: Promo price string for price off
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterBy">
             <summary>
             Looks up a localized string similar to "Filter by"
            
             Comment: ReviewFilter title for ratings filter
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterRating">
             <summary>
             Looks up a localized string similar to "Rating"
            
             Comment: ReviewFilter title for ratings filter
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterSortHighestRated">
             <summary>
             Looks up a localized string similar to "Highest-rated"
            
             Comment: ReviewFilter by highest rating
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterSortLowestRated">
             <summary>
             Looks up a localized string similar to "Lowest-rated"
            
             Comment: ReviewFilter by lowert rated
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterSortMostHelpful">
             <summary>
             Looks up a localized string similar to "Most helpful"
            
             Comment: ReviewFilter by most helpful
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterSortMostRecent">
             <summary>
             Looks up a localized string similar to "Most recent"
            
             Comment: ReviewFilter by most recent
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterStarAltText">
             <summary>
             Looks up a localized string similar to "Show only {0} star reviews. There are {1}"
            
             Comment: This is what narrator will read to the user when a star filter choice is selected
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterStars1">
             <summary>
             Looks up a localized string similar to "★☆☆☆☆ ({0})"
            
             Comment: ReviewFilter 1 star rating
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterStars2">
             <summary>
             Looks up a localized string similar to "★★☆☆☆ ({0})"
            
             Comment: ReviewFilter 2 star rating
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterStars3">
             <summary>
             Looks up a localized string similar to "★★★☆☆ ({0})"
            
             Comment: ReviewFilter 3 star rating
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterStars4">
             <summary>
             Looks up a localized string similar to "★★★★☆ ({0})"
            
             Comment: ReviewFilter 4 star rating
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.ReviewFilterStars5">
             <summary>
             Looks up a localized string similar to "★★★★★ ({0})"
            
             Comment: ReviewFilter 5 star rating
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.SortBy">
             <summary>
             Looks up a localized string similar to "Sort by"
            
             Comment: Used by ReviewFilter and SearchFilter
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.SurfacePromoDescription">
             <summary>
             Looks up a localized string similar to "There&#39;s no limit to what you can achieve with the versatility and power of Surface."
            
             Comment: Subtitle for Microsoft Surface promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.SurfacePromoTitle">
             <summary>
             Looks up a localized string similar to "The most productive devices on the planet."
            
             Comment: Title for Microsoft Surface promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.TimedTrialRemainingDays">
             <summary>
             Looks up a localized string similar to "{0}-day free trial"
            
             Comment: Used to tell user how many days are in trial. 
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.TopFree">
             <summary>
             Looks up a localized string similar to "Top free"
            
             Comment: List of top free apps and games
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.TopPaid">
             <summary>
             Looks up a localized string similar to "Top paid"
            
             Comment: List of top paid apps and games
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.XboxOnePromoDescription">
             <summary>
             Looks up a localized string similar to "Jump ahead with Xbox One. Experience the greatest games lineup in Xbox history this year with exclusives like Halo 5: Guardians, Rise of the Tomb Raider, and Forza Motorsport 6."
            
             Comment: Subtitle for Xbox One promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.XboxOnePromoTitle">
             <summary>
             Looks up a localized string similar to "Get Xbox One"
            
             Comment: Title for Xbox One promo banner
             </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Content.Resources.DefaultResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.BackgroundControllerV4.GetLiveTilePageAsync">
            <summary>
            GetLiveTilePageAsync
            </summary>
            <group>Background V4</group>
            <verb>GET</verb>
            <url>http://localhost/background/pages/livetile</url>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V4.CollectionControllerV4.GetCollectionAsync(System.String)">
            <summary>
            returns collection for collection id
            </summary>
            <group>Collections V4</group>
            <verb>GET</verb>
            <url>http://localhost/channels/collections/{collectionId}</url>
            <pathParam name="collectionId" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V4.MvDiscoveryControllerV4.QueryMvDiscoveryAsync(System.String)">
            <summary>
            returns a paginated list of music and video from discovery channel
            </summary>
            <group>Discover MusicVideo Channel V4</group>
            <verb>GET</verb>
            <url>http://localhost/channels/mv/{channelId}</url>
            <pathParam name="channelId" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V4.MvDiscoveryControllerV4.QueryMvCollectionDiscoveryAsync(System.String)">
            <summary>
            returns a paginated list of music and video from discovery channel
            </summary>
            <group>Discover MusicVideo Channel V4</group>
            <verb>GET</verb>
            <url>http://localhost/channels/mvcollection/{channelId}</url>
            <pathParam name="channelId" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V4.PageControllerV4.GetPagesAsync(System.String)">
            <summary>
            GetPagesAsync
            </summary>
            <group>Pages V4</group>
            <verb>GET</verb>
            <url>http://localhost/pages/{pageName}</url>
            <pathParam name="pageName" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.AutoSuggestControllerV5.GetSuggestions">
            <summary>
            Returns suggestions based on what the user has started to type
            </summary>
            <remarks>Currently stubbed to always return empty lists</remarks>
            <group>AutoSuggest V5</group>
            <verb>GET</verb>
            <url>http://localhost/channels/autosuggest</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="prefix" type="string" required="false">what the user has started to type</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>AutoSuggestions object which contains a collection of ProductSummary objects and a collection of strings for suggested searches</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Converters.ImageItemConverter">
            <summary>
            Implements conversion of V2.ImageType item to JSON.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Converters.ImageItemConverter.JsonTypeProperty">
            <summary>
            "$type" property, generation of which costs a lot and is constant for a type.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Converters.ImageItemConverter.HandledType">
            <summary>
            Only this type will be handled by this converter
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRange">
            <summary>
            This class defines the range for AppVersion so that AppVersion can be part of a efficient lookup key.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRange.GetReady">
            <summary>
            Initialization of other private implementation details after json serialization. The rule json is made as compact as possible.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRange.IsInRange(System.Version)">
            <summary>
            Check if the caller's AppVerion is in the range defined by this instance.
            </summary>
            <param name="callerAppVersion"></param>
            <returns>true if the caller's appversion matches the branch indicator and satisfies the min and max definition of this instance.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRange.GetBranchIdFromAppVersion(System.Version)">
            <summary>
            AppVersion will use the minor value as branch indicator. So, from an appVersion, we can know which branch the Store is built from.
            </summary>
            <param name="appVersion"></param>
            <returns>the branch indicator</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRange.BranchXid">
            <summary>
            Gets or sets the base branch id. Rtm has base id = 1 and Main has base id = 0. Their branch id will increment by 2.
            Private branches, we don't really have a firm rule right now. We consider 200 - 209 being the base.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.DeviceFamilyVersionRange">
            <summary>
            This class defines the range for deviceFamilyVersion so that OS version can be part of a efficient lookup key.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRuleExtension">
            <summary>
            Extension methods for AppVersion related rules.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRuleExtension.IsInRange(System.Collections.Generic.List{Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.AppVersionRange},System.Version)">
            <summary>
            Check through the applicable rules and if there are any. We take results from any of such rules
            and see if one of them will say yes. If there are no rules, or the appVersion is null, we return true.
            </summary>
            <param name="rules">the list for the extension.</param>
            <param name="appVersion">the appVersion to check</param>
            <returns>true if appVersion is in range of one of the rules</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.UserList">
            <summary>
            This class defines a list of users by their upn
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.UserList.GetReady">
            <summary>
            Set the implementation details ready for efficient lookup
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.UserList.IsMember(System.String)">
            <summary>
            Check if the userUpn is a member of this list
            </summary>
            <param name="userUpn"></param>
            <returns>true if and only if the given upn is listed in the user list</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.CatalogSetAccessRule">
            <summary>
            This class defines controls for who has access to a private catalogs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.CatalogSetAccessRule.GetReady">
            <summary>
            Get the catalog set rules ready for efficient lookup.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.CatalogSetAccessRule.CheckVisibility(System.Version,System.UInt64,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StoreUser,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.CatalogInfoSet)">
            <summary>
            Given the catalogSet, check which CatalogInfo (individual catalog) are visible by the rules set forth by this instance.
            Whatever is not visible will be removed from the catalogSet.
            </summary>
            <param name="callerAppVersion">appVersion of the caller.</param>
            <param name="callerDeviceFamilyVersion">os version of the caller.</param>
            <param name="user">the user object</param>
            <param name="catalogSet">the set of CatalogInfo to be checked. Upon return, the catalog that is not visible will be removed.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.CatalogSetAccessRule.GetUserListNamesByUpn(System.String)">
            <summary>
            Given the user's AAD Upn, check which user list the user belongs to.
            </summary>
            <param name="userUpn"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.CatalogAccessRule">
            <summary>
            This class defines controls for who has access to a private catalog
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.ForceUpdateRule">
            <summary>
            This class defines controls for force update
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.ForceUpdateRule.IsInRange(System.Version)">
            <summary>
            Check the rules to see if the caller's appversion is considered in range.
            If there is no rules defined at all, we consider it in range.
            </summary>
            <param name="version"></param>
            <returns>true if and only if the given version satisfy some AppVersionRange rule.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.ResponseHeaderHandler">
            <summary>
            This class is responsible for adding or modifying the generic http response headers (i.e. not specific to any controller or request validator)
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.StoreEdgeExceptionConverter">
            <summary>
            converts exceptions into HttpResponseException
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.StoreEdgeExceptionConverter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.MarketplaceServices.ServiceCore.ExceptionConverter"/> class.
            </summary>
            <param name="faultSource">Source to use when creating ServiceFaults</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.StoreEdgeExceptionConverter.ConvertToHttpResponseException(System.Exception)">
            <summary>
            converts exception into HttpResponseExceptions
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreEdgeInstrumentationDelegatingHandler.IsLogicallyUnsuccessful(System.Net.Http.HttpResponseMessage)">
            <summary>
            Has service-specific conditions that say whether the response was successful or not.
            The base class only looks at HTTP status code to set the "succeeded" flag in ISR
            and increment the performance counters tracking errors. This method has checks for
            other scenarios in which we want the same behavior.
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler">
            <summary>
            This class implenmentation store client min version detection and force client that doesn't satisfy minimum version requirement to update
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler.#ctor(Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler"/> class.
            </summary>
            <param name="environment">the environment definition.</param>
            <param name="logger">the logger.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler.CheckForceUpdate(System.String,System.String,System.Version)">
            <summary>
            Check if the given deviceType and appVersion should be forced to update
            </summary>
            <param name="deviceType">The deviceType the older caller provides. Will be ignored if deviceFamily is provided.</param>
            <param name="deviceFamily">The deviceFamily the caller provides.</param>
            <param name="appVersion">The caller provided appVersion.</param>
            <returns>true if and only if the caller passes the force update check (meaning not required to update).</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler.GetForceUpdateStatusCode(System.Version)">
            <summary>
            Gets the value indicating what force update status code we will send back to client. Internal for easy testing.
            </summary>
            <param name="version">the caller's version.</param>
            <returns>the HttpStatusCode a client of the given version understand as the force update status code.</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler.NewForceUpdateStatusCodeMinVersion">
            <summary>
            Gets or sets the value indicating which version will start using the new status code for force update.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler.HasMultipleRulesForAllDevices">
            <summary>
            For testing the integrity of the the rules
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.StoreVersionHandler.DevicesWithMultipleSpecificRules">
            <summary>
            For testing the integrity of the the rules
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.FiltersHelper.GetResponseItem(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RequestContext,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets a response item for the given request.
            </summary>
            <param name="request">The request.</param>
            <param name="clientRequestContext">The request context</param>
            <param name="opCtx">The operation context</param>
            <param name="providersManager">The providers manager</param>
            <param name="pathAndQuery">The path and query of the request</param>
            <param name="loggingContext">The logging context</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A response item instance. The payload will be versioned V2, V3 etc. based on the controller version that handled the client request</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.FiltersHelper.GetContentFilters(System.Collections.Generic.IEnumerable{Microsoft.Marketplace.ChannelCommon.Contracts.V5.Response.BaseItem},System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets a complete content filter for all LinkItems with the same parentId (can be recursive if the filter choices are the parent of other LinkItems)
            </summary>
            <param name="baseItems">A flat list of all LinkItems in the CMCP response</param>
            <param name="parentId">Parent ID (usually top level ID) of the filters</param>
            <param name="operationContext"></param>
            <param name="domainDataCache">Domain data cache used for sourcing special DDS filters</param>
            <param name="loggingContext">Logging context for DDS</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>List of populated content filters</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.FiltersHelper.GetContentFilterChoices(System.Collections.Generic.IEnumerable{Microsoft.Marketplace.ChannelCommon.Contracts.V5.Response.BaseItem},System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets the filter choices for all LinkItems with the same ParentId
            </summary>
            <param name="baseItems">A flat list of all LinkItems in the CMCP response</param>
            <param name="parentId">Parent ID that all the filter choices should share</param>
            <param name="operationContext"></param>
            <param name="domainDataCache">Domain data cache used for sourcing special DDS filters</param>
            <param name="loggingContext">Logging context for DDS</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>An IEnumerable of filter choices</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.AutoSuggestAggregationSource.autoSuggestHelper">
            <summary>
            source for auto suggest
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.AutoSuggestAggregationSource.AutoSuggestRequest">
            <summary>
            the client request for auto suggestions
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.EnterpriseAggregationSource.GetResponseItems(System.Threading.CancellationToken)">
            <summary>
            Get the product list for enterprieses. 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge">
            <summary>
            Based on aggregation results and the requested page, the Judge decides if the original response should be returned to the client or 
            if any page substitutions need to be made (e.g. sub in an error page).
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.JudgeErrorResponse">
            <summary>
            Used to signal that the error page was generated by the Judge's decision
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.GetResponse">
            <summary>
            Goes through the rule table, and performs the action for the first rule that matches.
            </summary>
            <returns>The final response to be returned to the client</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenAllErrors(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            Matches when all response items returned by aggregators have errored
            </summary>
            <param name="pageId">Unused by this rule.</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True if all response items are errors; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenAlways(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            A rule which always matches (and triggers the paired action)
            </summary>
            <param name="pageId">Unused by this rule.</param>
            <param name="aggregatedResponseItems">Unused by this rule.</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenErrorPage(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            A rule which only matches error pages. This prevents infinite recursion when getting an error page itself fails.
            </summary>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">Unused by this rule.</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True when the requested page is an error page; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenSearchAllNoResults(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            Matches when page is SearchAllResults and there were no results
            </summary>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True if the page is SearchAllResults and all ProductLists in the response are empty; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenSearchQueryPage(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            Matches when the page is one of the pages which calls search with a query (i.e. search but not search filters)
            </summary>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">Unused by this rule.</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True if the page is in the searchQueryPages set.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenChartResultsPage(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            A rule which only matches the chart results page.
            </summary>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">Unused by this rule.</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True when the requested page is a ChartResults page; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenPdpPage(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            A rule which only matches the PDP page.
            </summary>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">Unused by this rule.</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True when the requested page is a PDP page; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenLiveTilePage(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            A rule which only matches the live tile page.
            </summary>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">Unused by this rule.</param>
            <param name="pageManifest">Unused by this rule.</param>
            <returns>True when the requested page is a live tile page; false otherwise</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenRequiredSectionMissing(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            A rule which returns true if a section marked as "required" in the manifest (or its child manifests) doesn't appear in aggregatedResponseItems.
            </summary>
            <param name="pageId">Unused by this rule</param>
            <param name="aggregatedResponseItems">Aggregated response items (doesn't include the page manifest).</param>
            <param name="pageManifest">The page manifest.</param>
            <returns>True if a section marked as "required" in the manifest doesn't appear in aggregatedResponseItems; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.WhenRequiredSectionMissingInPdp(System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest)">
            <summary>
            A rule which returns true the page is the PDP, and if a section marked as "required" in the manifest doesn't appear in aggregatedResponseItems.
            </summary>
            <param name="pageId">Unused by this rule</param>
            <param name="aggregatedResponseItems">Aggregated response items (doesn't include the page manifest).</param>
            <param name="pageManifest">The page manifest.</param>
            <returns>True pageId is PDP and if a section marked as "required" in the manifest doesn't appear in aggregatedREsponseItems; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.PassThroughAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            This action returns the original set of aggregated ResponseItems to the client in the Response object.
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">Unused by this action.</param>
            <param name="pageId">Unused by this action.</param>
            <param name="aggregatedResponseItems">The original aggregatedResponseItems</param>
            <param name="pageManifest">Unused by this action.</param>
            <param name="cancellationToken">Unused by this action.</param>
            <returns>A response containing a single responseItem containing an ErrorResponse object</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.ReplaceWithErrorPageAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            This action throws out the original aggregated ResponseItems and replaces them with a responseItem containing an ErrorResponse.
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">The layout hydrator used to hydrate the original page</param>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">The original page manifest</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A response containing a single responseItem containing an ErrorResponse object</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.ReplaceWithPageNotFoundAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            This action throws out the original aggregated ResponseItems and replaces them with a responseItem containing an ErrorResponse.
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">The layout hydrator used to hydrate the original page</param>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">The original page manifest</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A response containing a single responseItem containing an ErrorResponse object</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.ReplaceWithSearchAllNoResultsAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            This action modifies the manifest and creates a new Response with a manifest with no sections, and sets the "noResults" property to true.
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">The layout hydrator used to hydrate the original page</param>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">The original page manifest</param>
            <param name="cancellationToken">Unused by this action.</param>
            <returns>A response containing a single responseItem containing a manifest with noResults=true</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.ReplaceWithSearchAllByPublisherAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            For SearchAllByPublisher page, remaps BrowseCommandTarget to SearchCommandTarget if SearchCommandTarget does not exist
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">The layout hydrator used to hydrate the original page</param>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">The original page manifest</param>
            <param name="cancellationToken">Unused by this action.</param>
            <returns>A response with a potentially remapped CommandInfoTable</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.SetChartResultsTitleAndNavItemIdAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            This action sets the title of the returned page to reflect the listname, category, and subcategory chosen.
            - If the user has selected only a listname, set the title to be the listname.
            - If the user has selected a listname and category, show the listname and category separated by a dot.
            - If the user has selected a listname, category, and subcategory, show the listname and subcategory
            separated by a dot. 
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">The layout hydrator used to hydrate the original page</param>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">The original page manifest</param>
            <param name="cancellationToken">Unused by this action.</param>
            <returns>The original response with the title property set to "Browse apps", "Browse games", or the original title if there was no mediaType.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.SetPdpNavItemIdAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            This action sets the NavItemId of the returned page to "Apps" or "Games" based on the app info.
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">The layout hydrator used to hydrate the original page</param>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">The original page manifest</param>
            <param name="cancellationToken">Unused by this action.</param>
            <returns>The original response with the NavItemId set to "apps" or "games"</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.Judge.SetSearchNavTitleAndTrimManifestAction(Microsoft.Marketplace.Storefront.Contracts.V1.Response,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LayoutHydrator,System.String,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem},Microsoft.Marketplace.Storefront.Contracts.V1.Manifest,System.Threading.CancellationToken)">
            <summary>
            This action sets the NavTitle of the returned page to "halo" (without quotes, and for query=halo).
            Also, ensures that at most 1 high confidence result/merchandized section appears in the manifest and response items.
            (e.g., both the OS upgrade and Get Office banners can't be shown at the same time)
            </summary>
            <param name="response">The original response</param>
            <param name="layoutHydrator">The layout hydrator used to hydrate the original page</param>
            <param name="pageId">The originally requested page ID</param>
            <param name="aggregatedResponseItems">The original aggregated ResponseItems</param>
            <param name="pageManifest">The original page manifest</param>
            <param name="cancellationToken">Unused by this action.</param>
            <returns>The original response with the navTitle property set to the search query and at most 1 high confidence result section</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.CategoryAggregationSource.domainDataHelper">
            <summary>
            source for domain data
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.CategoryAggregationSource.CategoryRequestV3">
            <summary>
            the client request for categories
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.CategoryAggregationSource.ClientProductType">
            <summary>
            the product type from the client's point of view
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.LocalFileAggregationSource.IsLocalFile(System.String)">
            <summary>
            Returns true if the datasource's path is a local file
            </summary>
            <param name="datasource">The datasource to check</param>
            <returns>True if the datasource is a local file</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Aggregation.ErrorInfoAggregationSourceV3">
            <summary>
            Aggregation source for error pages
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.BusinessLogic.Filters.ReviewsContentFilterOwner">
            <summary>
            set of filters for the reviews page 
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.BusinessLogic.Filters.ReviewsSortByContentFilter">
            <summary>
            ContentFilter for Review L2 Page SortBy choices
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.BusinessLogic.Filters.ReviewsStarContentFilter">
            <summary>
            ContentFilter for Review L2 Page star filter choices
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AddOnsRequest">
            <summary>
            Represents a request for AddOns for a given parent product ID
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AddOnsRequest.#ctor(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RequestContext)">
            <summary>
            Creates an AddOnsRequest instance.
            </summary>
            <param name="parentProductId">The parent product id</param>
            <param name="requestContext">The request query parameters and headers</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AddOnsRequest.ToServiceProviderRequest">
            <summary>
            Converts this request into a service provider request
            </summary>
            <returns>A service provider request</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AddOnsRequest.ParentProductId">
            <summary>
            Gets or sets the Parent Product Id
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.BusinessLogic.Request.CategoryRequestV3.ClientProductType">
            <summary>
            the product type from the client's point of view
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.BusinessLogic.Request.CategoryRequestV3.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <returns>set of supported parameter names for this request, all others will be filtered out</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.BusinessLogic.Request.EntitlementsRequestV3">
            <summary>
            Encapsulates the parameters from the client for an Entitlements Request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.BusinessLogic.Request.EntitlementsRequestV3.ProductTypes">
            <summary>
            the list of ProductTypes to filter on
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.Request.EntitlementsRequestV3.ParseAndValidateCommonParameters(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            parse common parameters only if including catalog metadata is required
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.BusinessLogic.Request.EntitlementsRequestV3.ToServiceProviderRequest">
            <summary>
            creates the request for sending to the service provider
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest">
            <summary>
            Encapsulates the parameters from the client for a Filters Request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest.IsEnterpriseFilterChoice(System.String)">
            <summary>
            Check if the given choiceId (filter search filtering) is enterprise. When it is true, filter request may have to clone more serch filters.
            </summary>
            <param name="choiceId"></param>
            <returns>true if and only the choiceId is enterprise when this filter request object has an AAD UserCatalogInfoSet</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest.ParseAndValidateCommonParameters(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            Parsing and validation code for parameters common to an
            hierarchy of request parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest.IsEnterpriseRequest">
            <summary>
            This method has been defined to mean the request for lob or private PDP. Now, with filter, this is true
            when the search is called with user catalog id because this call will be related to enterprise and all subsequent AgileStore
            calls will need to have proper flag set to request the enterprise related sections.
            </summary>
            <returns>true if and only the call is related to enterprise.</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest.ListName">
            <summary>
            The list name coming from the client, for chart filters
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest.Category">
            <summary>
            The list name coming from the client, for the category selection from the home page
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.FiltersRequest.ClientAssignableFilters">
            <summary>
            Mapping of query parameter name to values; this contains only the filters where the client can set the initial choice
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PageRequest.PageId">
            <summary>
                The page ID being requested. (Eg. page.home.browse)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.BulkProductDetailsRequest.RequestBody">
            <summary>
            The product IDs being requested.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ProductDetailsRequest.ProductId">
            <summary>
            The product ID being requested.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ProductDetailsBySkuRequest.ProductId">
            <summary>
            The Product ID being requested.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ProductDetailsBySkuRequest.SkuId">
            <summary>
            The Sku ID being requested.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.SupportedQueryStringParameterNames">
            <summary>
            the set of supported parameter names for this request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.ParseAndValidateSpecificParameters">
            <summary>
            reads and removes the optional "prefix" query string parameter from the collection
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.CountProducts">
            <summary>
            Gets or sets the number of product suggestion returned
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.CountQueries">
            <summary>
            The number of query suggestions returned
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.Prefix">
            <summary>
            what the user has started to type
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.NavItemId">
            <summary>
            indicates what page the autosuggest request is coming from, to differentiate apps, music and video
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.IsSupported">
            <summary>
            Determines if auto-suggestion is supported.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AutoSuggestRequest.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <returns>set of supported parameter names for this request, all others will be filtered out</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchRequest">
            <summary>
            Base class for all Search Requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByExtensionRequestV3.SupportedQueryStringParameterNames">
            <summary>
            the set of supported parameter names for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByExtensionRequestV3.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <returns>set of supported parameter names for this request, all others will be filtered out</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByProtocolRequestV3.SupportedQueryStringParameterNames">
            <summary>
            the set of supported parameter names for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByProtocolRequestV3.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <returns>set of supported parameter names for this request, all others will be filtered out</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByTagsRequestV3.SupportedQueryStringParameterNames">
            <summary>
            the set of supported parameter names for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByTagsRequestV3.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <returns>set of supported parameter names for this request, all others will be filtered out</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByPublisherRequestV3.SupportedQueryStringParameterNames">
            <summary>
            the set of supported parameter names for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByPublisherRequestV3.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <returns>set of supported parameter names for this request, all others will be filtered out</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByQueryRequestV3.SupportedQueryStringParameterNames">
            <summary>
            the set of supported parameter names for this request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByQueryRequestV3.ParseAndValidateSpecificParameters">
            <summary>
            Parsing and validation code for only the parameters specific 
            to this type of request. 
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByQueryRequestV3.ToServiceProviderArtistsSearchRequestV1">
            <summary>
            channel artists search request from client
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByQueryRequestV3.ToServiceProviderRequestV6">
            <summary>
            converts this Client Request instance until a Service Provider Request instance
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByQueryRequestV3.Query">
            <summary>
            search query
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchByQueryRequestV3.SupportedParameters">
            <summary>
            get a set of supported parameter names for this request, all others will be filtered out
            </summary>
            <returns>set of supported parameter names for this request, all others will be filtered out</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
                Constructor for V3 and beyond App formatters. This constructor allows methods to call into DDS service
                for App detail localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache">
                <see cref="T:Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache"/>
            </param>
            <param name="loggingContext">
                <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>
            </param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatProductSummaryAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Formats a product from the V5 catalog APIs to a V3 Client Response
            </summary>
            <param name="productContext">The context holding the product and sku to be formatted</param>
            <param name="productSummary">The client product summary to use for the result</param>
            <param name="clientRequest">The client request</param>
            <param name="excludeDetails">Should details be excluded (for Bulk Browse scenarios not all details are needed)</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatProductDetailsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Threading.CancellationToken)">
            <summary>
                Formats a product from the V5 catalog APIs to a V3 Client Response
            </summary>
            <param name="productContext">The context holding the product and sku to be formatted</param>
            <param name="productDetails">The client product details to use for the result</param>
            <param name="clientRequest">The client request</param>
            <param name="cancellationToken">A cancellation token</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.ShouldFilterCompatiblePackagesSentToClient(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            Check if we need to only send compatible packages information back to StoreClient.
            This will reduce the response size to help improve performance.
            </summary>
            <param name="clientRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatContentId(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities)">
            <summary>
                Formats the content ID used for licensing by the client
            </summary>
            <param name="skuAvailabilities">The sku-availabilities tuple</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatSummaryProductPropertiesAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,System.Threading.CancellationToken)">
            <summary>
                Formats the product properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productSummary">The product summary to use for the result</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatSummaryProductMarketProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary)">
            <summary>
                Formats the product market properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productSummary">The product summary to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatSummaryProductLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
                Formats the product localized properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productSummary">The product summary to use for the result</param>
            <param name="clientRequest">Incoming client request</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatSummarySkuProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
                Formats the sku properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productSummary">The product summary to use for the result</param>
            <param name="clientRequest">Incoming client request</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.HasCompatibleSkuAvailabilities(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            returns true if the specified product has at least one compatible sku
            </summary>
            <param name="product"></param>
            <param name="clientRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.IsCompatibleAvailabilityActions(System.Collections.Generic.IList{System.String})">
            <summary>
            returns true if the specified actions contains Fulfill and License values
            </summary>
            <param name="actions"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.IsCompatibleAvailabilityConditions(Microsoft.MarketplaceServices.DisplayCatalog.BondModel.v3.Apps.UniversalAppConditions,System.String)">
            <summary>
            returns true if the conditions is compatibile with the client's deviceFamily
            </summary>
            <param name="conditions"></param>
            <param name="clientDeviceFamily"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.IsCompatiblePackage(Microsoft.MarketplaceServices.DisplayCatalog.BondModel.v3.Apps.Package,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            returns true if clientRequest is compatible with the specified package
            </summary>
            <param name="package"></param>
            <param name="clientRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.IsCompatibleArchitecture(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            returns true if the clientArchitecture is compatible with the package architectures
            </summary>
            <param name="packageArchitectures"></param>
            <param name="clientArchitecture"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.IsCompatiblePlatform(System.Collections.Generic.IList{Microsoft.MarketplaceServices.DisplayCatalog.BondModel.v3.Apps.PlatformDependency},System.String,System.UInt64,System.String)">
            <summary>
            returns true if the clientDeviceType is compatible with the package platform dependencies
            </summary>
            <param name="packagePlatformDependencies"></param>
            <param name="clientDeviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <param name="clientDeviceFamilyVersion">decimal representation of the version of the device family, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</param>
            <param name="clientDeviceType">The Device type of the calling client, "w", "wp", "wa"</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.IsCompatibleHardware(System.Collections.Generic.IList{System.String},System.String,System.Boolean)">
            <summary>
            returns true if the clientHardware is compatible with the required hardware
            </summary>
            <param name="hardwareRequirements"></param>
            <param name="packageHardware"></param>
            <param name="hwReqUseShortName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatSummarySkuLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductSummary,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Boolean)">
            <summary>
                Formats the sku localized properties that are included in a client Product Summary
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productSummary">The product summary to use for the result</param>
            <param name="clientRequest">the request sent by client</param>
            <param name="excludeDetails">Should details be excluded (for Bulk Browse scenarios not all details are needed)</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatDetailsProductProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails)">
            <summary>
                Formats the product properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productDetails">The product details to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatDetailsProductLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails)">
            <summary>
                Formats the product localized properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productDetails">The product details to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatDetailsProductMarketProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails)">
            <summary>
                Formats the product market properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the product</param>
            <param name="productDetails">The product details to use for the result</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatDetailsSkuPropertiesAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,System.Threading.CancellationToken)">
            <summary>
                Formats the sku properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productDetails">The product details to use for the result</param>
            <param name="clientRequest">The client request</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.AppFormatter.FormatDetailsSkuLocalizedProperties(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ProductFormatter.ProductFormatterContextV5,Microsoft.Marketplace.Storefront.Contracts.V3.ProductDetails,System.String,System.String)">
            <summary>
                Formats the sku localized properties that are included in a client Product Details
            </summary>
            <param name="productContext">The product context containing the sku</param>
            <param name="productDetails">The product details to use for the result</param>
            <param name="deviceType">The device type from the client request</param>
            <param name="deviceFamily">New client send deviceFamily instead of deviceType</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ResultFormatters.ManifestFormatter.ProcessPropertyBag(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Func{System.String,System.Object,System.Boolean})">
            <summary>
            Helper function to process the property bag so that if there is something to be replaced, we will replace them and then follow up with a proper action.
            </summary>
            <param name="propertyBag"></param>
            <param name="formatToken"></param>
            <param name="tokenValue"></param>
            <param name="action"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ResultFormatters.ManifestFormatter.BuildCommandInfoTable(System.String)">
            <summary>
            Construct CommandInfoTable from Associated Template
            </summary>
            <param name="associatedTemplate">The associated template to construct the
            CommandInfoTable from</param>
            <returns>The new CommandInfoTable</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.ResultFormatters.ManifestFormatter.BuildCommandInfoTable(System.Collections.Generic.IDictionary{System.String,Microsoft.Marketplace.Storefront.ServiceProviders.AgileStore.Contracts.V5.Response.CommandInfo})">
            <summary>
            Construct CommandInfoTable from the AgileStoreContracts CommandInfoTable
            </summary>
            <param name="commandInfoTable">The AgileStoreContracts CommandInfoTable</param>
            <returns>The Storefront Contracts CommandInfoTable</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.EntitlementFormatter">
            <summary>
            Class to format entitlements into client response objects.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.EntitlementFormatter.FormatEntitlements(Microsoft.MarketplaceServices.Collections.Contracts.V6.CollectionQueryResponseContractV6)">
            <summary>
            Creates an EntitlementList instance for the given source
            </summary>
            <param name="sourceEntitlements">The source of data to create the entitlements</param>
            <returns>a list of entitlements</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.EntitlementFormatter.FormatEntitlement(Microsoft.MarketplaceServices.Collections.Contracts.V6.CollectionItemContractV6)">
            <summary>
            Formats an Entitlement instance for the given source
            </summary>
            <param name="sourceEntitlement">The source of data to create the entitlement</param>
            <returns>An Entitlement for a product</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.EntitlementFormatter.FormatEntitlementStatus(System.String)">
            <summary>
            converts a status string to a EntitlementStatus enum
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.EntitlementFormatter.IsEntitlementOwnedByAnotherAccount(Microsoft.MarketplaceServices.Collections.Contracts.V6.CollectionItemContractV6)">
            <summary>
            returns true if the entitlement is owned by another account associated through a device.  this is different than entitlements owned by the device, such as OS entitlements
            </summary>
            <param name="collectionItem"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.VideoFormatter.#ctor">
            <summary>
            Empty constructor used for V2 Video Formatters
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.VideoFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Constructor for V2_5 and beyond Video formatters. This constructor allows methods to call into DDS service
            for video detail localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache"><see cref="T:Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache"/></param>
            <param name="loggingContext"><see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.MovieFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Constructor for V2_5 and beyond MovieFormatter. This constructor allows methods to call into DDS service
            for MovieFormatter localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache"><see cref="T:Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache"/></param>
            <param name="loggingContext"><see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.TvEpisodeFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Constructor for V2_5 and beyond TvEpisodeFormatter. This constructor allows methods to call into DDS service
            for TvEpisodeFormatter localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache"><see cref="T:Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache"/></param>
            <param name="loggingContext"><see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.TvSeasonFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Constructor for V2_5 and beyond TvSeasonFormatter. This constructor allows methods to call into DDS service
            for TvSeasonFormatter localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache"><see cref="T:Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache"/></param>
            <param name="loggingContext"><see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.TvSeriesFormatter.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Constructor for V2_5 and beyond TvSeriesFormatter. This constructor allows methods to call into DDS service
            for TvSeriesFormatter localization
            </summary>
            <param name="clientRequest">Incoming client request</param>
            <param name="domainDataCache"><see cref="T:Microsoft.Marketplace.Storefront.ServiceProviders.DomainData.DomainDataCache"/></param>
            <param name="loggingContext"><see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.AccountsHelper.GenerateCookie">
            <summary>
            TODO: Figure out what if we need a session cookie to pass any user information
            </summary>
            <returns>Encrypted Cookie</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataHelper">
            <summary>
            returns Domain Data for client consumption
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DomainDataHelper.GetDomainDataAsync(Microsoft.Marketplace.Storefront.BusinessLogic.Request.CategoryRequestV3,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.Threading.CancellationToken)">
            <summary>
            returns a CategoryList for the specified request
            </summary>
            <param name="domainDataRequest"></param>
            <param name="operationContext"></param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>returns a CategoryList for the specified request</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProviderResult">
            <summary>
            Encapsulates the result of a call to a provider alongside an ErrorResponse, if the call had any errors.
            The client prefers the same type to be returned for each API call, and for any error information to be returned side-by-side with
            the payload in the ResponseItem.
            This class can be expanded if a provider call needs to return multiple objects.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProviderResult.Result">
            <summary>
            The result of a provider call (e.g. Ratings, Search or Reco)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProviderResult.ErrorResponse">
            <summary>
            Optional; should be populated if there were errors in the provider call.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProviderResult.ExpiryUtc">
            <summary>
            Optional; this is when Result expires.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper.GetSearchRequestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchRequest,System.Threading.CancellationToken)">
            <summary>
            returns a ProductList for the specified SearchRequest
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="searchRequest"></param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>a ProductList for the specified SearchRequest. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper.GetEnterpriseProductListAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.EnterpriseRequest,System.Threading.CancellationToken)">
            <summary>
            Perform an enterprise search and return a ResponseItem
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="enterpriseRequest">the enterprise request</param>
            <param name="cancellationToken">A cancellation token</param>
            <returns>a ResponseItem containing ProductList for the specified EnterpriseRequest. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper.GetAddOnsRequestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AddOnsRequest,System.Threading.CancellationToken)">
            <summary>
            returns a ProductList for the specified SearchRequest
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="addOnsRequest">The add ons request</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>a AddOnList for the specified AddOnsRequest. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper.CreateSearchRequest(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RequestContext)">
            <summary>
            Creates a search request for the given query and query string parameters
            </summary>
            <param name="requestContext">The query string parameters and headers of the request</param>
            <returns>A SearchByQueryRequest instance, versioned based on the SearchHelper version</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper.GetStubbedSearchResponse(System.Int32)">
            <summary>
            returns a Stubbed Search Response with the specified number of items
            </summary>
            <param name="itemCount">number of ProductSummary objects in the ProductList</param>
            <returns>a ProductList for the specified number of items. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper.GetStubbedAddOnsResponse(System.Int32,System.String)">
            <summary>
            returns a Stubbed AddOns Response with the specified number of items
            </summary>
            <param name="itemCount">number of AddOn objects in the AddOnList</param>
            <param name="parentProductId">The parent product ID to include in the addon object</param>
            <returns>A list of AddOns. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper.GetStubbedSearchResponse(System.Int32,System.String)">
            <summary>
            returns a Stubbed Search Response with the specified number of items
            </summary>
            <param name="itemCount">number of ProductSummary objects in the ProductList</param>
            <param name="caller">not used, not sure why someone added it</param>
            <returns>a ProductList for the specified number of items. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.MusicVideoSearchLanguages">
            <summary>
            for Music/Video search, mapping of market to language to be used in that market
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.GetLanguageFromLocale(System.String)">
            <summary>
            Extracts and returns the language from a locale (e.g., "en-us" => "en").
            TODO: Port the Locale class from Phone Blue source
            </summary>
            <param name="locale">The locale from the client</param>
            <returns>The language portion of a locale; if unable to extract a language, then the input locale is returned unchanged.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.GetParsedLanguages(System.String)">
            <summary>
            returns an enumerable of the languages parsed by the delimiter
            </summary>
            <param name="languages"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.GetMusicVideoSearchLanguage(System.String,System.String)">
            <summary>
            returns the language to be used in searching for music or videos
            </summary>
            <param name="market">market or musicMarket</param>
            <param name="clientLocales">locales sent by client, aka user preferred languages</param>
            <returns>the language to be used in searching for music or videos</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.SearchLanguage">
            <summary>
            contains the searchLanguage for a given country
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.SearchLanguage.#ctor(System.String)">
            <summary>
            creates instance of SearchLanguage for only one language
            </summary>
            <param name="language"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.SearchLanguage.#ctor(System.Collections.Generic.IList{System.Tuple{System.String,System.String}})">
            <summary>
            creates instance of SearchLanguage for multiple languages, first in the list is default language
            </summary>
            <param name="languages">list of LanguagePair instances, first in the list is default language</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.SearchLanguage.GetSearchLanguage(System.String)">
            <summary>
            returns the search language to be used
            </summary>
            <param name="clientLocales"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.SearchLanguage.Language">
            <summary>
            if only one language is used in the country
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.LocaleHelper.SearchLanguage.Languages">
            <summary>
            if there are multiple langauges in the country, first in the list is default language
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PurchaseHelper.AlwaysTriggerRollbackPuids">
            <summary>
            We can put our test accounts to this list, so we will send AlwaysTriggerRollback header to Purchase API.
            To setup purchase test account: https://microsoft.sharepoint.com/teams/osg_oss/marketplace/m$/SitePages/M$%20Test%20Accounts.aspx
            To enable this for local debugging:
            -- Make sure the user account used in the fusion test is in the list
            -- add AccountHelper.DefaultDummyPuid into the list temporarily
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PurchaseHelper.ExecutePurchaseAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext)">
            <summary>
            Executes the purchases requests against the purchase provider
            </summary>
            <param name="purchaseRequest">The purchase request</param>
            <param name="providersManager">ProvidersManager object with a reference to the Purchase and EntitlementCollections Provider</param>
            <param name="opCtx">The current operation context</param>
            <returns>A PurchaseResponseBody</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.PurchaseHelper.ShouldAlwaysTriggerRollback(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.PurchaseRequest)">
            <summary>
            Helper function to determin whether we should set AlwaysTriggerRollback header for Purchase call.
            </summary>
            <param name="purchaseRequest">Purchase request</param>
            <returns>True or False</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.MinExpiry">
            <summary>
            Minimum cache expiration time (specific to this provider)
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.MaxExpiry">
            <summary>
            Maximum cache expiration time (specific to this provider)
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.GetRecoPicksRequestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RecoPicksClientRequest,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Submits a RecoPicksRequest to the Reco provider. RecoPicksRequest includes both the client PicksForYou and Top list calls.
            /// Note: RecoRelatedRequest has a separate constructor which enforces different constraints, which is why the RecoProvider
            has separate calls for both ReocPicksRequest and RecoRelatedRequest.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">RecoPicksRequest to be submitted to the Reco endpoint</param>
            <param name="listId">List ID; added to the ProductList object</param>
            <param name="listType">List type; added to the ProductList object</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>Product list that the caller should wrap in a ResponseItem. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.GetRecoRelatedRequestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RecoRelatedClientRequest,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Submits a RecoRelatedRequest to the Reco provider. RecoRelatedRequest includes the Related App client call.
            Note: RecoPicksRequest has a separate constructor which enforces different constraints, which is why the RecoProvider
            has separate calls for both ReocPicksRequest and RecoRelatedRequest.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">RecoRelatedRequest to be submitted to the Reco endpoint</param>
            <param name="listId">List ID; added to the ProductList object</param>
            <param name="listType">List type; added to the ProductList object</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>Product list that the caller should wrap in a ResponseItem. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.GetRecoAddOnsRequestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RecoAddOnsClientRequest,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Submits a RecoAddOnsRequest to the Reco provider. RecoAddOnsRequest includes the client AddOns call.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">RecoAddOnsRequest to be submitted to the Reco endpoint</param>
            <param name="listId">List ID; added to the ProductList object</param>
            <param name="listType">List type; added to the ProductList object</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>Product list that the caller should wrap in a ResponseItem. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.GetRecoTopRequestAsync(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RecoListClientRequest,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Submits a RecoPicksRequest to the Reco provider. RecoPicksRequest includes both the client PicksForYou and Top list calls.
            /// Note: RecoRelatedRequest has a separate constructor which enforces different constraints, which is why the RecoProvider
            has separate calls for both ReocPicksRequest and RecoRelatedRequest.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">RecoPicksRequest to be submitted to the Reco endpoint</param>
            <param name="listId">List ID; added to the ProductList object</param>
            <param name="listType">List type; added to the ProductList object</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>Product list that the caller should wrap in a ResponseItem. It will be versioned V2, V3, etc. based on the controller version that handled the request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.GetRecoCommon(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.RecoClientRequest,System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.RecoCall,System.Threading.CancellationToken)">
            <summary>
            Common code for all 3 public-facing reco APIs.
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="request">RecoClientRequest to be submitted to the Reco provider.</param>
            <param name="listId">List ID.</param>
            <param name="listType">List Type.</param>
            <param name="recoCall">The scenario-specific reco call.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.GetExplanation(System.Collections.Generic.IEnumerable{Microsoft.Xbox.Recommendations.Contracts.Data.ChannelExplanation})">
            <summary>
            Takes Explanation objects and returns a ready-for-client string. Reco will do localization
            and assembly (e.g. assembling "Because you were interested in {0}" and "Halo: Spartan Assault"
            </summary>
            <param name="explanations">One or more Explanations found in the Reco response</param>
            <returns>String ready to be consumed by client.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.RecoHelper.RecoEmptyErrorResult(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.DsxErrorCode,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ProductHelper.ProductListCreationOptions,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext)">
            <summary>
            Creates an empty ProductList and populates an error response for the reason why it came back empty. This is because the client expects the payload to be strongly typed,
            so switching types between ProductList and ErrorResponse is an undesirable behavior.
            </summary>
            <param name="request">ClientRequest containing market, locale and deviceType information of the caller</param>
            <param name="errorCode">The error code to hydrate.</param>
            <param name="productListCreationOptions">Metadata for creating the empty product list.</param>
            <param name="opCtx">operation context</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StubDataHelper.CreateStubListResponse(System.String,System.String)">
            <summary>
            Creates a stub list response
            </summary>
            <param name="listName">the list name</param>
            <param name="path">the path to include in the response item.</param>
            <returns>A stub response item. the payload will be versioned V2, V3 etc. based on the controller version that handled the client request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StubDataHelper.CreateStubCollectionResponse(System.String,System.String)">
            <summary>
            Creates a stub collection response
            </summary>
            <param name="listName">the list name</param>
            <param name="path">the path to include in the response item.</param>
            <returns>A stub response item. the payload will be versioned V2, V3 etc. based on the controller version that handled the client request.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.StubDataHelper.CreateStubEnterpriseApps(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ClientRequest)">
            <summary>
            Creates a stub enterprise response
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="path">the path to include in the response item.</param>
            <param name="clientRequest">The locale from the client request</param>
            <returns>A stub response item. the payload will be versioned V2, V3 etc. based on the controller version that handled the client request.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ErrorInfoHelper">
            <summary>
            This class sits in between web controllers and service providers so that other callers can get error information without
            having to go through HTTP.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.ErrorInfoHelper.GetErrorInfo(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ErrorInfoClientRequest)">
            <summary>
            Submits a request to get error information from an embedded resource.
            </summary>
            <param name="request">ErrorInfoClientRequest</param>
            <returns>Error response object containing an error summary and useful information for the user. If the error code was not found,
            a generic error response is returned instead.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.Extensions">
            <summary>
            This is just an extention to capture common code logic to convert SearchResponse to ProductList and AddOnList.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelperV3.GetEnterpriseResponsePayload(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.EnterpriseRequest,System.Threading.CancellationToken)">
            <summary>
            Perform an enterprise search and return a ProductList
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="enterpriseRequest">the enterprise request</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>a ProductList for the specified EnterpriseRequest</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelperV3.GetSearchResponsePayload(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchRequest,System.Threading.CancellationToken)">
            <summary>
            returns a ProductList for the specified SearchRequest
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="searchRequest"></param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>a ProductList for the specified SearchRequest</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelperV3.GetCatalogManifestsV6Async(System.String,System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Perform a Business catalog query for the user.
            </summary>
            <param name="token">the user's MIS ticket or AAD token</param>
            <param name="market">the market of the user</param>
            <param name="languages">the language of the user</param>
            <param name="providersManager">the service provider manager</param>
            <param name="loggingContext">the logging context</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>the CatalogManifest response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelperV3.GetAddOnResponsePayload(Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.AddOnsRequest,System.Threading.CancellationToken)">
            <summary>
            returns a ProductList for the specified SearchRequest
            </summary>
            <param name="opCtx">Operation context</param>
            <param name="addOnsRequest">The add ons request</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>a AddOnList for the specified AddOnsRequest</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelperV3.GetStubbedAddOnsResponse(System.Int32,System.String)">
            <summary>
            returns a Stubbed AddOns Response with the specified number of items
            </summary>
            <param name="itemCount">number of AddOn objects in the AddOnList</param>
            <param name="parentProductId">The parent product ID to include in the addon object</param>
            <returns>A list of AddOns</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelperV3.GetStubbedSearchResponse(System.Int32,System.String)">
            <summary>
            returns a Stubbed Search Response with the specified number of items
            </summary>
            <param name="itemCount">number of ProductSummary objects in the ProductList</param>
            <param name="caller">not used, not sure why someone added it</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V2.ErrorInfoControllerV2.GetErrorInfo">
            <summary>
            Gets the error info for a given error code and context (e.g. context = DSX and error = 1 (or PagesAllAggregationSourcesFailed))
            </summary>
            <group>ErrorInfo V2</group>
            <verb>GET</verb>
            <url>http://localhost/channels/errorInfo</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header>
            <queryParam name="market" type="string">The caller's market.</queryParam>
            <queryParam name="locale" type="string">The caller's locale.</queryParam>
            <queryParam name="context" type="string">The source of the error.</queryParam>
            <queryParam name="code" type="string">The error code.</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>An error response object with a description of the error.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeEvents">
            <summary>
            StoreEdge FD events
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeEvents.LogPurchaseCompleted(Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.String)">
            <summary>
            Logs a purchase that was completed
            </summary>
            <param name="logger">sequenced event logger</param>
            <param name="context">Logging context</param>
            <param name="orderId">OrderId purchase</param>
            <param name="productsList">Products in order</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeEvents.LogPurchaseFailed(Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.String)">
            <summary>
            Logs a purchase has failed
            </summary>
            <param name="logger">sequenced event logger</param>
            <param name="context">Logging context</param>
            <param name="errorCode">Failure error code</param>
            <param name="errorDescription">Failure description</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeEvents.LogPurchaseOrderCreated(Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.String)">
            <summary>
            Logs a paid purchase order that was created
            </summary>
            <param name="logger">sequenced event logger</param>
            <param name="context">Logging context</param>
            <param name="orderId">OrderId purchase</param>
            <param name="productsList">Products in order</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeEvents.LogDeviceManagementRequestStatus(Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.String,System.String,System.String,System.Boolean,Microsoft.Diagnostics.Tracing.EventLevel)">
            <summary>
            Logs an executed request to Device Management Provider
            Identifies the request's completion state as "Success" or "Failed"
            </summary>
            <param name="logger">sequenced event logger</param>
            <param name="context">Logging context</param>
            <param name="deviceId">Device Id of the device being registered</param>
            <param name="successState">"Success" or "Failed"</param>
            <param name="latencyInMilliseconds">approximate latency In Milliseconds</param>
            <param name="errorMessage">If failed, log error message here</param>
            <param name="userAccountError">If failed, indicate if it's due to issue with account and not service here</param>
            <param name="eventLevel">Event level, default is informational</param>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.Program">
            <summary>
            Initializes the StoreEdgeFD service.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Program.ConfigureService(System.Web.Http.HttpConfiguration,Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger)">
            <summary>
            Configures the service handlers, filters, and routes.
            </summary>
            <param name="configuration">Configuration to update</param>
            <param name="environmentDefinition">The specified environment definition</param>
            <param name="providersManager">The external providers manager.</param>
            <param name="counterFactory">Counter factory to create counters with</param>
            <param name="logger">Sequenced event logger</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.Program.AddMessageHandlers(System.Web.Http.HttpConfiguration,Microsoft.Marketplace.Storefront.Configuration.EnvironmentDefinition,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager)">
            <summary>
            Add MessageHandlers to the configuration
            </summary>
            <param name="configuration"></param>
            <param name="environmentDefinition"></param>
            <param name="counterFactory"></param>
            <param name="logger"></param>
            <param name="providersManager"></param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.Program.ServiceBuildVersion">
            <summary>
            The version of this assembly => the service build version, used for logging purposes.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.QueryParameterNameHelper">
            <summary>
            Class containing helpers for query parameters for the FD service
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.QueryParameterNameHelper.TypeParameterNames">
            <summary>
            dictionary mapping types in QueryParameterNames class to constant values
            </summary>
            <remarks>
            for example, QueryParameterNameHelper.Search would be mapped to a ISet with the values "mediaType", "genres", etc
            </remarks>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.QueryParameterNameHelper.GetParameterNames(System.Type)">
            <summary>
            returns the set of parameter names for the specified type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.QueryParameterNameHelper.CreateTypeParameterNames">
            <summary>
            creates the value for TypeParameterNames 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.QueryParameterNameHelper.AddTypeParameterNames(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.ISet{System.String}})">
            <summary>
            adds the constant values for the specified type to the dictionary, recurse through nested types
            </summary>
            <param name="type"></param>
            <param name="dictionary"></param>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.QueryParameterNameHelper.SearchFilters">
            <summary>
            Declaration of sub namespace for search filters, to be used for detokenization
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions">
            <summary>
            Provides exceptions for the StoreEdge service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.Source">
            <summary>
            Fault source for the StoreEdge service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.MissingRequiredParameter">
            <summary>
            The request has not provided a parameter that is required by the service
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.InvalidParameterValue">
            <summary>
            The request has provided an invalid value for a parameter recognized by the service
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.StubDataNotFound">
            <summary>
            The request has references a stub data source that could not be found
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.IdMismatch">
            <summary>
            The ID value present in the URI differs from the one present in the request body.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.UnknownServerError">
            <summary>
            catch all for any exception that occurs that is not caught and handled else where
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.TimeOut">
            <summary>
            when a service provider takes too long to respond
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.UpstreamServerError">
            <summary>
            when a service provider takes too long to respond
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.UnauthorizedPreviewRequest">
            <summary>
            when a preview request is made by a user that is not authorized to do so
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.RequiredParameterMissingException(System.String,System.String)">
            <summary>
            Returns an exception wrapping a fault response indicating that the caller has not provided 
            a parameter required by the service.
            </summary>
            <param name="parameterName">The name of the missing service parameter.</param>
            <param name="message">optional message to return, otherwise a default message is created</param>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.InvalidParameterValueException(System.String,System.String)">
            <summary>
            Returns an exception wrapping a fault response indicating that the caller has provided 
            an invalid value for a parameter recognized by the service.
            </summary>
            <param name="parameterName">The name of the invalid service parameter.</param>
            <param name="invalidValue">The invalid value passed by the caller.</param>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.IdMismatchException(System.String,System.String)">
            <summary>
            Returns an exception wrapping a fault response indicating that the URI ID and the request body ID differ.
            </summary>
            <param name="pathArgumentId">ID from the URI path argument</param>
            <param name="requestId">ID from the request body</param>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.StubDataNotFoundException">
            <summary>
            Returns an exception wrapping a fault response indicating that the caller has attempted to
            use a stub resource that does not exist
            </summary>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.UnknownServerErrorException(System.String)">
            <summary>
            Returns an exception wrapping a fault response indicating that the server was experienced an unknown server error
            </summary>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.TimeOutException">
            <summary>
            Returns an exception wrapping a fault response indicating that service did not receive a timely response from the upstream server
            </summary>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.UpstreamServerException(System.Net.HttpStatusCode,Microsoft.MarketplaceServices.Core.ServiceFault)">
            <summary>
            Returns an exception wrapping a fault response indicating that service received an error response from a upstream server
            </summary>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.ServiceExceptions.UnauthorizedPreviewRequestException(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns an exception wrapping a fault response indicating that the
            preview request is not authorized.
            </summary>
            <param name="requestPath">the path of the preview request</param>
            <param name="authorizedGroupId">the authorized preview user group id</param>
            <param name="treatments">the actual group id of the user that sends the preview request</param>
            <returns>Exception wrapping the fault response</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V1.NavigationControllerV1.GetFixedNavigation">
            <summary>
            GetFixedNavigation
            </summary>
            <group>Navigation V1</group>
            <verb>GET</verb>
            <url>http://localhost/navigations</url>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:ResponseItem[]"/>ResponseItems</responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V1.NavigationControllerV1.GetNavigationByName(System.String)">
            <summary>
            Get Navigation
            </summary>
            <group>Navigation V1</group>
            <verb>GET</verb>
            <url>http://localhost/navigations/{name}</url>
            <pathParam name="name" type="string" required="true">Navigation list name</pathParam>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.AutoSuggestControllerV3.GetSuggestions">
            <summary>
            Returns suggestions based on what the user has started to type
            </summary>
            <remarks>Currently stubbed to always return empty lists</remarks>
            <group>AutoSuggest V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/autosuggest</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="prefix" type="string" required="false">what the user has started to type</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>AutoSuggestions object which contains a collection of ProductSummary objects and a collection of strings for suggested searches</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.CollectionControllerV3.GetCollectionAsync(System.String)">
            <summary>
            returns collection for collection id
            </summary>
            <group>Collections V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/collections/{collectionId}</url>
            <pathParam name="collectionId" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.CuratedContentControllerV3.GetCuratedChannelAsync(System.String)">
            <summary>
            returns curated content for channel id
            </summary>
            <group>Curated Content V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/curated/{channelId}</url>
            <pathParam name="channelId" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.EnterpriseControllerV3.GetEnterpriseApps">
            <summary>
            Get the apps of an enterprise. We think we don't need [RpsAuthorization] for enterprise because
            the user has already been authorized by M$ when navigation is returned.
            </summary>
            <group>Enterprise V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/enterprise</url>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A product list representing enterprise apps.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V1.CategoryControllerV3.GetCategoriesAsync(System.String)">
            <summary>
            returns a list of categories for the specified clientProductType (Apps or Games)
            </summary>
            <group>Category V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/category/{clientProductType}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="clientProductType" type="string" required="true">which list of categories to return "Apps" or "Games"</pathParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <param name="clientProductType">which list of categories to return "Apps" or "Games"</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V2.FiltersControllerV3.GetFilters(System.String)">
            <summary>
            returns the set of filters for the specified page
            </summary>
            <group>Filters V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/filters/{page}</url>
            <pathParam name="page" type="string" required="true">the page to return filters for</pathParam>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.PageControllerV3.GetPagesAsync(System.String)">
            <summary>
            GetPagesAsync
            </summary>
            <group>Pages V3</group>
            <verb>GET</verb>
            <url>http://localhost/pages/{pageName}</url>
            <pathParam name="pageName" type="string" required="true"/>
            <header name="MS-Contract-Version" type="number">Specifies the verions of the contracts used</header>
            <header name="MS-CorrelationId" type="string">Correlation ID for the request</header>
            <header name="MS-RequestId" type="string">Request ID for the request</header>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ProductDetailsControllerV3.GetProductDetailsAsync(System.String)">
            <summary>
            Gets the product details for the given product Id from the catalog.
            </summary>
            <group>Product Details V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/products/{productId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="productId" type="string" required="true"/>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <param name="productId">The product Id to get details for.</param>
            <returns>The product details from the catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ProductDetailsControllerV3.GetBulkProductDetailsAsync(Microsoft.Marketplace.Storefront.Contracts.V1.BulkProductRequestBody)">
            <summary>
            Gets the product summary for the given list of product Ids from the catalog.
            </summary>
            <group>Bulk Product Summary V3</group>
            <verb>POST</verb>
            <url>http://localhost/channels/products</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="idType" type="string" required="false">the type of the ids provided in the request, (ProductId, PackageFamilyName, etc)</queryParam>
            <requestType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.BulkProductRequestBody"/></requestType>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <param name="requestBody">The request body containing a list of product Ids</param>
            <returns>A list of product summary from the catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.ProductDetailsControllerV3.GetProductDetailsBySkuAsync(System.String,System.String)">
            <summary>
            Gets the product details for the given product Id and sku Id from the catalog.
            </summary>
            <group>Product Details V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/products/{productId}/{skuId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="productId" type="string" required="true">The product Id to get details for.</pathParam>
            <pathParam name="skuId" type="string" required="true">The sku Id to get details for.</pathParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <param name="productId">The product Id to get details for.</param>
            <param name="skuId">The sku Id to get details for.</param>
            <returns>The product details from the catalog for the specified sku.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RecoControllerV3.GetPicksForYouAsync(System.Boolean)">
            <summary>
            Gets personalized, non-contextual recommendations.
            </summary>
            <group>Reco V3</group>
            <verb>GET</verb>
            <url>http://storeedgefd.dsx.mp.microsoft.com/channels/recommendations/picks</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="true">The source device type. Either "w" or "wp".</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam>
            <queryParam name="itemType" type="string" required="true">Either "Apps" or "Movies".</queryParam><queryParam name="category" type="string" required="false">Can be "Apps", "Games", or omitted to get both Apps and Games.</queryParam><queryParam name="count" type="int" required="false">Number of results in a page. Pagination will be supported in M2.
        This parameter is currently ignored.</queryParam>
            <queryParam name="genre" type="string">Genre of the results. Examples include "Social" or "Productivity".</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A ResponseItem containing a list of hydrated product summaries.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RecoControllerV3.GetRelatedAsync(System.String,System.Boolean)">
            <summary>
            Gets products related to a seed product.
            </summary>
            <group>Reco V3</group>
            <verb>GET</verb>
            <url>http://storeedgefd.dsx.mp.microsoft.com/channels/recommendations/related/products/{productId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="true">The source device type. Either "w" or "wp".</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam>
            <queryParam name="itemType" type="string" required="true">Either "Apps" or "Movies".</queryParam><queryParam name="category" type="string" required="false">Can be "Apps", "Games", or omitted to get both Apps and Games.</queryParam><queryParam name="count" type="int" required="false">Number of results in a page. Pagination will be supported in M2.
        This parameter is currently ignored.</queryParam>
            <pathParam name="productId" type="string" required="true">Product ID of the seed product.</pathParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A ResponseItem containing a list of hydrated product summaries.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RecoControllerV3.GetAddOnsAsync(System.String)">
            <summary>
            Gets top AddOns for a seed (parent) product.
            </summary>
            <group>Reco V3</group>
            <verb>GET</verb>
            <url>http://storeedgefd.dsx.mp.microsoft.com/channels/recommendations/addons/products/{productId}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="true">The source device type. Either "w" or "wp".</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam>
            <queryParam name="itemType" type="string" required="true">Either "Apps" or "Movies".</queryParam><queryParam name="category" type="string" required="false">Can be "Apps", "Games", or omitted to get both Apps and Games.</queryParam><queryParam name="count" type="int" required="false">Number of results in a page. Pagination will be supported in M2.
        This parameter is currently ignored.</queryParam>
            <pathParam name="productId" type="string" required="true">Product ID of the seed product.</pathParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A ResponseItem containing a list of hydrated product summaries for each child add on.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RecoControllerV3.GetTopAsync(System.String,System.Boolean)">
            <summary>
            Gets a "Top X" list.
            </summary>
            <group>Reco V3</group>
            <verb>GET</verb>
            <url>http://storeedgefd-dogfood.dsx.mp.microsoft.com/channels/recommendations/list/{listName}</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="true">The source device type. Either "w" or "wp".</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam>
            <queryParam name="itemType" type="string" required="true">Either "Apps" or "Movies".</queryParam><queryParam name="category" type="string" required="false">Can be "Apps", "Games", or omitted to get both Apps and Games.</queryParam><queryParam name="count" type="int" required="false">Number of results in a page. Pagination will be supported in M2.
        This parameter is currently ignored.</queryParam>
            <pathParam name="listName" type="string" required="true">The type of list. Possible values are TopFree,
            TopGrossing, TopPaid, NewAndRising and BestRated</pathParam>
            <queryParam name="genre" type="string">Genre of the results. Examples include "Social" or "Productivity".</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A ResponseItem containing a list of hydrated product summaries.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.RecoControllerV3.GetBrowseAsync(System.Boolean)">
            <summary>
            Gets a "Browse" list.
            </summary>
            <group>Reco V3</group>
            <verb>GET</verb>
            <url>http://storeedgefd-dogfood.dsx.mp.microsoft.com/channels/recommendations/list</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <!-- No matching elements were found for the following include tag --><include file="..\V3\QueryParamsApiDoc.xml" path="queryParamSets/queryParamSet[@name=&quot;RecoQueryParams&quot;]/*"/>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A ResponseItem containing a list of hydrated product summaries.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.SearchByQuery">
            <summary>
            Search By Query: Performs a search for products in the catalog.
            </summary>
            <group>Search V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/search</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="query" type="string" required="false">search term.</queryParam><queryParam name="pageSize" type="int" required="true">maximum number of items to return</queryParam><queryParam name="skipItems" type="int" required="false">number of items to skip before returning results</queryParam><queryParam name="mediaType" type="string" required="true">filter items by type, "Apps", "Games", "Movies", etc</queryParam><queryParam name="category" type="string" required="false">filter items by Category or Genre, "Business", "Lifestyle", etc</queryParam><queryParam name="subcategory" type="string" required="false">filter items by Subcategory or Subgenre "Automotive", "DYI", etc</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A product list representing the search result.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.SearchByPublisher">
            <summary>
            Search By Publisher: Performs a search for apps by the specified publisherId or publisherName
            </summary>
            <group>Search V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/searchbypublisher</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="publisherId" type="string" required="true">publisherId to filter apps</queryParam><queryParam name="pageSize" type="int" required="true">maximum number of items to return</queryParam><queryParam name="skipItems" type="int" required="false">number of items to skip before returning results</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A product list representing the search result.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.SearchByExtension">
            <summary>
            Search By File Extension: Performs a search for apps by the specified file extension.
            </summary>
            <group>Search V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/searchbyextension</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="extension" type="string" required="true">file extension to filter apps</queryParam><queryParam name="pageSize" type="int" required="true">maximum number of items to return</queryParam><queryParam name="skipItems" type="int" required="false">number of items to skip before returning results</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A product list representing the search result.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.SearchByProtocol">
            <summary>
            Search By Protocol: Performs a search for apps by the specified protocol.
            </summary>
            <group>Search V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/searchbyprotocol</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="protocol" type="string" required="true">protocol to filter apps</queryParam><queryParam name="pageSize" type="int" required="true">maximum number of items to return</queryParam><queryParam name="skipItems" type="int" required="false">number of items to skip before returning results</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A product list representing the search result.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.SearchByTags">
            <summary>
            Search By Tags: Performs a search for apps by the specified tags.
            </summary>
            <group>Search V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/searchbytags</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="tags" type="string" required="true">tags to filter apps</queryParam><queryParam name="pageSize" type="int" required="true">maximum number of items to return</queryParam><queryParam name="skipItems" type="int" required="false">number of items to skip before returning results</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>A product list representing the search result.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.GetProductAddOnsAsync(System.String)">
            <summary>
            Performs a search for add-ons in the catalog for a parent product Id.
            </summary>
            <group>Search V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/products/{parentProductId}/addons</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <pathParam name="parentProductId" type="string" required="true"/>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
            <returns>An addon list representing the search result.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.Search(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchRequest)">
            <summary>
            performs a search for the specified searchRequest
            </summary>
            <param name="searchRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V3.SearchControllerV3.SearchFromController(Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Utils.SearchHelper,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.SearchRequest,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.OperationContext)">
            <summary>
            performs a search for the specified searchRequest
            </summary>
            <param name="searchHelper">The search utilities</param>
            <param name="requestPath">The requesting url path</param>
            <param name="searchRequest">The search request</param>
            <param name="operationContext">The operation context</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Controllers.V1.EntitlementsControllerV3.QueryEntitlementsAsync">
            <summary>
            returns a paginated list of entitlements for the specified user identities
            </summary>
            <group>Entitlements V3</group>
            <verb>GET</verb>
            <url>http://localhost/channels/entitlements</url>
            <header name="MS-Contract-Version" type="number" required="true" direction="RequestOnly">Specifies which version of the contract the client is targeting. </header><header name="MS-CorrelationId" type="string" required="true" direction="RequestAndResponse">
      The correlationId is defined by the client to be able to correlate all traces for a logical operation. Several calls to the service can use the same correlationId.
    </header><header name="MS-RequestId" type="string" required="true" direction="RequestAndResponse">
      The requestId is defined by the client to be able to correlate all traces for a specific service request. For each call to the service the client generates a new unique identifier.
    </header><header name="User-Agent" type="string" required="false" direction="RequestOnly">specifies the client type and version.  For example: WindowsStore/2014.12.4.65530 (required if not provided in appVersion query string parameter)</header>
            <queryParam name="market" type="string" required="true">Market code of the request. For example: us</queryParam><queryParam name="musicMarket" type="string" required="false">Xbox Live Music Market code of the request. This will override the market parameter for song and album searches. For example: us</queryParam><queryParam name="locale" type="string" required="true">Locale of the request. For example: en-US</queryParam><queryParam name="deviceType" type="string" required="false">The source device type. Either "w" for desktop, "wp" for windows phone, or "wa" for windows analog.</queryParam><queryParam name="deviceFamily" type="string" required="false">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</queryParam><queryParam name="deviceFamilyVersion" type="ulong" required="false">decimal representation of the version of the device family of the calling client, for example "1688858450264064" which equals "0x0006 0002 0001 0000" which means "6.2.1"</queryParam><queryParam name="stub" type="bool" required="false">Whether or not to use stub data.</queryParam><queryParam name="appVersion" type="string" required="false">version of the store client. For example: 2014.8.1.1  (Required if not specified in User-Agent HTTP header)</queryParam>
            <queryParam name="pageSize" type="int" required="true">number of items in each page</queryParam><queryParam name="modifiedAfter" type="DateTime" required="false">time in Utc after which an entitlement was modified</queryParam><queryParam name="pageToken" type="string" required="false">continuation token for paged requests</queryParam>
            <responseType><see cref="T:Microsoft.Marketplace.Storefront.Contracts.V1.ResponseItem"/></responseType>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.RpsAuthorizationAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Override to Web API filter method to handle Basic Auth check
            Auth check doesn't run on local box
            </summary>
            <param name="actionContext"></param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.RpsAuthorizationAttribute.AuthenticationRequired">
            <summary>
            set to true, if authentification is required, if so, a failed ticket will be return 401 to called
            otherwise, only try to crack open ticket for PUID.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Filters.UriReplaceHandler">
            <summary>
            This handler is to replace incoming uri, it works for mapped query parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.MediaTypeFormatters.ConfigurableBufferJsonFormatter">
            <summary>
            Adds ability to configure the size of the buffer for the writer.
            This is to control the size of chunk of data passed to the underlying stream at once,
            which may matter, because for us, this chunk will go directly to a native compression routine.
            If it proves useful, it will be moved to StoreCommon.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.MediaTypeFormatters.ConfigurableBufferJsonFormatter.CreateJsonWriter(System.Type,System.IO.Stream,System.Text.Encoding)">
            <summary>
            The same implementation as in JsonMediaTypeFormatter, only this one passes custom buffer size to StreamWriter.
            </summary>
            <param name="type"></param>
            <param name="writeStream"></param>
            <param name="effectiveEncoding"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.AgileStoreBaseProvider">
            <summary>
            A class to provide base functionality for agile store providers (layout/channel).
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.AgileStoreBaseProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,System.String,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>AgileStoreBaseProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed.</param>
            <param name="clientTimeout">The timeout period for requests.</param>
            <param name="serviceName">The service name to use.</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.AgileStoreBaseProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>AgileStoreBaseProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI.</param>
            <param name="clientTimeout">The timeout period for requests.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.AgileStoreBaseProvider.SendRequestAsync``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs a agile store request.
            </summary>
            <typeparam name="TResult">The type of the response.</typeparam>
            <param name="request">The agile store request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version to use.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the agile store response from either layout or channel services.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.AgileStoreBaseProvider.SendRequestAndGetHeadersAsync``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs a agile store request.
            </summary>
            <typeparam name="TResult">The type of the response.</typeparam>
            <param name="request">The agile store request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version to used in the header. If null, the contract version will not be included as a header</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the agile store response from either layout or channel services.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5">
            <summary>
            Represents a request to the Agile Store v5
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest">
            <summary>
            Represents a request to the Agile Store
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.ParameterNames">
            <summary>
            The list of query parameter names
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.reservedParameterNames">
            <summary>
            A set of query parameter names which are reserved and cannot be contained in AdditionalQueryParameters
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest"/> instance.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="reservedParameterNames">A list of query parameter names which are reserved and should not be provide through AdditionalQueryParameters</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for paramters to include in the path, or null if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>A dictionary in which the key represents the query parameter name and the value represents the query parameter value.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.AddRequestSpecificQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds any request type specific parameters to the query parameter dictionary.
            </summary>
            <param name="queryParameters">The dictionary of query parameters that additional values should be added to.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.HttpMethod">
            <summary>
            Gets the HTTP method used by the HTTP request message
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequest.Parameter">
            <summary>
            Query parameters used by AgileStoreBaseRequest
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.ApiVersionParameterName">
            <summary>
            The name of the parameter placeholder in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.ApiVersionParameterValue">
            <summary>
            The name of the parameter value in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.ParameterNames">
            <summary>
            The list of query parameter names
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.#ctor(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5"/> instance.
            </summary>
            <param name="requestContext">The request context.</param>
            <param name="reservedParameterNames">A list of query parameter names which are reserved and should not be provide through AdditionalQueryParameters</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for paramters to include in the path, or null if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>A dictionary in which the key represents the query parameter name and the value represents the query parameter value.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.AddRequestSpecificUriParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds any request type specific parameters to the uri parameter dictionary.
            </summary>
            <param name="uriParameters">The dictionary of uri parameters that additional values should be added to.</param>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreBaseRequestV5.Parameter">
            <summary>
            Query parameters used by AgileStoreBaseRequestV5
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext">
            <summary>
            Holds the parameter values of a request that will be sent to the Agile Store
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext"/> instance.
            </summary>
            <param name="market">The request market.</param>
            <param name="locale">The request locale.</param>
            <param name="deviceType">The request device type.</param>
            <param name="clientType">The request client type.</param>
            <param name="clientVersion">The request store app version.</param>
            <param name="storefrontVersion"></param>
            <param name="oem">The request device OEM (could be null).</param>
            <param name="mobileOperator">The request device MO (could be null).</param>
            <param name="hardware">The request hardware (could be null)</param>
            <param name="scmId">The request device model (could be null)</param>
            <param name="mediaType">The request media type (could be null)</param>
            <param name="architectures">The request OS Architecture.</param>
            <param name="include">Not used</param>
            <param name="exclude">Gets set when not seeing MusicMarket parameter from the client</param>
            <param name="userSegments">Token to be used as cache key for any experiments</param>
            <param name="deviceFamily">the device family</param>
            <param name="previewToken">Allow preview user mock CMCP/LP params</param>
            <param name="isPreviewAuthorized">Check if current user is preview authenticated</param>
            <param name="catalogIds">The request's product catalog ids</param>
            <param name="userCatalogIds">The caller's private catalog ids</param>
            <param name="stub">The stub request flag.</param>
            <param name="okIfNotFound">the flag indicating if http status code 204 is preferred than 404 or not when no data is found</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Market">
            <summary>
            Gets or sets the market for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Locale">
            <summary>
            Gets or sets the locale for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.DeviceType">
            <summary>
            Gets or sets the device type for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.DeviceFamily">
            <summary>
            Gets or sets the device family for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.ClientVersion">
            <summary>
            Gets or sets the client app version for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.StorefrontVersion">
            <summary>
            Gets or sets the storefront version (the contract version of the edge request)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Oem">
            <summary>
            Gets or sets the OEM for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.MobileOperator">
            <summary>
            Gets or sets the MO for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Hardware">
            <summary>
            Gets or sets the Hardware for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.ScmId">
            <summary>
            Gets or sets the Device Model for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.MediaType">
            <summary>
            Gets or sets the Media Type for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Architectures">
            <summary>
            Gets or sets the OS architecture for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Stub">
            <summary>
            Gets or sets the flag indicating if stub response is expected.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.OkIfNotFound">
            <summary>
            Gets or sets the flag indicating if http status code 204 is preferred than 404 or not
            when no data is found.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.ClientType">
            <summary>
            Gets or sets the client type for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Include">
            <summary>
            Not used
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.Exclude">
            <summary>
            Gets or sets when not seeing MusicMarket parameter from the client
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.UserSegments">
            <summary>
            Gets or sets an encoded token that contains the user's segments
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.PreviewToken">
            <summary>
            Gets or sets the preview token
            </summary>
            [PreviewFeature]
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext.IsPreviewAuthorized">
            <summary>
            Gets or sets if current user is preview authorized
            </summary>
            [PreviewFeature]
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5">
            <summary>
                Represents a request to the curated channel service
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.ChannelsUriTemplate">
            <summary>
                The URI template for channels requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.ChannelGroupsUriTemplate">
            <summary>
                The URI template for channels requests with groupId
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.ParameterLength">
            <summary>
                The length of the individual query parameter
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.ParameterNames">
            <summary>
                The list of query parameter names
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.FromId(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext,System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
                Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5"/> instance.
            </summary>
            <param name="channelId">The request channel Id.</param>
            <param name="requestContext">The request context.</param>
            <param name="skipItems">The request offset of the start index.</param>
            <param name="pageSize">The request page size.</param>
            <param name="dataVersion">The request data version.</param>
            <param name="itemTypes">The request item types to be included in the response (limit to 128 chars).</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.FromName(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext,System.UInt32,System.UInt32,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5"/> instance.
            </summary>
            <param name="channelGroupName">The request channel group name.</param>
            <param name="requestContext">The request context.</param>
            <param name="skipItems">The request offset of the start index.</param>
            <param name="pageSize">The request page size.</param>
            <param name="dataVersion">The request data version.</param>
            <param name="itemTypes">The request item types to be included in the response (limit to 128 chars).</param>
            <param name="age">Age of the user</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.FromQueryParams(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext,System.Collections.Specialized.NameValueCollection)">
            <summary>
                Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5"/> instance.
            </summary>
            <param name="channelGroupName">The request channel group name.</param>
            <param name="requestContext">The request context.</param>
            <param name="queryParams">Query parameter collection</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.AddRequestSpecificQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
                Adds channel-specific query parameters to the list of request query parameters
            </summary>
            <param name="queryParameters">The dictionary of query parameters that additional values should be added to.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.ChannelId">
            <summary>
                Gets or sets the channel Id for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.SkipItems">
            <summary>
            Gets or sets the offset of the start index for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.Count">
            <summary>
            Gets or sets the page size for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.ItemTypes">
            <summary>
            Gets or sets the include item types for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.ContinuationToken">
            <summary>
            Gets or sets the continuation token for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.DataVersion">
            <summary>
            Gets or sets the data version for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.Age">
            <summary>
            Age of the user
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.UriTemplate">
            <summary>
                Gets the URI template for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.CuratedChannelRequestV5.Parameter">
            <summary>
            parameters used by CuratedChannelRequestV5
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5">
            <summary>
                Represents a request to the store layout service
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.PagesUriTemplate">
            <summary>
                The URI template for page requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.PageGroupsUriTemplate">
            <summary>
                The URI template for page requests with groupId
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.ParameterNames">
            <summary>
                The list of query parameter names
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.FromName(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext,System.Collections.Specialized.NameValueCollection)">
            <summary>
                Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5"/> instance.
            </summary>
            <param name="pageGroupName">The request page Group Id.</param>
            <param name="requestContext">The request context.</param>
            <param name="queryParameters">A set of query parameter names and values.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.FromId(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.AgileStoreRequestContext,System.Collections.Specialized.NameValueCollection)">
            <summary>
                Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5"/> instance.
            </summary>
            <param name="pageId">The request page Id.</param>
            <param name="requestContext">The request context.</param>
            <param name="queryParameters">A set of additional query parameter names and values.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.PageId">
            <summary>
                Gets or sets the page Id for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.UriTemplate">
            <summary>
                Gets the URI template for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5.Parameter">
            <summary>
                parameters used by StoreLayoutRequestV5
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider">
            <summary>
            A class to provide data from the Curated Channel.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider.CuratedChannelServiceName">
            <summary>
            The name of the CuratedChannel Service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider.DefaultContractVersion">
            <summary>
            The API contract version to use.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>CuratedChannelProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Curated Channel service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the Curated Channel service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Curated Channel.</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>CuratedChannelProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Curated Channel service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Curated Channel.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider.ExtractChannelGroupNameAndQueryParamsV5(System.String,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            Extracts the Channel Group Name and Query parameters from a v5 channels uri
            </summary>
            <param name="uriString">V5 channels/groups uri</param>
            <param name="queryParams">Extracted query params</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewCuratedChannelProvider">
            <summary>
            A preview wraper class to provide data from the Curated Channel (either from normal CMCP or preview CMCP)
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewCuratedChannelProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.CuratedChannelProvider)">
            <summary>
            Constructs a new <c>CuratedChannelProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Curated Channel service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the Curated Channel service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Curated Channel.</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
            <param name="normalProvider">The provider for normal request</param>
            <param name="previewProvider">The provider for preview request</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewCuratedChannelProvider.NormalProvider">
            <summary>
            The provider for normal request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewCuratedChannelProvider.PreviewProvider">
            <summary>
            The provider for preview request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewStoreLayoutProvider">
            <summary>
            A preview wraper class to provide data from the Store Layout (either from normal CMCP or preview CMCP)
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider">
            <summary>
            A class to provide data from the Store Layout.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider.StoreLayoutServiceName">
            <summary>
            The name of the StoreLayout Service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider.DefaultContractVersion">
            <summary>
            The API contract version to use.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>StoreLayoutProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Store Layout service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the Store Layout service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Store Layout.</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>StoreLayoutProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Store Layout service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Store Layout.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider.GetPageV5Async(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Get a store page from the Store Layout Service.
            </summary>
            <param name="request">The search request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the store page response from the Store Layout Service.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewStoreLayoutProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.StoreLayoutProvider)">
            <summary>
            Constructs a new <c>PreviewStoreLayoutProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Store Layout service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the Store Layout service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Store Layout.</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
            <param name="normalProvider">The provider for normal request</param>
            <param name="previewProvider">The provider for preview request</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewStoreLayoutProvider.GetPageV5Async(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.Contracts.Request.LayoutRequestV5,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Get a store page from the Store Layout Service.
            </summary>
            <param name="request">The search request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the store page response from the Store Layout Service.</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewStoreLayoutProvider.NormalProvider">
            <summary>
            The provider for normal request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.AgileStore.PreviewStoreLayoutProvider.PreviewProvider">
            <summary>
            The provider for preview request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest">
            <summary>
            Representsartist search to paris media provider
            sample call is below
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.ArtistsSearchUriTemplate">
            <summary>
                The URI template for Artist search requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.ApiVersionParameterName">
            <summary>
            The name of the parameter placeholder in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.ApiVersionParameterValue">
            <summary>
            The name of the parameter value in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.ContributorIdName">
            <summary>
            The name of the parameter placeholder in the uri template for ApiVersion
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.#ctor(System.String,System.String,System.String,System.UInt32)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.#ctor(System.String,System.String,System.String,System.UInt32,System.UInt32)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for paramters to include in the path, or null if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>A dictionary in which the key represents the query parameter name and the value represents the query parameter value.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.AddRequestSpecificQueryParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            adds the specified value to the query string parameters collection
            </summary>
            <param name="queryParameters">the collection to add the query string parameter</param>
            <param name="parameterName">the name of the query string parameter</param>
            <param name="parameterValue">the value of the query string parameter</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Market">
            <summary>
            Gets or sets the market for the request, required.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Locales">
            <summary>
            Gets or sets the locales for the request, required.
            This is a comma-delimited list of languages, the service will select the fist acceptable languages in the list
            for given market, or fallback on the default language for that market. eg. en-us,es
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.ContributorId">
            <summary>
            Gets or sets the contributor id (guid) for the request, optional.
            Required for Artist Tops and relations Channels
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.SkipItems">
            <summary>
            Specifies how many items to skip before returning results, optional.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.TopItems">
            <summary>
            Gets or sets the result count for the request, required.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.UriTemplate">
            <summary>
            Gets the URI template for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.HttpMethod">
            <summary>
            http method to use when making the service request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Parameters">
            <summary>
            query string parameters names expected by the ArtistsSearch provider
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Parameters.Market">
            <summary>
            Filter products by market
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Parameters.Locales">
            <summary>
            Filter products by Locales
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Parameters.ContributorId">
            <summary>
            Filter products by contributorId
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Parameters.TopItems">
            <summary>
            Filter products by top
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest.Parameters.SkipItems">
            <summary>
            Filter products by skipItems
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider">
            <summary>
            A class to provide music and video data from ArtistsSearchProvide.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider.ServiceName">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider.ContractVersion1">
            <summary>
            The API contract version 1.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>ArtistsSearchProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>ArtistsSearchProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider.QueryArtistsAndHeader(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets 
            </summary>
            <param name="request">The paris media artist search request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the Discovery channel response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider.MakeRequestAndGetHeadersAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Request.ArtistsSearchRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs a agile store request.
            </summary>
            <param name="request">The paris media artist search request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version to used in the header. If null, the contract version will not be included as a header</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the discovery response.</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.ArtistsSearchProvider.MediaServiceMusicUriBase">
            <summary>
            return base URI template for media music service
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse">
            <summary>
            Represents a search response from the V5 DisplayCatalog APIs.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse.#ctor(System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse"/>
            </summary>
            <param name="totalResultCount">the totalResultCount</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse.#ctor(Microsoft.MediaServices.ContributorSearch.Contracts.V1.ContributorSearchResults{Microsoft.MediaServices.ContributorSearch.Contracts.V1.MusicContributorSearchResult})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse"/>
            </summary>
            <param name="response">The search response from the api response.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse.GetProductSummaries(System.Uri,System.String,System.String)">
            <summary>
            return artists list as productsummaries/// 
            </summary>
            <param name="urlBase"></param>
            <param name="locale"></param>
            <param name="musicMarket"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse.TotalResultCount">
            <summary>
            Gets or sets the total count of results
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ArtistSearch.Contracts.Response.V1.ArtistsSearchResponse.HasMorePages">
            <summary>
            Gets or sets the HasMorePages
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider">
            <summary>
            A class to provide data from the Big Catalog.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.BigCatalogServiceName">
            <summary>
            The name of the Big Catalog Service.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>BigCatalogProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Big Catalog service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the Big Catalog service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Big Catalog.</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>BigCatalogProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Big Catalog service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Big Catalog.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.GetAutoSuggestAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Performs a autosuggest on the Big Catalog.
            </summary>
            <param name="request">The autosuggest request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A task which, when completed, contains the autosuggest response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.GetCatalogManifestsV6Async(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            </summary>
            <param name="request">The search request.</param>
            <param name="token">The MSA ticket or AAD token for the caller.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the catalog manifests for the caller.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.GetProductDetailsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a product from the Big Catalog.
            </summary>
            <param name="request">The details request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the details response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.GetProductSkuDetailsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets the details of a Sku for a product from the Big Catalog.
            </summary>
            <param name="request">The details request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the details response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.GetContentRatingsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.ContentRatingsRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets the RatingBoards Metadata for the given Market and Language
            </summary>
            <param name="request">The content ratings request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token.</param>
            <returns>A task which, when completed, contains the content ratings response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.BulkProductDetailsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets the bulk details of a list of products from the Big Catalog.
            </summary>
            <param name="request">The bulk details request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the details response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.GetCacheItem(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs the cache key and looks in the AppDetails cache for the item.
            </summary>
            <returns>The cached item from AppDetails cache if found, null o.w.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.SearchProductsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Performs a search on the Big Catalog, if not cached.
            </summary>
            <param name="request">The search request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the search response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.SearchSkusAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Performs a sku search on the Big Catalog.
            </summary>
            <param name="request">The search request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the search response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.SearchBusinessProductsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Performs a search on a private (Enterprise) Catalog. Stop-gap implementation - still uses authorization token.
            </summary>
            <param name="request">The search request.</param>
            <param name="authorizationToken">The authorization token issued by Marketplace for accessing private catalog</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the search response from the the specific private catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.GetAddOnProductsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Performs a search on the Big Catalog.
            </summary>
            <param name="request">The search request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the search response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.MakeCatalogRequestAsync``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs a catalog request.
            </summary>
            <typeparam name="TResult">The type of the response.</typeparam>
            <param name="request">The catalog request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version to use.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the catalog response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.MakeCatalogRequestAsync``1(System.Net.Http.HttpRequestMessage,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs a catalog request
            </summary>
            <typeparam name="TResult">The type of the response.</typeparam>
            <param name="message">The message.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version of the request.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the catalog response from the Big Catalog.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.CreateBusinessCatalogRequestMessage(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Helper to expose ServiceProviderBase's private implementation for testing. This is important for us to test
            what types of M$ request we are sending to its services.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.BigCatalogProvider.CreateCatalogManifestRequestMessage(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Helper to expose ServiceProviderBase's private implementation for testing. This is important for us to test
            what types of M$ request we are sending to its services.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6">
            <summary>
            Represents a catalog request for retrieving suggestions
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6">
            <summary>
            common code for all display catalog V6 requests
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest">
            <summary>
            Represents a request to the Catalog
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.OrExpressionSeparator">
            <summary>
            The separator for filter expressions
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.AddRequestSpecificQueryParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Int32)">
            <summary>
            adds the specified value to the query string parameters collection
            </summary>
            <param name="queryParameters">the collection to add the query string parameter</param>
            <param name="parameterName">the name of the query string parameter</param>
            <param name="parameterValue">the value of the query string parameter</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.AddRequestSpecificQueryParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            adds the specified value to the query string parameters collection
            </summary>
            <param name="queryParameters">the collection to add the query string parameter</param>
            <param name="parameterName">the name of the query string parameter</param>
            <param name="parameterValue">the value of the query string parameter</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.AddRequestSpecificQueryParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            adds the specified values to the query string parameters collection
            </summary>
            <param name="queryParameters">the collection to add the query string parameter</param>
            <param name="parameterName">the name of the query string parameter</param>
            <param name="parameterValues">the values of the query string parameter</param>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.reservedParameterNames">
            <summary>
            A set of query parameter names which are reserved and cannot be contained in AdditionalQueryParameters
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest"/> instance.
            </summary>
            <param name="market">The request market.</param>
            <param name="languages">The request language.</param>
            <param name="reservedParameterNames">A list of query parameter names which are reserved and should not be provide through AdditionalQueryParameters</param>
            <param name="additionalQueryParameters">A set of additional query parameter names and values.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest"/> instance.
            </summary>
            <param name="market">The request market.</param>
            <param name="languages">The request language.</param>
            <param name="oemId">device oemId, may be null or empty</param>
            <param name="scmId">device scmId, may be null or empty</param>
            <param name="moId">device moId, may be null or empty</param>
            <param name="reservedParameterNames">A list of query parameter names which are reserved and should not be provide through AdditionalQueryParameters</param>
            <param name="additionalQueryParameters">A set of additional query parameter names and values.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for paramters to include in the path, or null if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>A dictionary in which the key represents the query parameter name and the value represents the query parameter value.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.AddRequestSpecificQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds any request type specific parameters to the query parameter dictionary.
            </summary>
            <param name="queryParameters">The dictionary of query parameters that additional values should be added to.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.Market">
            <summary>
            Gets or sets the market for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.Languages">
            <summary>
            Gets or sets the language for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.OemId">
            <summary>
            Specifies the client OEM ID
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.ScmId">
            <summary>
            Specifies the client SCM ID
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.MoId">
            <summary>
            Specifies the client MO ID
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.AdditionalQueryParameters">
            <summary>
            Gets or sets a collection of additional query parameters to include with the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.HttpMethod">
            <summary>
            Gets the HTTP method used by the HTTP request message
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.Parameters.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.Parameters.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.Parameters.OemId">
            <summary>
            Specifies a OemId to filter results on.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.Parameters.ScmId">
            <summary>
            Specifies a ScmId to filter results on.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequest.Parameters.MoId">
            <summary>
            Specifies a MoId to filter results on.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.ApiVersionParameterName">
            <summary>
            The name of the parameter placeholder in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.ApiVersionParameterValue">
            <summary>
            The name of the parameter value in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.MarketParameterName">
            <summary>
            The name of the parameter name for market
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.LanguagesParameterName">
            <summary>
            The name of the parameter name for languages
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.FieldsTemplateParameterName">
            <summary>
            The name of the parameter name for fieldsTemplate
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.ActionFilterParameterName">
            <summary>
            The name of the parameter name for actionFilter
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.GetUriParameters">
            <summary>
            Gets the set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs of path parameters</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>A dictionary in which the key represents the query parameter name and the value represents the query parameter value.</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.ContractVersion">
            <summary>
            contract version to be sent in the requests
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.FieldsTemplateValue">
            <summary>
            the default value used for the fieldsTemplate query string parameter
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.ActionFilterValue">
            <summary>
            the default value used for the actionFilter query string parameter
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.FieldsTemplateValues">
            <summary>
            values that can be sent for the fieldsTemplate query string parameter
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogRequestV6.ActionFilterValues">
            <summary>
            values that can be sent for the actionFilter query string parameter
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.AutoSuggestUriTemplate">
            <summary>
            The URI template for autosuggest request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.AutoSuggestAppsRank">
            <summary>
            The rank for autosuggest for Apps
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.AutoSuggestMusicRank">
            <summary>
            The rank for autosuggest for Music
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.AutoSuggestVideoRank">
            <summary>
            The rank for autosuggest for Video
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.CreateRequestForApps(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6"/> instance to query for suggestions
            </summary>
            <param name="market">the desired market</param>
            <param name="languages">comma separated list of the desired languages used for localized data</param>
            <param name="query">the autosuggest query that is searched for</param>
            <param name="countProducts">The number of product suggested returned</param>
            <param name="countQueries">The number of query suggestions returned</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <param name="deviceType">The Device type of the calling client, "w", "wp", "wa"</param>
            <param name="catalogId">the id for the catalog the search is being performed. "1, null, or empty all mean Retail catalog.</param>
            <param name="architecture">The architecture of the calling client.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.CreateRequestForMusic(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6"/> instance to query for suggestions
            </summary>
            <param name="market">the desired market</param>
            <param name="languages">comma separated list of the desired languages used for localized data</param>
            <param name="query">the autosuggest query that is searched for</param>
            <param name="countProducts">The number of product suggested returned</param>
            <param name="countQueries">The number of query suggestions returned</param>
            <param name="catalogId">the id for the catalog the search is being performed. "1, null, or empty all mean Retail catalog.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.CreateRequestForVideo(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6"/> instance to query for suggestions
            </summary>
            <param name="market">the desired market</param>
            <param name="languages">comma separated list of the desired languages used for localized data</param>
            <param name="query">the autosuggest query that is searched for</param>
            <param name="countProducts">The number of product suggested returned</param>
            <param name="countQueries">The number of query suggestions returned</param>
            <param name="catalogId">the id for the catalog the search is being performed. "1, null, or empty all mean Retail catalog.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6"/> instance to query for suggestions
            </summary>
            <param name="market">the desired market</param>
            <param name="languages">comma separated list of the desired languages used for localized data</param>
            <param name="query">the autosuggest query that is searched for</param>
            <param name="rank">specifies which ranking to use use for suggestions.  Supported values are : AutosuggestApps, AutosuggestVideo, AutosuggestMusic</param>
            <param name="countProducts">The number of product suggested returned</param>
            <param name="countQueries">The number of query suggestions returned</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <param name="deviceType">The Device type of the calling client, "w", "wp", "wa"</param>
            <param name="catalogId">The id for the catalog the search is being performed. "1, null, or empty all mean Retail catalog.</param>
            <param name="architecture">The architecture for the calling client.</param>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.ParameterNames">
            <summary>
            Maps the parameter enum used in this class to the query string parameter name expected by the service provider
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.CatalogId">
            <summary>
            Specifies the catalog Id. For Retail catalog, this is optional (1 if set). Otherwise, it is returned from CatalogManifests.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.CountProducts">
            <summary>
            Gets or sets the number of product suggestion returned
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.CountQueries">
            <summary>
            The number of query suggestions returned
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.Query">
            <summary>
            the autosuggest query that is searched for
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.Rank">
            <summary>
            specifies which ranking to use use for suggestions.  Supported values are : AutosuggestApps, AutosuggestVideo, AutosuggestMusic
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.Architecture">
            <summary>
            Gets the architecture value for the query.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.PlatformDependenciesName">
            <summary>
            the platform name for the query
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AutoSuggestRequestV6.Parameter">
            <summary>
            Query parameters used by AutoSuggestRequestV6
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6">
            <summary>
            Represents a catalog request for retrieving AddOns for a product
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.AddOnsUriTemplate">
            <summary>
            The URI template for add ons request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.Rank">
            <summary>
            The rank that supports gettings lists of add ons
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.AddOnProductType">
            <summary>
            The product type filter value to limit results to only add-ons
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.CreateAddOnsForParentRequest(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance to query for addOns without a particular sort order
            </summary>
            <param name="market">The request market</param>
            <param name="language">The request language</param>
            <param name="parentProductId">The parent product id</param>
            <param name="count">The number of items to retrieve</param>
            <param name="skipItems">The number of items to skip</param>
            <returns>A <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.CreateAddOnsForParentRequest(System.String,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance to query for addOns without a particular sort order
            </summary>
            <param name="market">The request market</param>
            <param name="language">The request language</param>
            <param name="parentProductId">The parent product id</param>
            <param name="count">The number of items to retrieve</param>
            <param name="skipItems">The number of items to skip</param>
            <param name="additionalParameters">A set of additional query parameters to include with the request</param>
            <returns>A <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.CreateAddOnsByKeywordRequest(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance to query for addOns without a particular sort order
            </summary>
            <param name="market">The request market</param>
            <param name="language">The request language</param>
            <param name="parentProductId">The parent product id</param>
            <param name="count">The number of items to retrieve</param>
            <param name="skipItems">The number of items to skip</param>
            <param name="keywords">The keywords to match with the add ons</param>
            <returns>A <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.CreateAddOnsByKeywordRequest(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance to query for addOns without a particular sort order
            </summary>
            <param name="market">The request market</param>
            <param name="language">The request language</param>
            <param name="parentProductId">The parent product id</param>
            <param name="count">The number of items to retrieve</param>
            <param name="skipItems">The number of items to skip</param>
            <param name="keywords">The keywords to match with the add ons</param>
            <param name="additionalParameters">A set of additional query parameters to include with the request</param>
            <returns>A <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.CreateAddOnsByInAppOfferTokenRequest(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance to query for addOns without a particular sort order
            </summary>
            <param name="market">The request market</param>
            <param name="language">The request language</param>
            <param name="parentProductId">The parent product id</param>
            <param name="count">The number of items to retrieve</param>
            <param name="skipItems">The number of items to skip</param>
            <param name="inAppOfferTokens">The inAppOfferTokens to match with the add ons</param>
            <returns>A <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.CreateAddOnsByInAppOfferTokenRequest(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance to query for addOns without a particular sort order
            </summary>
            <param name="market">The request market</param>
            <param name="language">The request language</param>
            <param name="parentProductId">The parent product id</param>
            <param name="count">The number of items to retrieve</param>
            <param name="skipItems">The number of items to skip</param>
            <param name="inAppOfferTokens">The inAppOfferTokens to match with the add ons</param>
            <param name="additionalParameters">A set of additional query parameters to include with the request</param>
            <returns>A <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6"/> instance to query for addOns
            </summary>
            <param name="market">The request market</param>
            <param name="language">The request language</param>
            <param name="parentProductId">The parent product id</param>
            <param name="count">The number of items to retrieve</param>
            <param name="skipItems">The number of items to skip</param>
            <param name="keywords">The keywords to match with the add ons</param>
            <param name="inAppOfferTokens">The inAppOfferTokens to match with the add ons</param>
            <param name="additionalParameters">A set of additional query parameters to include with the request</param>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.ParameterNames">
            <summary>
            Maps the parameter enum used in this class to the query string parameter name expected by the search provider
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.Count">
            <summary>
            Gets or sets the number of items to retrieve
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.SkipItems">
            <summary>
            Gets or sets the number of items to skip
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.ParentProductId">
            <summary>
            Gets or sets the parent product ID to query addons for
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.Keywords">
            <summary>
            Gets or sets the list of keywords to match addons with
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.InAppOfferTokens">
            <summary>
            Gets or sets the list of in-app offer tokens to match addons with
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AddOnsRequestV6.Parameter">
            <summary>
            Query parameters used by SearchRequestV5
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6">
            <summary>
            A V6 Bulk Details Request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AccessControllableCatalogRequestV6">
            <summary>
            Common code for private-catalog-enabled display catalog V6 requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AccessControllableCatalogRequestV6.ParameterNames">
            <summary>
            The list of query parameter names
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AccessControllableCatalogRequestV6.CatalogId">
            <summary>
            The catalog id if the request is for a private catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AccessControllableCatalogRequestV6.AccessToken">
            <summary>
            The access token for a private catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AccessControllableCatalogRequestV6.ActionFilterValue">
            <summary>
            private catalog related queries are asked not to send any action filter (bug 3524467)
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AccessControllableCatalogRequestV6.IsRetailCatalogRequest">
            <summary>
            Check if the request is a retail catalog request. For it to be a private catalog request, we not only needs
            CatalogId to be private, but also must have a non-empty access token.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.AccessControllableCatalogRequestV6.Parameter">
            <summary>
            Query parameters used by AccessControllableCatalogRequestV6
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6.BulkDetailsUriTemplate">
            <summary>
            The URI template for a bulk details request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6.#ctor(System.String,System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.BusinessLogic.Request.ValidatedCatalogLocales,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6"/> instance.
            </summary>
            <param name="catalogId">The catalog id for private catalog requests.</param>
            <param name="accessToken">The access token to the private catalog.</param>
            <param name="market">The request market.</param>
            <param name="validatedCatalogLocales">The request languages</param>
            <param name="oemId">device oemId, may be null or empty</param>
            <param name="scmId">device scmId, may be null or empty</param>
            <param name="moId">device moId, may be null or empty</param>
            <param name="fieldsTemplateValue">value used for the fieldsTemplate query string parameter</param>
            <param name="mediaType">the mediaType of the products being requested</param>
            <param name="productIds">list of product IDs to request.</param>
            <param name="deviceType">Type of Device</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6.ProductIds">
            <summary>
            The product ID being requested
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6.UriTemplate">
            <summary>
            Gets the URI template for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BulkDetailsRequestV6.HttpMethod">
            <summary>
            Gets the HTTP method used by the HTTP request message
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6">
            <summary>
            A V6 Enterprise CatalogManifests Request (contoso)
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6.CatalogManifestsUriTemplate">
            <summary>
            The URI template for CatalogManifests
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6"/> instance.
            So far, marketplace API still doesn't take market parameter although it starts to require language.
            But I think market will be ultimately required for proper hydration.
            <param name="market">The caller's market</param>
            <param name="languages">The caller's language</param>
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6.GetQueryParameters">
            <summary>
            V6 CatalogManifests API requires languages
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.CatalogManifestsRequestV6.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.ContentRatingsRequestV6">
            <summary>
            A Content Ratings Request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.ContentRatingsRequestV6.ContentRatingsUriTemplate">
            <summary>
            The URI template for add ons request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.ContentRatingsRequestV6.#ctor(System.String,System.String)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.ContentRatingsRequestV6"/> instance.
            </summary>
            <param name="market">The request market.</param>
            <param name="language">The request language.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.ContentRatingsRequestV6.UriTemplate">
            <summary>
            Gets the URI template for this request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6">
            <summary>
            Represents a details request to the catalog by Sku Id
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6">
            <summary>
            Represents a details request to the catalog
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6.ProductIdParameterName">
            <summary>
            The name of the parameter placeholder in the uri template for Productid
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6.DetailsUriTemplate">
            <summary>
            The URI template for a details request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6"/> instance.
            </summary>
            <param name="catalogId">The catalog id for private catalog requests.</param>
            <param name="accessToken">The access token to the private catalog.</param>
            <param name="market">The request market.</param>
            <param name="language">The request language.</param>
            <param name="oemId">device oemId, may be null or empty</param>
            <param name="scmId">device scmId, may be null or empty</param>
            <param name="moId">device moId, may be null or empty</param>
            <param name="productId">The product ID to request.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6"/> instance.
            </summary>
            <param name="catalogId">The catalog id for private catalog requests.</param>
            <param name="accessToken">The access token to the private catalog.</param>
            <param name="market">The request market.</param>
            <param name="language">The request language.</param>
            <param name="oemId">device oemId, may be null or empty</param>
            <param name="scmId">device scmId, may be null or empty</param>
            <param name="moId">device moId, may be null or empty</param>
            <param name="productId">The product ID to request.</param>
            <param name="additionalQueryParameters">A set of additional query parameters to include with the request.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6.GetUriParameters">
            <summary>
            Gets the set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs of path parameters</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6.ProductId">
            <summary>
            The product ID being requested
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsRequestV6.UriTemplate">
            <summary>
            Gets the URI template for this request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6.SkuIdParameterName">
            <summary>
            The name of the parameter placeholder in the uri template for skuId
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6.DetailsBySkuUriTemplate">
            <summary>
            The URI template for a details by sku request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6"/> instance.
            </summary>
            <param name="catalogId">The catalog id for private catalog requests.</param>
            <param name="accessToken">The access token to the private catalog.</param>
            <param name="market">The request market.</param>
            <param name="language">The request language.</param>
            <param name="oemId">device oemId, may be null or empty</param>
            <param name="scmId">device scmId, may be null or empty</param>
            <param name="moId">device moId, may be null or empty</param>
            <param name="productId">The product ID to request.</param>
            <param name="skuId">The Sku ID to request.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6"/> instance.
            </summary>
            <param name="catalogId">The catalog id for private catalog requests.</param>
            <param name="accessToken">The access token to the private catalog.</param>
            <param name="market">The request market.</param>
            <param name="language">The request language.</param>
            <param name="oemId">device oemId, may be null or empty</param>
            <param name="scmId">device scmId, may be null or empty</param>
            <param name="moId">device moId, may be null or empty</param>
            <param name="productId">The product ID to request.</param>
            <param name="skuId">The Sku ID to request.</param>
            <param name="additionalQueryParameters">A set of additional query parameters to include with the request.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6.GetUriParameters">
            <summary>
            Gets the set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs of path parameters</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6.SkuId">
            <summary>
            The Sku ID being requested
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.DetailsBySkuRequestV6.UriTemplate">
            <summary>
            Gets the URI template for this request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6">
            <summary>
            A V6 Business catalog search request (contoso) implementation.
            TODO: we will need to base this class on SearchRequestV6 when we implement true search feature.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.EnterpriseUriTemplate">
            <summary>
            The URI template for Enterprise requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.RankValue">
            <summary>
            The value for rank type query string
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.ParameterNames">
            <summary>
            The list of query parameter names.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6"/> instance.
            </summary>
            <param name="market">The request market.</param>
            <param name="catalogLanguages">The request languages.</param>
            <param name="catalogId">The catalog id.</param>
            <param name="pageSize">The request page size.</param>
            <param name="skipItems">The number of items to skip.</param>
            <param name="deviceType">The old style deviceType</param>
            <param name="architecture">the architecture from the request</param>
            <param name="hardware">The hardware from the request</param>
            <param name="oemId">The oem id</param>
            <param name="scmId">The scmId from the request</param>
            <param name="moId">The mobile operator id</param>
            <param name="deviceFamily">The deviceFamily (new replacing deviceType)</param>
            <param name="additionalQueryParameters">A set of additional query parameter names and values.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.AddRequestSpecificQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds enterprise query specific parameters to the list of request query parameters
            </summary>
            <param name="queryParameters">The dictionary of query parameters that additional values should be added to.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.PageSize">
            <summary>
            Gets or sets the result count for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.SkipItems">
            <summary>
            Specifies how many items to skip before returning results
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.CatalogId">
            <summary>
            Gets or sets the result count for the resource set ids
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.Architecture">
            <summary>
            Gets the package architecture
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.Hardware">
            <summary>
            Gets a Hardware to filter results on.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.DeviceFamily">
            <summary>
            Gets a DeviceFamily to filter results on.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.DeviceType">
            <summary>
            Gets a DeviceType in case DeviceFamily is not present
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.ActionFilterValue">
            <summary>
            the default value used for the actionFilter query string parameter. For enterprise, we don't need this  (bug 3524467).
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.BusinessCatalogSearchRequestV6.Parameter">
            <summary>
            Query parameters used by EnterpriseRequestV6
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6">
            <summary>
            A V6 Search Request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.SearchUriTemplate">
            <summary>
            The URI template for a search request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.ProductSearchAppsRank">
            <summary>
            Rank value for Search Relevancy for Apps
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.ProductSearchMusicRank">
            <summary>
            Rank value for Search Relevancy for Music
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.ProductSearchVideoRank">
            <summary>
            Rank value for Search Relevancy for Video
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.LegacyWindowsPhoneProductIdRank">
            <summary>
            Rank value for Legacy Windows Phone Product Id Alternate ID search
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.LegacyWindowsStoreProductIdRank">
            <summary>
            Rank value for Legacy Windows Store Product Id Alternate ID search
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.PackageFamilyNameRank">
            <summary>
            Rank value for Package Family Name Alternate ID search
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.QueryForMockData">
            <summary>
            Query value for mock Products
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.FileExtensionPrefix">
            <summary>
            required prefix when sending a file extension
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.FileExtensionDelimiter">
            <summary>
            delimiter when sending multiple file extension
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.ProtocolPrefix">
            <summary>
            required prefix when sending a protocol
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.ProtocolDelimiter">
            <summary>
            delimiter when sending multiple protocols
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.TagsDelimiter">
            <summary>
            delimiter when sending multiple tags
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByQueryForApps(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by query
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="catalogId">the catalog id if the search is for a private catalog</param>
            <param name="accessToken">the token used to access a private catalog when catalogId parameter does'nt mean the retail catalog</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="query">search query</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="hardware">device hardware</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <param name="productType">productType filter</param>
            <param name="primaryCategory">primaryCategory filter</param>
            <param name="category">category/genre filter</param>
            <param name="subcategory">subcategory/subgenre filter</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByQueryForVideo(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by query
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="catalogId">the catalog id if the search is for a private catalog</param>
            <param name="accessToken">the token used to access a private catalog when catalogId parameter does'nt mean the retail catalog</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="query">search query</param>
            <param name="productType">productType filter</param>
            <param name="category">category/genre filter</param>
            <param name="subcategory">subcategory/subgenre filter</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByQueryForMusic(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by query
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="catalogId">the catalog id if the search is for a private catalog</param>
            <param name="accessToken">the token used to access a private catalog when catalogId parameter does'nt mean the retail catalog</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="query">search query</param>
            <param name="productType">productType filter</param>
            <param name="category">category/genre filter</param>
            <param name="subcategory">subcategory/subgenre filter</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByPublisherId(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by publisher id
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="publisherId">the publisher Id to search for</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="hardware">device hardware</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByPublisherName(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by publisher name
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="publisherName">the publisher name to search for</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="hardware">device hardware</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByFileExtension(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by file extension
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="fileExtension">the file extension to search for</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="hardware">device hardware</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByProtocol(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by protocol
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="protocol">the protocol to search for</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="hardware">device hardware</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByTags(System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for searching by tags
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="tags">the tags to search for</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="hardware">device hardware</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByLegacyWindowsPhoneProductId(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a search request instance for searching by legacy windows phone product id.
            </summary>
            <param name="market">The market</param>
            <param name="language">The language</param>
            <param name="legacyWindowsPhoneProductId">The legacy windows phone product id</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <returns>A search request instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByPackageFamilyName(System.String,System.String,System.String)">
            <summary>
            Creates a search request instance for searching by package family name.
            </summary>
            <param name="market">The market</param>
            <param name="language">The language</param>
            <param name="packageFamilyName">The package family name</param>
            <returns>A search request instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchByLegacyWindowsStoreProductId(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a search request instance for searching by legacy windows store product id.
            </summary>
            <param name="market">The market</param>
            <param name="language">The language</param>
            <param name="legacyWindowsStoreProductId">The legacy windows store product id</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <returns>A search request instance</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CreateSearchForProductCount(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance for determining product count
            </summary>
            <param name="market">the desired market</param>
            <param name="rank">ranking to use for searching</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <param name="productType">productType filter</param>
            <param name="primaryCategory">primaryCategory filter</param>
            <param name="category">category/genre filter</param>
            <param name="subcategory">subcategory/subgenre filter</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6"/> instance
            </summary>
            <param name="market">the desired market</param>
            <param name="language">the desired language used for localized data</param>
            <param name="fieldsTemplateValue">value used for the fieldsTemplate query string parameter</param>
            <param name="rank">ranking to use for searching</param>
            <param name="catalogId">the id for the catalog the search is being performed. "1, null, or empty" all mean Retail catalog.</param>
            <param name="accessToken">the access token for the catalog the search is being performed. If catalogId is not for retail catalog, then this parameter must be non-empty.</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="query">search query</param>
            <param name="deviceType">device type</param>
            <param name="architecture">device architecture</param>
            <param name="hardware">device hardware</param>
            <param name="oemId">device oemId</param>
            <param name="scmId">device scmId</param>
            <param name="moId">device moId</param>
            <param name="deviceFamily">device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...</param>
            <param name="productType">productType filter</param>
            <param name="primaryCategory">primaryCategory filter</param>
            <param name="category">category/genre filter</param>
            <param name="subcategory">subcategory/subgenre filter</param>
            <param name="cacheServiceProviderException">true if the service provider exceptions should be cached as empty responses</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.AddRequestSpecificQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds search-specific query parameters to the list of request query parameters
            </summary>
            <param name="queryParameters">The dictionary of query parameters that additional values should be added to.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Count">
            <summary>
            Maximum number of items to return
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Extensions">
            <summary>
            Filter Apps by File Extensions or Protocol
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.PublisherId">
            <summary>
            Filter Apps by PublisherId
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.PublisherName">
            <summary>
            Filter Apps by PublisherName
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Query">
            <summary>
            Search Query
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Rank">
            <summary>
            Ranking to use for searching
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.SkipItems">
            <summary>
            Specifies how many items to skip before returning results
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.AlternateId">
            <summary>
            Specifies the alternate ID to search for
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.DeviceType">
            <summary>
            Specifies the client device type
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Architecture">
            <summary>
            Specifies the client processor architecture
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Hardware">
            <summary>
            Specifies the client Hardware
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.DeviceFamily">
            <summary>
            device family of the calling client, "Windows.Desktop","Windows.Mobile","Windows.Holographic", etc...
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.ProductType">
            <summary>
            productType filter
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.PrimaryCategory">
            <summary>
            primaryCategory filter
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Category">
            <summary>
            category/genre filter
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Subcategory">
            <summary>
            subcategory/subgenre filter
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.CacheServiceProviderExceptions">
            <summary>
            returns true if ServiceProvider exceptions should be cached, to avoid sending request many requests to a potentially down service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.ServerSideCacheTtlInMinutes">
            <summary>
            returns the serverside cache ttl in minutes
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters">
            <summary>
            query string parameters names expected by the search provider
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Category">
            <summary>
            Filter products by category
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Genre">
            <summary>
            Filter products by genre
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.MusicGenre">
            <summary>
            filter music by genre
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.MusicSubgenre">
            <summary>
            filter music by subgenre
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.PrimaryCategory">
            <summary>
            Filter to differentiate 'App' and 'Game' in App Search ranks
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.ProductType">
            <summary>
            Filter Products by type
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Subcategory">
            <summary>
            Filter products by subcategory
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Subgenre">
            <summary>
            Filter products by subgenre
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Count">
            <summary>
            Maximum number of items to return
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Extensions">
            <summary>
            Filter Apps by File Extensions or Protocol
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.PublisherId">
            <summary>
            Filter Apps by PublisherId
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.PublisherName">
            <summary>
            Filter Apps by PublisherName
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Query">
            <summary>
            Search Query
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Rank">
            <summary>
            Ranking to use for searching
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.CatalogId">
            <summary>
            Specifies which catalog (only private catalog - Business for now - are required)
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.SkipItems">
            <summary>
            Specifies how many items to skip before returning results
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.AlternateId">
            <summary>
            Specifies the alternate ID to search for
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Architecture">
            <summary>
            Specifies the package architecture to match
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.PlatformDependencyName">
            <summary>
            Specifies a platform to filter results on.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.Hardware">
            <summary>
            Specifies a Hardware to filter results on.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchRequestV6.Parameters.DeviceFamily">
            <summary>
            Specifies a DeviceFamily to filter results on.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6">
            <summary>
            A V5 Search Skus Request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.SearchSkuUriTemplate">
            <summary>
            The URI template for a search request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.ReservedParameterNames">
            <summary>
            A list of query parameter names which are reserved (the const values of the Parameters class)
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6"/> instance
            </summary>
            <param name="market">the desired market</param>
            <param name="languages">the desired language used for localized data</param>
            <param name="fieldsTemplateValue">value used for the fieldsTemplate query string parameter</param>
            <param name="rank">ranking to use for searching</param>
            <param name="count">maximum number of items to return</param>
            <param name="skipItems">specifies how many items to skip before returning results</param>
            <param name="catalogId">the catalogId</param>
            <param name="additionalQueryParameters">any additional query string parameters to send, such as filters</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.AddRequestSpecificQueryParameters(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds search-specific query parameters to the list of request query parameters
            </summary>
            <param name="queryParameters">The dictionary of query parameters that additional values should be added to.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Count">
            <summary>
            Maximum number of items to return
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Rank">
            <summary>
            Ranking to use for searching
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.CatalogId">
            <summary>
            The catalog Id
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.SkipItems">
            <summary>
            Specifies how many items to skip before returning results
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.AlternateId">
            <summary>
            Specifies the alternate ID to search for
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Parameters">
            <summary>
            query string parameters names expected by the search provider
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Parameters.ReservedParameters">
            <summary>
            query string parameter names set by SearchRequestV5 and should appear in "additionalQueryParameters"
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Parameters.ReservedParameters.Count">
            <summary>
            Maximum number of items to return
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Parameters.ReservedParameters.Rank">
            <summary>
            Ranking to use for searching
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Parameters.ReservedParameters.CatalogId">
            <summary>
            The catalog Id
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Parameters.ReservedParameters.SkipItems">
            <summary>
            Specifies how many items to skip before returning results
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Request.SearchSkusRequestV6.Parameters.ReservedParameters.AlternateId">
            <summary>
            Specifies the alternate ID to search for
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.TargetTypeHelper">
            <summary>
            Helper class for determining the target type for deserialization
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.TargetTypeHelper.GetTargetType(System.Collections.Generic.IDictionary{System.String,System.Type},System.String,System.Type)">
            <summary>
            Gets the target type from the given map based on the given key.
            </summary>
            <param name="targetTypeMap">The map from key to target type.</param>
            <param name="targetTypeKey">The key to retrieve the type from the map.</param>
            <param name="targetTypeBase">The type that the target type must inherit from.</param>
            <returns>
            A target type from the map if: 1. The targetTypeKey was found in the map and 2. the target type found is assignable to targetTypeBase
            Otherwise, null.
            </returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability">
            <summary>
            Represents an Availability from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.availability">
            <summary>
            The availability from the API response
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.PropertiesTypeMap">
            <summary>
            A map from availability B schema to the deserialization type for availability properties
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.ConditionsTypeMap">
            <summary>
            A map from availability B schema to the deserialization type for availability properties
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.Availability)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability"/> instance
            </summary>
            <param name="availability">The availability from the API response</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.AvailabilityASchema">
            <summary>
            Gets the A Schema this availability uses
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.AvailabilityBSchema">
            <summary>
            Gets the B Schema this availability uses
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.AvailabilityId">
            <summary>
            Gets the Availability Id
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.Actions">
            <summary>
            Gets the list of actions this availability grants the user
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.Conditions">
            <summary>
            Gets or sets the availability conditions
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.LastModifiedDate">
            <summary>
            Gets the last modified date of the availability document
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.OrderManagementData">
            <summary>
            Gets or sets the order management data
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.SkuId">
            <summary>
            Gets the Sku Id of the sku this availability is associated with
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Availability.Properties">
            <summary>
            Gets or sets the global properties of the availability
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.BulkProductDetailsResponse">
            <summary>
            Represents a Bulk Product Details Response from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.BulkProductDetailsResponse.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.BulkProductDetailsResponseContract)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.BulkProductDetailsResponse"/>
            </summary>
            <param name="response">The bulk product details response from the api response.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.BulkProductDetailsResponse.Products">
            <summary>
            Gets or sets the Products
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.JsonHelper">
            <summary>
            Helper class for reading and deserializing JSON from V5 DisplayCatalog API responses
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.JsonHelper.JTokenReadMethod">
            <summary>
            The reflected method info for the Read(JToken) method.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.JsonHelper.Read``1(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Converts a JToken to the specified object type.
            </summary>
            <typeparam name="T">The type of object to convert to</typeparam>
            <param name="jToken">The JToken to convert</param>
            <returns>An instance of type T representing the value of the JToken</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.JsonHelper.Read``1(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken})">
            <summary>
            Converts a list of JTokens to a list of type-specified objects.
            </summary>
            <typeparam name="T">The type of object to convert the JTokens to</typeparam>
            <param name="jTokens">The list of JTokens to convert</param>
            <returns>A list of type T objects representing the list of JTokens</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.JsonHelper.DynamicRead``1(Newtonsoft.Json.Linq.JToken,System.Collections.Generic.IDictionary{System.String,System.Type},System.String)">
            <summary>
            Converts a JToken to an object whose type is determined at runtime
            </summary>
            <typeparam name="T">The base type of the resulting return object</typeparam>
            <param name="jToken">The JToken to convert</param>
            <param name="targetTypeMap">The map for determining the target type.</param>
            <param name="targetTypeKey">The key for retrieving the target type from the targetTypeMap</param>
            <returns>An object converted to the type retrieved from the type map representing the JToken.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.JsonHelper.DynamicRead``1(System.Collections.Generic.IEnumerable{Newtonsoft.Json.Linq.JToken},System.Collections.Generic.IDictionary{System.String,System.Type},System.String)">
            <summary>
            Converts a list of JTokens to a list of objects whose type is determined at runtime
            </summary>
            <typeparam name="T">The base type of the resulting list objects</typeparam>
            <param name="jTokens">The JTokens to convert</param>
            <param name="targetTypeMap">The map for determining the target type.</param>
            <param name="targetTypeKey">The key for retrieving the target type from the targetTypeMap</param>
            <returns>An list of objects converted to the type retrieved from the type map representing the JTokens.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails">
            <summary>
            Represents a Product from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.productDetails">
            <summary>
            The product details from the V5 API response
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.PropertiesTypeMap">
            <summary>
            A map from product B schema values to the deserialization type for product properties
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.LocalizedPropertiesTypeMap">
            <summary>
            A map from product B schema values to the deserialization type for product localized properties
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.MarketPropertiesTypeMap">
            <summary>
            A map from product B schema values to the deserialization type for product market properties
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.ProductDetails)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails"/> Instance.
            </summary>
            <param name="productDetails">The product details from the API response.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.DisplaySkuAvailabilities">
            <summary>
            Gets or sets the Sku and Availabilities pairs related to the product
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.AlternateIds">
            <summary>
            Gets or sets the alternate Ids for the product
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.LocalizedProperties">
            <summary>
            Gets or sets the product properties that are localized to the user's market and language
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.MarketProperties">
            <summary>
            Gets or sets the product properties that are specific to the user's market
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.Properties">
            <summary>
            Gets or sets the global product properties
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.IsMicrosoftProduct">
            <summary>
            Gets whether or not this is a microsoft product
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.PreferredSkuId">
            <summary>
            Gets the preffered Sku Id
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.IngestionSource">
            <summary>
            Gets the ingestion source
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.LastModifiedDate">
            <summary>
            Gets the last modified date for the product document
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.ProductASchema">
            <summary>
            Gets the A Schema that this product is using
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.ProductBSchema">
            <summary>
            Gets the B Schema that this product is using
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.ProductId">
            <summary>
            Gets the Product Id
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.DomainDataVersion">
            <summary>
            Gets the domain data version
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetails.ProductType">
            <summary>
            Gets the product type
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetailsResponse">
            <summary>
            Represents a Product Details Response from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetailsResponse.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.ProductDetailsResponseContract)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetailsResponse"/>
            </summary>
            <param name="response">The product details response from the API response.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ProductDetailsResponse.ProductDetails">
            <summary>
            Gets or sets the Product Details
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ContentRatingsResponse">
            <summary>
            Represents a Ratings Response from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ContentRatingsResponse.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.RatingsContract)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ContentRatingsResponse"/>
            </summary>
            <param name="response">The ratings response from the Catalog API.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.ContentRatingsResponse.RatingBoards">
            <summary>
            Gets or sets the RatingBoards
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse">
            <summary>
            Represents a search response from the V5 DisplayCatalog APIs.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse.#ctor(System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse"/>
            </summary>
            <param name="totalResultCount">the totalResultCount</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.SearchResultResponseContract)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse"/>
            </summary>
            <param name="response">The search response from the api response.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse.ProductIds">
            <summary>
            Gets or sets the Product identifiers.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse.Products">
            <summary>
            Gets or sets the Product list.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse.TotalResultCount">
            <summary>
            Gets or sets the total count of results
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku">
            <summary>
            Represents a Product Sku from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.sku">
            <summary>
            The Sku from the API response
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.PropertiesTypeMap">
            <summary>
            A map from SchemaB values to the type to use for deserializing Properties
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.LocalizedPropertiesTypeMap">
            <summary>
            A map from SchemaB values to the type to use for deserializing LocalizedProperties
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.MarketPropertiesTypeMap">
            <summary>
            A map from SchemaB values to the type to use for deserializing MarketProperties
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.Sku)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku"/> instance.
            </summary>
            <param name="sku">The sku from the API response</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.LastModifiedDate">
            <summary>
            Gets the last modified date for the sku
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.ProductId">
            <summary>
            Gets the product Id for the product this sku is associated with
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.SkuASchema">
            <summary>
            Gets the A Schema this sku uses
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.SkuBSchema">
            <summary>
            Gets the B Schema this sku uses
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.SkuId">
            <summary>
            Gets the Sku Id
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.LocalizedProperties">
            <summary>
            Gets or sets the sku properties localized to the user's market and language
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.MarketProperties">
            <summary>
            Gets or sets the sku properties specific to the user's market
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.Properties">
            <summary>
            Gets or sets the global sku properties
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.Sku.SkuType">
            <summary>
            Gets or sets the sku type (trial, full, rental, beta)
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities">
            <summary>
            Represents a Sku and Availabilities pair from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.SkuAvailabilities)">
            <summary>
            Creates a <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities"/> instance
            </summary>
            <param name="skuAvailabilities">The SkuAvailabilities from the API response</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities.Sku">
            <summary>
            Gets or sets the Sku
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuAvailabilities.Availabilities">
            <summary>
            Gets or sets the list of availabilties associated with the Sku
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuSearchResponse">
            <summary>
            Represents a sku search response from the V5 DisplayCatalog APIs.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuSearchResponse.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version5.SkuSearchResultResponseContract)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SearchResponse"/>
            </summary>
            <param name="response">The search response from the api response.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuSearchResponse.SkuIds">
            <summary>
            Gets or sets the Product identifiers.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuSearchResponse.Products">
            <summary>
            Gets or sets the Product list.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V5.SkuSearchResponse.TotalResultCount">
            <summary>
            Gets or sets the total count of results
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6">
            <summary>
            This class encapsulates a Catalog manifest of a caller
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.KnownPrivateCatalogId">
            <summary>
            We have seen multiple private catalogs. So far we only care about this private catalog.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version6.CatalogManifestResponseContract)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6"/> instance.
            </summary>
            <param name="detail">the detail from Marketplace</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.CatalogId">
            <summary>
            Gets or sets a value indicating the id of the catalog, which needs to be passed to M$ for queries of catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.CatalogName">
            <summary>
            Gets or sets a value indicating the display name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.CatalogTitle">
            <summary>
            Gets or sets a value indicating the display name
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.CatalogType">
            <summary>
            Gets or sets a value indicating the Type
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.IsPublic">
            <summary>
            Gets a value indicating whether the catalog is the retail catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.IsBusiness">
            <summary>
            Gets a value indicating whether the catalog is a business catalog.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestV6.IsSupportedCatalogType">
            <summary>
            Gets a value indicating whether the catalog is what we support.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestResponseV6">
            <summary>
            This class encapsulates a catalog manifests for a caller.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestResponseV6.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version6.GetCatalogManifestResponse)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestResponseV6"/>
            </summary>
            <param name="response">The GetCatalogManifestResponse response from the catalog.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.CatalogManifestResponseV6.CatalogManifests">
            <summary>
            Gets or sets a value indicating the user's resource sets.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.ContentRatingsResponse">
            <summary>
            Represents a Ratings Response from the V5 DisplayCatalog APIs
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.ContentRatingsResponse.#ctor(Microsoft.MarketplaceServices.DisplayCatalog.Contracts.Version6.RatingsContract)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.ContentRatingsResponse"/>
            </summary>
            <param name="response">The ratings response from the Catalog API.</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.BigCatalog.Contracts.Response.V6.ContentRatingsResponse.RatingBoards">
            <summary>
            Gets or sets the RatingBoards
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration">
            <summary>
            Implementation of IDevicesConfiguration with all the required properties to generate DDS Clients
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration.DevicesBaseUrl">
            <summary>
            Complete Device Management Service endpoint
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration.DevicesAuthServiceEndpointAddress">
            <summary>
            Live service endpoint to generate S2S token against
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration.DevicesAuthSiteId">
            <summary>
            StoreFD incomming token SiteId
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration.DevicesAuthTargetSite">
            <summary>
            Device Management Service's ticket domain
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration.DevicesTestConfiguration">
            <summary>
            Set to false for testing
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration.RpsServiceCertDefinition">
            <summary>
            Certificate definition
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceManagementConfiguration.ProxyServer">
            <summary>
            ProxyServer to call Device Management through
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult">
            <summary>
            Internal mapping of DeviceManagement Service response
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult.UnathorizedErrorCode">
            <summary>
            Http Status code that indicates bad account data including:
            Account state
            Bad token
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult.InternalServerErrorCode">
            <summary>
            Http Status code that indicates internal server
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Constructor
            </summary>
            <param name="errorCode">Returned error code</param>
            <param name="errorDescription">Returned error description</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
            Constructor
            </summary>
            <param name="errorCode">Returned error code</param>
            <param name="errorDescription">Returned error description</param>
            <param name="httpStatusCode">Returned status code</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult.ErrorCode">
            <summary>
            Nullable error code response from service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult.ErrorDescription">
            <summary>
            Description of error
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.Contracts.DeviceRegistrationResult.ResponseStatusCode">
            <summary>
            Nullable response status code from service
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.ServiceName">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.ServiceProviderName">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.DeviceManagementSuccessCode">
            <summary>
            Represents a success code for responses from the DeivceManangementProvider
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.Success">
            <summary>
            Request to DDS success completion state
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.Failed">
            <summary>
            Request to DDS failure completion state
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.#ctor(System.Uri,System.String,System.Int64,System.String,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,System.Boolean)">
            <summary>
            Constructs a new <c>DeviceManagementProvider</c> instance.
            </summary>
            <param name="externalServiceUri">The complete URI for the device management service.</param>
            <param name="devicesAuthServiceEndpointAddress">The complete URI for the live services endpoint where tickets need to get generated from</param>
            <param name="deviceAuthSiteId">StoreFd siteId the incomming token is generated in</param>
            <param name="devicesAuthTargetSite">Device Management's Target siteId the S2S token needs to be generated in</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the RPS certificate needed to call the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="devicesTestConfiguration">set to false to skip certificate validations in test environments</param>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.ClientTimeout">
            <summary>
            Gets or sets the Client Timeout
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.DeviceManagementConfiguration">
            <summary>
            Gets or sets the device management configuration required for the DevicesClient
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.DeviceManagement.DeviceManagementProvider.DeviceDirectoryClient">
            <summary>
            Device management client that validates the devices
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest">
            <summary>
            Represents an entitlements request to the catalog
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.#ctor(System.Int32,System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.#ctor(System.Int32,System.Nullable{System.DateTimeOffset},System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.AddUserIdentity(System.String,System.String)">
            <summary>
            adds user identity information to the request
            </summary>
            <param name="identityType"></param>
            <param name="authorizationToken"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.AddProduct(System.String,System.String)">
            <summary>
            adds product information to the request
            </summary>
            <param name="productId"></param>
            <param name="skuId"></param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for paramters to include in the path, or null if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>A dictionary in which the key represents the query parameter name and the value represents the query parameter value.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.MaxPageSize">
            <summary>
            maximum number of items to return
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.ModifiedAfter">
            <summary>
            filter entitlements to only those modified after this value
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.ProductTypes">
            <summary>
            filter entitlements to only the productTypes in this list
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.RpsDeviceToken">
            <summary>
            Rps Device Token
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.PostBodyObject">
            <summary>
            the post body object to send to provider
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.UriTemplate">
            <summary>
            Gets the URI template for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest.HttpMethod">
            <summary>
            http method to use when making the service request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.EntitlementCollectionsProvider">
            <summary>
            A class to provide entitlement data from CollectionFD.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.EntitlementCollectionsProvider.ServiceName">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.EntitlementCollectionsProvider.ContractVersion1">
            <summary>
            The API contract version 6
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.EntitlementCollectionsProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>EntitlementCollectionsProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.EntitlementCollectionsProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>EntitlementCollectionsProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.EntitlementCollectionsProvider.QueryEntitlements(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Gets a paged collection of entitlements matching the specified parameters using V5 contracts
            </summary>
            <param name="request">The entitlements request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <returns>A task which, when completed, contains the entitlements response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.EntitlementCollectionsProvider.MakeRequestAsync``1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Entitlements.Contracts.EntitlementCollectionsRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String)">
            <summary>
            sends a service request.
            </summary>
            <param name="request">The service request</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version to use.</param>
            <returns>A task which, when completed, contains the service response from the service.</returns>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.ParameterNames">
            <summary>
            The list of query parameter names
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for parameters to include in the path, or null if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.UserIds">
            <summary>
            The UserId(s) to specify the caller and type of authentication model used
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.Tag">
            <summary>
            The name of the service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.HttpMethod">
            <summary>
            Gets the HTTP method used by the HTTP request message
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest.Parameter">
            <summary>
            URI parameters used by OrderBaseRequest
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Response.GroupsResponse">
            <summary>
            This class encapsulates groups for a caller.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.GroupsProvider">
            <summary>
            A class to provide data from Groups.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.GroupsProvider.ServiceName">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.GroupsProvider.ContractVersion">
            <summary>
            The API contract version to use.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.GroupsProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>GroupsProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.GroupsProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>GroupsProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.GroupsProvider.GetGroupsAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.Contracts.Request.GroupsRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Gets group information
            </summary>
            <param name="request">The GroupsRequest</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
            <returns>A task which, when completed, contains the GroupsResponse from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Groups.GroupsProvider.MakeRequestAsync``1(Microsoft.Marketplace.Storefront.ServiceProviders.IRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String)">
            <summary>
            Sends a service request
            </summary>
            <typeparam name="TResult">The type of the response.</typeparam>
            <param name="request">The GroupsRequest request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
            <param name="contractVersion">The contract version to use.</param>
            <returns>A task which, when completed, contains the GroupsResponse response from service.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.IServiceProvidersManager">
            <summary>
            Defines a composite meant to serve as a proxy for accessing the various 
            data providers the Store Edge service might have to call in to obtain the data 
            for generating the client response.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult">
            <summary>
            Class that contains fetch result and value
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult.ValidFetch">
            <summary>
            Indicates validity of fetched result
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult.MappedValue">
            <summary>
            Fetched result
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.#ctor(System.String,System.String,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Constructs a new <c>MasterDataProvider</c> instance.
            </summary>
            <param name="dataSourceEndpoint">The server URI for the DB</param>
            <param name="initialCatalog">The DB name to query from</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="intervalOfSync">The internal between going back to the DB to refresh the data</param>
            <param name="intervalBetweenFailedRetry">The wait interval before retry of a failed fetch</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.GetOemIdFromOemName(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            Method to attempt to clean OEM names
            </summary>
            <param name="oemName">Unclean OEM Name</param>
            <param name="logWriter">log wrtier</param>
            <returns><see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult"/> will return oemFriendlyName</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.GetOemIdFromScmId(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            Method to attempt to fetch OEM name from ScmId
            </summary>
            <param name="scmId">ScmId</param>
            <param name="logWriter">log wrtier</param>
            <returns><see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult"/> will return oemName</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.GetOemNameFromRetailName(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            Method to attempt to fetch OemName name from RetailName
            </summary>
            <param name="deviceName">deviceName</param>
            <param name="logWriter">log wrtier</param>
            <returns><see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult"/> will return OemName</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.GetRetailNameFromOemDeviceName(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            Method to attempt to fetch RetailName name from OemDeviceName
            </summary>
            <param name="deviceName">deviceName</param>
            <param name="logWriter">log wrtier</param>
            <returns><see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult"/> will return RetailName</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable">
            <summary>
            This class abstracts our the Dictionary caching, DB fetches, and retry logic from the provider.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.ConnectionSemaphoreSlim">
            <summary>
            Semaphore to prevent multiple requests to call for same table
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.IntervalOfDataSync">
            <summary>
            Refresh interval in seconds for successful requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.intervalBetweenFailedRetry">
            <summary>
            Retry interval in seconds for failed requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.ClientTimeout">
            <summary>
            Connection timeout for Database connection
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.GetMappedValue(System.String,Microsoft.Marketplace.Storefront.Common.Utilities.Logging.Interfaces.ILogWriter)">
            <summary>
            Will try to fetch value from dictionary
            Will return empty string for non-mappable values
            </summary>
            <param name="key">Key for look up</param>
            <param name="logWriter">log writer for logging</param>
            <returns><see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.Entities.MappedValueResult"/></returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.NameOfServiceProvider">
            <summary>
            Name of the calling service provider
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.TableName">
            <summary>
            Name of table
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.TableMappingDictionary">
            <summary>
            Dictionary that maps the DB Table
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.TableQuery">
            <summary>
            Query to fetch table
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.LastSuccessfulSync">
            <summary>
            Time stamp of last succeed sync
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.LastFailedSync">
            <summary>
            Time stamp of last failed sync
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.DataSourceEndpoint">
            <summary>
            Connection string for SQLizer DB
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MasterData.MasterDataProvider.MappingTable.InitialCatalog">
            <summary>
            Database name for InitialCatalog value
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest">
            <summary>
            Represents music or video request to the discovery channel provider
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.MusicVideoUriTemplate">
            <summary>
                The URI template for Music and Video requests
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.ApiVersionParameterName">
            <summary>
            The name of the parameter placeholder in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.ApiVersionParameterValue">
            <summary>
            The name of the parameter value in the uri template for ApiVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.ChannelIdParameterName">
            <summary>
            The name of the parameter placeholder in the uri template for ApiVersion
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.#ctor(System.String,System.String,System.String,System.UInt32,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.#ctor(System.String,System.String,System.String,System.UInt32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.UInt32)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for paramters to include in the path, or null if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>A dictionary in which the key represents the query parameter name and the value represents the query parameter value.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.AddRequestSpecificQueryParameter(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)">
            <summary>
            adds the specified value to the query string parameters collection
            </summary>
            <param name="queryParameters">the collection to add the query string parameter</param>
            <param name="parameterName">the name of the query string parameter</param>
            <param name="parameterValue">the value of the query string parameter</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.ChannelId">
            <summary>
                Gets or sets the channel Id for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Market">
            <summary>
            Gets or sets the market for the request, required.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Languages">
            <summary>
            Gets or sets the languages for the request, required.
            This is a comma-delimited list of languages, the service will select the fist acceptable languages in the list
            for given market, or fallback on the default language for that market. eg. en-us,es
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.StoreVersion">
            <summary>
            Gets or sets the client version for the request, required.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.DeviceFamily">
            <summary>
            Gets or sets the device family for the request, required.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.ClientType">
            <summary>
            Gets or sets the client type for the request, required, msstore.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Category">
            <summary>
            category/genre filter, optional. eg. rock, action
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Subcategory">
            <summary>
            subcategory/subgenre filter, optional. eg. bluegrass
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Studio">
            <summary>
            Gets or sets the studio for the request, optional. eg. warnerbros
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Network">
            <summary>
            Gets or sets the network for the request, optional. eg. abc
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.ContributorId">
            <summary>
            Gets or sets the contributor id (guid) for the request, optional.
            Required for Artist Tops and relations Channels
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.SkipItems">
            <summary>
            Specifies how many items to skip before returning results, optional.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.PageSize">
            <summary>
            Gets or sets the result count for the request, required.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.UriTemplate">
            <summary>
            Gets the URI template for this request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.HttpMethod">
            <summary>
            http method to use when making the service request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters">
            <summary>
            query string parameters names expected by the MusicVideoDiscovery provider
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.Market">
            <summary>
            Filter products by market
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.Languages">
            <summary>
            Filter products by languages
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.PageSize">
            <summary>
            Filter products by pageSize
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.StoreVersion">
            <summary>
            Filter products by storeVersion
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.DeviceFamily">
            <summary>
            Filter products by deviceFamily
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.ClientType">
            <summary>
            Filter products by clientType
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.Genre">
            <summary>
            Filter products by genre
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.Subgenre">
            <summary>
            Filter products by subGenre
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.Studio">
            <summary>
            Filter products by studio
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.Network">
            <summary>
            Filter products by network
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.ContributorId">
            <summary>
            Filter products by contributorId
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest.Parameters.SkipItems">
            <summary>
            Filter products by skipItems
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider">
            <summary>
            A class to provide music and video data from DiscoveryChannelProvider.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.ServiceName">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.ContractVersion1">
            <summary>
            The API contract version 1.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>DiscoveryChannelProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>MVDiscoveryChannelProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.QueryDiscoveryChannelV1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets 
            </summary>
            <param name="request">The discovery channel request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the Discovery channel response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.MakeRequestAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            sends a service request.
            </summary>
            <param name="request">The service request</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version to use.</param>
            <param name="cancellationToken">A cancellation token which cancels the overall request if it takes too long</param>
            <returns>A task which, when completed, contains the service response from the service.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.QueryDiscoveryChannelAndHeaderV1(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Gets 
            </summary>
            <param name="request">The discovery channel request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the Discovery channel response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.MvDiscoveryChannelProvider.MakeRequestAndGetHeadersAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.MusicVideo.Contracts.Request.MvDiscoveryChannelRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Performs a agile store request.
            </summary>
            <param name="request">The agile store request.</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/>.</param>
            <param name="contractVersion">The contract version to used in the header. If null, the contract version will not be included as a header</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A task which, when completed, contains the discovery response.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.CatalogContext">
            <summary>
            An internal mapping to M$ Catalog Context
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.CatalogContext.CatalogProvider">
            <summary>
            Gets or sets the catalog provider to use (e.g. "Microsoft").
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.CatalogContext.Language">
            <summary>
            Gets or sets the catalog language (e.g. "en").
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.CatalogContext.Market">
            <summary>
            Gets or sets the catalog market (e.g. "US").
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.CatalogContext.ResourceSetId">
            <summary>
            Gets or sets the resource set for the catalog to use (e.g. "1").
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext">
            <summary>
            An internal mapping to M$ Client Context
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext.Client">
            <summary>
            Gets or sets the client making the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext.DeviceId">
            <summary>
            Gets or sets the device Id from which purchase is made. This can be null in scenarios where deviceId is not known.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext.DeviceType">
            <summary>
            Gets or sets the device type from which purchase is made. This can be null when deviceId is null.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext.IpAddress">
            <summary>
            Gets or sets the TCPIP address from which purchase is made.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext.Language">
            <summary>
            Gets or sets the language from which purchase is made.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext.Languages">
            <summary>
            Get or sets the catalog locales from which the purchase can be made in
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext.Region">
            <summary>
            Gets or sets the region from which purchase is made.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6">
            <summary>
            An internal mapping to M$ Line Items
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.Beneficiary">
            <summary>
            Gets or sets the beneficiary to receive the line item. If not specified, this is the owner of the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.ProductId">
            <summary>
            Gets or sets the catalog product Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.SkuId">
            <summary>
            Gets or sets the catalog SKU Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.AvailabilityId">
            <summary>
            Gets or sets the catalog Availability Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.Quantity">
            <summary>
            Gets or sets the quantity of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.RenewalContext">
            <summary>
            Gets or sets the renewal context of the line item.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.CampaignId">
            <summary>
            Gets or sets the campaign Id (CID) for the line item.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.OptionalCampaignId">
            <summary>
            Gets or sets the optional campaign identifier (OCID) of the item to add to the order. 
            This is sometimes called the Microsoft CID, but was changed to OCID for backward compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6.DevOfferId">
            <summary>
            Gets or sets the developer offer Id for the line item.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.PaymentInstrumentReference">
            <summary>
            An internal mapping to M$ PaymentInstrumentReference
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.PaymentInstrumentReference.PaymentInstrumentId">
            <summary>
            Gets or sets the ID of the payment instrument. Note: May be null if the paymentInstrumentType is Undefined.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.PaymentInstrumentReference.PaymentInstrumentType">
            <summary>
            Gets or sets the type of payment instrument Keeping in contract so that it is non-breaking. Should remove moving forward.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.PaymentInstrumentReference.TokenizedPaymentInstrumentData">
            <summary>
            Gets or sets the tokenized payment instrument data to be passed opaquely to billing.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5">
            <summary>
            An internal mapping to M$ Line Items
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.Beneficiary">
            <summary>
            Gets or sets the beneficiary to receive the line item. If not specified, this is the owner of the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.ProductId">
            <summary>
            Gets or sets the catalog product Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.SkuId">
            <summary>
            Gets or sets the catalog SKU Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.AvailabilityId">
            <summary>
            Gets or sets the catalog Availability Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.Quantity">
            <summary>
            Gets or sets the quantity of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.RenewalContext">
            <summary>
            Gets or sets the renewal context of the line item.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.CampaignId">
            <summary>
            Gets or sets the campaign Id (CID) for the line item.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5.OptionalCampaignId">
            <summary>
            Gets or sets the optional campaign identifier (OCID) of the item to add to the order. 
            This is sometimes called the Microsoft CID, but was changed to OCID for backward compatibility.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5">
            <summary>
            Represents a Add Line Item Request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.ParameterNames">
            <summary>
            The list of query parameter names
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for parameters to include in the path, or empty dictionary if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.UserId">
            <summary>
            The UserId to specify the caller and type of authentication model used
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.OrderId">
            <summary>
            The reference OrderId for the action
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.LineItemId">
            <summary>
            The reference LineItemId for the action
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.HttpMethod">
            <summary>
            Gets the HTTP method used by the HTTP request message
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.AlwaysTriggerRollback">
            <summary>
            Flag to set AlwaysTriggerRollback http header in purchase call
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.OrderRequestV5.Parameter">
            <summary>
            URI parameters used by OrderBaseRequest
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.#ctor(System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5"/> instance.
            </summary>
            <param name="userId">Uri Parameter to identify the type of user authentication</param>
            <param name="orderId">The orderId to add the lineItem too</param>
            <param name="internalLineItemV5">Sets the LineItem object to be added to the order</param>
            <param name="alwaysTriggerRollback">Flag to set AlwaysTriggerRollback http header in purchase call</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.GetContent">
            <summary>
            Gets the HttpContent to send in the http request
            </summary>
            <returns>returns HttpContent to send in the http request</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.ProductId">
            <summary>
            Gets or sets the catalog product Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.SkuId">
            <summary>
            Gets or sets the catalog SKU Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.AvailabilityId">
            <summary>
            Gets or sets the catalog Availability Id of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.Quantity">
            <summary>
            Gets or sets the quantity of the item to add to the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.Beneficiary">
            <summary>
            Gets or sets the beneficiary to receive the line item. If not specified, this is the owner of the order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.RenewalContext">
            <summary>
            Gets or sets the renewal context of the line item.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.CampaignId">
            <summary>
            Gets or sets the campaign Id (CID) for the line item.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.OptionalCampaignId">
            <summary>
            Gets or sets the optional campaign identifier (OCID) of the item to add to the order. 
            This is sometimes called the Microsoft CID, but was changed to OCID for backward compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CheckoutOrderRequestV5">
            <summary>
            Represents a Check Out Order Request
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5">
            <summary>
            Represents a base Update Order Request
            This will be the base for requests such as "Checkout" and "Purchased"
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.#ctor(System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.PaymentInstrumentReference,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5"/> instance.
            </summary>
            <param name="userId">Uri Parameter to identify the type of user authentication</param>
            <param name="orderId">The orderId to add the lineItem too</param>
            <param name="billingInformation">Sets the paymentInstrument to use when checking out an order</param>
            <param name="orderState">Sets the state of the order. Valid values are "CheckingOut" and "Canceled" and "Purchased"</param>
            <param name="clientContext">Sets the client context associated with purchase</param>
            <param name="alwaysTriggerRollback">Flag to set AlwaysTriggerRollback http header in purchase call</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.GetContent">
            <summary>
            Gets the HttpContent to send in the http request
            </summary>
            <returns>returns HttpContent to send in the http request</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.BillingInformation">
            <summary>
            Sets the paymentInstrument to use when checking out an order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.FriendlyName">
            <summary>
            The friendly name for the order. 
            The client can use this for filtering during order retrieval.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.OrderState">
            <summary>
            Gets or sets the state of the order. Valid values are "CheckingOut" and "Canceled" and "Purchased"
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.ClientContext">
            <summary>
            Gets or sets the client context associated with purchase.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.UpdateOrderRequestV5.HttpMethod">
            <summary>
            Gets the HTTP method used by the HTTP request message
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CheckoutOrderRequestV5.#ctor(System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.PaymentInstrumentReference,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CheckoutOrderRequestV5"/> instance.
            </summary>
            <param name="userId">Uri Parameter to identify the type of user authentication</param>
            <param name="orderId">The orderId to add the lineItem too</param>
            <param name="billingInformation">Sets the paymentInstrument to use when checking out an order</param>
            <param name="clientContext">Sets the client context associated with purchase</param>
            <param name="alwaysTriggerRollback">Flag to set AlwaysTriggerRollback http header in purchase call</param>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5">
            <summary>
            Represents a Create Order Request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.#ctor(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.CatalogContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.V5.LineItemV5},System.String,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5"/> instance.
            </summary>
            <param name="userId">Uri Parameter to identify the type of user authentication</param>
            <param name="catalogContext">Catalog context for order</param>
            <param name="clientContext">Client context for order</param>
            <param name="lineItems">Sets the list of LineItem objects to be added to the order when it is created</param>
            <param name="orderState">The order state to set this cart to</param>
            <param name="alwaysTriggerRollback">Flag to set AlwaysTriggerRollback http header in purchase call</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.GetContent">
            <summary>
            Gets the HttpContent to send in the http request
            </summary>
            <returns>returns HttpContent to send in the http request</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.FriendlyName">
            <summary>
            The friendly name for the order. 
            The client can use this for filtering during order retrieval.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.CatalogContext">
            <summary>
            The catalog context for this order creation request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.ClientContext">
            <summary>
            The client context for this order creation request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.BillingInformation">
            <summary>
            Sets the paymentInstrument to use when checking out an order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.LineItems">
            <summary>
            Gets and Sets the list of LineItem objects to be added to the order when it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.OrderState">
            <summary>
            Gets and sets the order state
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.PurchasedOrderRequestV5">
            <summary>
            Represents a Purchased Order Request
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.PurchasedOrderRequestV5.#ctor(System.String,System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.PaymentInstrumentReference,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.PurchasedOrderRequestV5"/> instance.
            </summary>
            <param name="userId">Uri Parameter to identify the type of user authentication</param>
            <param name="orderId">The orderId to add the lineItem too</param>
            <param name="billingInformation">Sets the paymentInstrument to use when checking out an order</param>
            <param name="clientContext">Sets the client context associated with purchase</param>
            <param name="alwaysTriggerRollback">Flag to set AlwaysTriggerRollback http header in purchase call</param>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6">
            <summary>
            Represents a Create Order Request
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.ParameterNames">
            <summary>
            The list of query parameter names
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.GetUriParameters">
            <summary>
            Gets a set of parameters to include in the request path.
            </summary>
            <returns>A dictionary of name-value pairs for parameters to include in the path, or empty dictionary if no parameters are required.</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.GetQueryParameters">
            <summary>
            Gets a set of query string parameters for the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.GetContent">
            <summary>
            Gets the HttpContent to send in the request
            </summary>
            <returns>null unless overridden</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.UserId">
            <summary>
            The UserId to specify the caller and type of authentication model used
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.OrderId">
            <summary>
            The reference OrderId for the action
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.LineItemId">
            <summary>
            The reference LineItemId for the action
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.HttpMethod">
            <summary>
            Gets the HTTP method used by the HTTP request message
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.AlwaysTriggerRollback">
            <summary>
            Flag to set AlwaysTriggerRollback http header in purchase call
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.OrderRequestV6.Parameter">
            <summary>
            URI parameters used by OrderBaseRequest
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.OrderStateEditing">
            <summary>
            Set this order state for purchases that need to go to Editing state
            Paid apps can no longer be set to CheckingOut without PaymentInstrumentId, so use this state instead
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.OrderStatePurchased">
            <summary>
            Set this order state for free purchases that can complete order creation in one step
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.#ctor(System.String,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.CatalogContext,Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.ClientContext,System.Collections.Generic.IEnumerable{Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Internal.Request.LineItemV6},System.String,System.Boolean)">
            <summary>
            Constructs a new <see cref="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6"/> instance.
            </summary>
            <param name="userId">Uri Parameter to identify the type of user authentication</param>
            <param name="catalogContext">Catalog context for order</param>
            <param name="clientContext">Client context for order</param>
            <param name="lineItems">Sets the list of LineItem objects to be added to the order when it is created</param>
            <param name="orderState">The order state to set this cart to</param>
            <param name="alwaysTriggerRollback">Flag to set AlwaysTriggerRollback http header in purchase call</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.GetContent">
            <summary>
            Gets the HttpContent to send in the http request
            </summary>
            <returns>returns HttpContent to send in the http request</returns>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.BillingInformation">
            <summary>
            Sets the paymentInstrument to use when checking out an order.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.ClientContext">
            <summary>
            The client context for this order creation request
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.FriendlyName">
            <summary>
            The friendly name for the order. 
            The client can use this for filtering during order retrieval.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.LineItems">
            <summary>
            Gets and Sets the list of LineItem objects to be added to the order when it is created.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.Language">
            <summary>
            Gets or sets the language from which purchase is made
            This param now takes catalog locales
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.Market">
            <summary>
            Gets or sets the catalog market (e.g. "US").
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.OrderState">
            <summary>
            Gets or sets the state of the order. 
            The valid states are: Order StateDescriptionEditingThis is the default value if none is specified.
            CheckingOut This will result in the order being submitted for check out with taxes and final pricing being calculated. 
            There must be at least one item specified before checking out. 
            Pending More actions must be taken before the order can be moved to the Purchased state. 
            Purchased This will result in the order being submitted for purchase. 
            There must be at least one item specified before purchase.
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.CreateOrderRequestV6.UriTemplate">
            <summary>
            Gets the URI template for the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider">
            <summary>
            A class to provide data from Purchase.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.ServiceName">
            <summary>
            The name of the service.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.ContractVersion6">
            <summary>
            The API contract version to use.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,Microsoft.MarketplaceServices.Core.ICertificateLoader,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>PurchaseProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the service.</param>
            <param name="externalCertificateLoader"><see cref="T:Microsoft.MarketplaceServices.Core.ICertificateLoader"/> This is the preferred method to load a certificate to the request</param>
            <param name="clientTimeout">The timeout period for requests sent to the service</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>PurchaseProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the service.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.CreateOrderV5Async(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CreateOrderRequestV5,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Creates an Order and adds items to purchase
            </summary>
            <param name="request">The CreateOrderRequest</param>
            <param name="authorizationTicket">The MSA Authorization ticket value for the service</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
            <returns>A task which, when completed, contains the OrderV3 Response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.AddLineItemRequestV5Async(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.AddLineItemRequestV5,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Adds item to existing order
            </summary>
            <param name="request">The AddLineItemRequest</param>
            <param name="authorizationTicket">The MSA Authorization ticket value for the service</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
            <returns>A task which, when completed, contains the OrderV3 Response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.CheckoutOrderRequestV5Async(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.CheckoutOrderRequestV5,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Changes order to check-out stage
            </summary>
            <param name="request">The CheckoutOrderRequest</param>
            <param name="authorizationTicket">The MSA Authorization ticket value for the service</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
            <returns>A task which, when completed, contains the OrderV3 Response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.PurchasedOrderRequestV5Async(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.Contracts.Request.V5.PurchasedOrderRequestV5,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext)">
            <summary>
            Changes order to purchased stage
            </summary>
            <param name="request">The PurchasedOrderRequest</param>
            <param name="authorizationTicket">The MSA Authorization ticket value for the service</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
            <returns>A task which, when completed, contains the OrderV3 Response from the service</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Purchase.PurchaseProvider.MakeRequestAsync``1(Microsoft.Marketplace.Storefront.ServiceProviders.IRequest,System.String,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Boolean,System.String)">
            <summary>
            Sends a service request
            </summary>
            <typeparam name="TResult">The type of the response.</typeparam>
            <param name="request">The Order request.</param>
            <param name="authorizationTicket">The MSA Authorization ticket value for the service</param>
            <param name="loggingContext">The request <see cref="T:Microsoft.MarketplaceServices.Core.Logging.LoggingContext"/></param>
            <param name="contractVersion">The contract version to use.</param>
            <param name="alwaysTriggerRollback">Always trigger rollback for purchase call</param>
            <param name="ipAddress">The IP address of the caller to pass in as custom header to the purchase service</param>
            <returns>A task which, when completed, contains the catalog response from the Big Catalog.</returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.MarketParameter">
            <summary>
            Market code of the request. For example: us
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.LanguageParameter">
            <summary>
            Language code of the request. For example: en
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.ItemTypesParameter">
            <summary>
            Item type of results. For exampe: Apps
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.CountParameter">
            <summary>
            Number of items to return
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.ScenarioCriteriaParameter">
            <summary>
            Scenario criteria. For example: TopFree. Formerly known as itemCriteria.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.UserIdParameter">
            <summary>
            User ID
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.UserIdTypeParameter">
            <summary>
            User ID type. Puid or Anid.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.SkipItemsParameter">
            <summary>
            Indicates whether the results returned should be personalized.
            This parameter can be used in the browse lists scenario to return non personalized lists.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.IsPersonalizedParameter">
            <summary>
            Indicates whether the results returned should be personalized.
            This parameter can be used in the browse lists scenario to return non personalized lists.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.IsTestParameter">
            <summary>
            Indicates test requests.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.TopCategoriesParameter">
            <summary>
            L0/Top level categories of the request. Can be Apps, Games, or Apps.Games.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.CategoriesParameter">
            <summary>
            Category, e.g. "News &amp; weather"
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.SubcategoriesParameter">
            <summary>
            Subcategory, e.g. "News" (where parent category is "News &amp; weather")
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.ClientTypeParameter">
            <summary>
            The client performing the service request, e.g. "SFC" or "ME". Hard coded to DSX since we're not ME.
            This is used internally by Reco for telemetry. This was formerly known as SourceDevice.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.ArchitectureParameter">
            <summary>
            OS architecture (example: x86, x64). TBD by M$.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.DeviceFamilyParameter">
            <summary>
            The platform that the client represents a DeviceFamily
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.HardwareParameter">
            <summary>
            Specifies the client Hardware
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.OemIdParameter">
            <summary>
            Specifies the client OEM ID
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.ScmIdParameter">
            <summary>
            Specifies the client SCM ID
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.MobileOperatorParameter">
            <summary>
            Specifies the client SCM ID
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.UserMsaAgeParameter">
            <summary>
            User Msa Age
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.UserGenderParameter">
            <summary>
            User Gender
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Parameters.PreferredLanguagesParameter">
            <summary>
            Catalog Locales aka Preferred Lanugages of User
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoBaseRequest">
            <summary>
            Use this as the base class for creating RECO requests for specific scenarios (e.g. PicksForYou and Related)
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoBaseRequest.additionalQueryParameters">
            <summary>
            A collection of additional query parameters to include with the request.
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoCartRequest">
            <summary>
            Reco request for the cart scenario (based on items in your shopping cart)
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoListRequest">
            <summary>
            Reco request for the Picks For You scenario (personalized recommendations)
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoPicksRequest">
            <summary>
            Reco request for the Picks For You scenario (personalized recommendations)
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoRelatedRequest">
            <summary>
            Reco request for the Related scenario (items related to the seed items)
            </summary>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoAddOnsRequest">
            <summary>
            Return Top AddOns for a specific product - this list may be empty even if parent product has AddOns. A search call to M$ returns complete list of all AddOns for a parent product.
            </summary>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Provider.RecoProvider.#ctor(System.Uri,Microsoft.MarketplaceServices.Core.CertDefinition,System.TimeSpan,Microsoft.MarketplaceServices.Core.Logging.SequencedEventLogger,Microsoft.MarketplaceServices.Core.Counters.ICounterFactory)">
            <summary>
            Constructs a new <c>RecoProvider</c> instance.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Big Catalog service.</param>
            <param name="externalServiceCertDefinition">The <see cref="T:Microsoft.MarketplaceServices.Core.CertDefinition"/> describing the certificate needed to call the Big Catalog service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Big Catalog.</param>
            <param name="logger">The event logger to use.</param>
            <param name="counterFactory">The counter factory to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Provider.RecoProvider.#ctor(System.Uri,System.TimeSpan,System.Net.Http.HttpMessageHandler)">
            <summary>
            Constructs a new <c>RecoProvider</c> instance. Can be used in testing to inject a fake message handler.
            </summary>
            <param name="externalServiceBaseUri">The base URI for the Big Catalog service.</param>
            <param name="clientTimeout">The timeout period for requests sent to the Big Catalog.</param>
            <param name="messageHandler">The message handler to use.</param>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Provider.RecoProvider.GetPicksForYou(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoPicksRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Sends a PicksForYou request to Reco
            </summary>
            <param name="request">A RecoPicksRequest</param>
            <param name="loggingContext">The logging context from the controller</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A RecoResponse with the recommended objects, the reasons for the recommendation, and the confidence</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Provider.RecoProvider.GetList(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoListRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Sends a Top Lists request to Reco
            </summary>
            <param name="request">A RecoListRequest</param>
            <param name="loggingContext">The logging context from the controller</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A RecoResponse with the top items for the list type in the given request</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Provider.RecoProvider.GetRecoListForProduct(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoBaseRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.Threading.CancellationToken)">
            <summary>
            Sends a request to get a child reco list for a parent product, e.g. Related : "Apps similar to this one", AddOns: Top Add On for this product
            </summary>
            <param name="request">A RecoRelatedRequest which has a list of seed items</param>
            <param name="loggingContext">The logging context from the controller</param>
            <param name="cancellationToken">A cancellation token (invoked if the request takes too long)</param>
            <returns>A RecoResponse with the recommended objects, the reasons for the recommendation, and the confidence</returns>
        </member>
        <member name="M:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Provider.RecoProvider.PostRequestAsync(Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.Reco.Entities.Requests.RecoBaseRequest,Microsoft.MarketplaceServices.Core.Logging.LoggingContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates the HttpWebRequest object with URL parameters, headers and request body
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager">
            <summary>
            This class is a composite meant to serve as a proxy for accessing the various 
            data providers the Store Edge service might have to call in to obtain the data 
            for generating the client response.
            </summary>
        </member>
        <member name="F:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.contosoCatalogProvider">
            <summary>
            This is purely to overcome the issue that Contoso APIs has no DEV support
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.ContosoCatalogProvider">
            <summary>
            The provider for the BigCatalog service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.BigCatalogProvider">
            <summary>
            The provider for the BigCatalog service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.EntitlementCollectionsProvider">
            <summary>
            The provider for the Entitlement Collections service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.DomainDataCache">
            <summary>
            The cache for the domain data service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.PurchaseProvider">
            <summary>
            The provider for the Purchase service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.RatingsProvider">
            <summary>
            The provider for the Ratings and Review service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.RecoProvider">
            <summary>
            The provider for the Recommendation service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.CuratedProvider">
            <summary>
            The provider for the Curated service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.PageProvider">
            <summary>
            The provider for the Layout service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.DeviceManagementProvider">
            <summary>
            The provider for the DeviceManagement service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.MVDiscoveryChannelProvider">
            <summary>
            The provider for the DiscoveryChannel service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.MasterDataProvider">
            <summary>
            The provider for the MasterData service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.GroupsProvider">
            <summary>
            The provider for the flights service
            </summary>
        </member>
        <member name="P:Microsoft.Marketplace.Storefront.StoreEdgeFD.Providers.ServiceProvidersManager.ArtistsSearchProvider">
            <summary>
            The provider for the artists search service
            </summary>
        </member>
    </members>
</doc>
